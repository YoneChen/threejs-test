/*! For license information please see app.7b7e0db14f66770003f8.js.LICENSE.txt */
!function(){var t={1826:function(t,e,n){"use strict";n.r(e),n.d(e,{HandPose:function(){return qr},load:function(){return Xr}});var r={};n.r(r),n.d(r,{json:function(){return D}});var i={};n.r(i),n.d(i,{json:function(){return O}});var o={};n.r(o),n.d(o,{json:function(){return L}});var s={};n.r(s),n.d(s,{json:function(){return k}});var a={};n.r(a),n.d(a,{json:function(){return P}});var u={};n.r(u),n.d(u,{json:function(){return $}});var c={};n.r(c),n.d(c,{json:function(){return B}});var l={};n.r(l),n.d(l,{json:function(){return F}});var h={};n.r(h),n.d(h,{json:function(){return U}});var p={};n.r(p),n.d(p,{json:function(){return z}});var d={};n.r(d),n.d(d,{json:function(){return V}});var f={};n.r(f),n.d(f,{json:function(){return W}});var m={};n.r(m),n.d(m,{json:function(){return H}});var g={};n.r(g),n.d(g,{json:function(){return G}});var y={};n.r(y),n.d(y,{json:function(){return j}});var v={};n.r(v),n.d(v,{json:function(){return X}});var x={};n.r(x),n.d(x,{json:function(){return q}});var b,w,_=n(6743);!function(t){t[t.DT_INVALID=0]="DT_INVALID",t[t.DT_FLOAT=1]="DT_FLOAT",t[t.DT_DOUBLE=2]="DT_DOUBLE",t[t.DT_INT32=3]="DT_INT32",t[t.DT_UINT8=4]="DT_UINT8",t[t.DT_INT16=5]="DT_INT16",t[t.DT_INT8=6]="DT_INT8",t[t.DT_STRING=7]="DT_STRING",t[t.DT_COMPLEX64=8]="DT_COMPLEX64",t[t.DT_INT64=9]="DT_INT64",t[t.DT_BOOL=10]="DT_BOOL",t[t.DT_QINT8=11]="DT_QINT8",t[t.DT_QUINT8=12]="DT_QUINT8",t[t.DT_QINT32=13]="DT_QINT32",t[t.DT_BFLOAT16=14]="DT_BFLOAT16",t[t.DT_FLOAT_REF=101]="DT_FLOAT_REF",t[t.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",t[t.DT_INT32_REF=103]="DT_INT32_REF",t[t.DT_UINT8_REF=104]="DT_UINT8_REF",t[t.DT_INT16_REF=105]="DT_INT16_REF",t[t.DT_INT8_REF=106]="DT_INT8_REF",t[t.DT_STRING_REF=107]="DT_STRING_REF",t[t.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",t[t.DT_INT64_REF=109]="DT_INT64_REF",t[t.DT_BOOL_REF=110]="DT_BOOL_REF",t[t.DT_QINT8_REF=111]="DT_QINT8_REF",t[t.DT_QUINT8_REF=112]="DT_QUINT8_REF",t[t.DT_QINT32_REF=113]="DT_QINT32_REF",t[t.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF"}(b||(b={})),function(t){let e;!function(t){t[t.LEGACY=0]="LEGACY",t[t.V1=1]="V1",t[t.V2=2]="V2"}(e=t.CheckpointFormatVersion||(t.CheckpointFormatVersion={}))}(w||(w={}));const S={};function T(t){return S[t]}function E(t,e,n,r,i){const o=e.inputParams[t];if(o&&void 0!==o.inputIndexStart){const t=o.inputIndexStart,s=0===o.inputIndexEnd?void 0:void 0===o.inputIndexEnd?t+1:o.inputIndexEnd;if("tensor"===o.type)return M(e.inputNames[o.inputIndexStart],n,r,i);if("tensors"===o.type)return e.inputNames.slice(t,s).map((t=>M(t,n,r,i)));const a=M(e.inputNames.slice(t)[0],n,r,i),u=a.dataSync();return"number"===o.type?u[0]:_.D5U.GX(a.shape,u)}const s=e.attrParams[t];return s&&s.value}function M(t,e,n,r){const[i,o]=N(t);if(null!=r){const t=r.getHashTableHandleByName(i);if(null!=t)return t}const s=n.currentContextIds.find((t=>!!e[A(i,t)]));return void 0!==s?e[A(i,s)][o]:void 0}function C(t,e){const[n,r]=N(t);return[A(n,e&&e.currentContextId),r]}function A(t,e){return e?`${t}-${e}`:t}function N(t){const e=t.split(":");return 1===e.length?[t,0]:[e[0],Number(e[e.length-1])]}function R(t,e,n){let r=E("pad",t,e,n);if("explicit"===r){r=E("explicitPaddings",t,e,n);const i=[[0,0],[0,0],[0,0],[0,0]];for(let t=0;t<4;t++)i[t][0]=r[2*t],i[t][1]=r[2*t+1];return i}return r}function I(t){return t.kept?t:(0,_.d9v)(t)}const D=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],O=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"clip_value_min",name:"clipValueMin",type:"number"},{tfName:"clip_value_max",name:"clipValueMax",type:"number"}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"clipValueMin",name:"clipValueMin",type:"number",defaultValue:0},{tfName:"clipValueMax",name:"clipValueMax",type:"number",defaultValue:6}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],L=[{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],k=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],P=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],$=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],B=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],F=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],U=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]}],z=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],V=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],W=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],H=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],G=[{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],j=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool",notSupported:!0}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],X=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],q=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]}];class Y{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const t=[].concat(...[r,i,o,s,a,u,c,d,p,l,f,m,g,y,v,x,h].map((t=>t.json)));this.opMappers=t.reduce(((t,e)=>(t[e.tfOpName]=e,t)),{})}transformGraph(t,e={}){const n=t.node,r=[],i=[],o=[],s=n.reduce(((t,e)=>(t[e.name]=this.mapNode(e),e.op.startsWith("Placeholder")?r.push(t[e.name]):"Const"===e.op?i.push(t[e.name]):null!=e.input&&0!==e.input.length||o.push(t[e.name]),t)),{});let a=[];const u=[];let c={},l={};null!=e&&(c=this.mapSignatureEntries(e.inputs),l=this.mapSignatureEntries(e.outputs));const h=Object.keys(s);h.forEach((t=>{const e=s[t];e.inputNames.forEach((t=>{const[n]=C(t);e.inputs.push(s[n]),s[n].children.push(e)}))})),0===Object.keys(l).length?h.forEach((t=>{const e=s[t];0===e.children.length&&u.push(e)})):Object.keys(l).forEach((t=>{const[e]=C(t),n=s[e];null!=n&&(n.signatureKey=l[t],u.push(n))})),Object.keys(c).length>0?Object.keys(c).forEach((t=>{const[e]=C(t),n=s[e];n&&(n.signatureKey=c[t],a.push(n))})):a=r;let p={};null!=t.library&&null!=t.library.function&&(p=t.library.function.reduce(((t,e)=>(t[e.signature.name]=this.mapFunction(e),t)),{}));const d={nodes:s,inputs:a,outputs:u,weights:i,placeholders:r,signature:e,functions:p};return o.length>0&&(d.initNodes=o),d}mapSignatureEntries(t){return Object.keys(t||{}).reduce(((e,n)=>(e[t[n].name]=n,e)),{})}mapNode(t){const e=T(t.op)||this.opMappers[t.op]||{};null==t.attr&&(t.attr={});const n={name:t.name,op:t.op,category:e.category,inputNames:(t.input||[]).map((t=>t.startsWith("^")?t.substr(1):t)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:t.attr};return null!=e.inputs&&(n.inputParams=e.inputs.reduce(((t,e)=>(t[e.name]={type:e.type,inputIndexStart:e.start,inputIndexEnd:e.end},t)),{})),null!=e.attrs&&(n.attrParams=e.attrs.reduce(((e,n)=>{const r=n.type;let i;switch(n.type){case"string":i=Z(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=Z(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":i=at(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=at(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":i=Q(t.attr,n.tfName,n.defaultValue||0),void 0===i&&n.tfDeprecatedName&&(i=Q(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":i=st(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=st(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":i=J(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=J(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":i=ct(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=ct(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":i=ot(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=ot(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":i=ut(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=ut(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":i=nt(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=nt(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":i=rt(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=rt(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":i=et(t.attr,n.tfName,n.defaultValue),void 0===i&&n.tfDeprecatedName&&(i=et(t.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${t.op}`)}return e[n.name]={value:i,type:r},e}),{})),n}mapFunction(t){const e=t.nodeDef,n=[];let r={};null!=e&&(r=e.reduce(((t,e)=>(t[e.name]=this.mapNode(e),"Const"===e.op&&n.push(t[e.name]),t)),{}));const i=[],o=[];t.signature.inputArg.forEach((t=>{const[e]=C(t.name),n={name:e,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:tt(t.type),type:"dtype"}},children:[]};n.signatureKey=t.name,i.push(n),r[e]=n})),Object.keys(r).forEach((t=>{const e=r[t];e.inputNames.forEach((t=>{const[n]=C(t);e.inputs.push(r[n]),r[n].children.push(e)}))}));const s=t.ret;t.signature.outputArg.forEach((t=>{const[e,n]=C(s[t.name]),i=r[e];null!=i&&(i.defaultOutput=n,o.push(i))}));const a=this.mapArgsToSignature(t);return{nodes:r,inputs:i,outputs:o,weights:n,placeholders:[],signature:a}}mapArgsToSignature(t){return{methodName:t.signature.name,inputs:t.signature.inputArg.reduce(((t,e)=>(t[e.name]=this.mapArgToTensorInfo(e),t)),{}),outputs:t.signature.outputArg.reduce(((e,n)=>(e[n.name]=this.mapArgToTensorInfo(n,t.ret),e)),{})}}mapArgToTensorInfo(t,e){let n=t.name;return null!=e&&(n=e[n]),{name:n,dtype:t.type}}}function K(t,e){const n=Array.isArray(t)?String.fromCharCode.apply(null,t):function(t){const e=(0,_.OBj)().global;if(void 0!==e.atob)return e.atob(t);if("undefined"!=typeof Buffer)return new Buffer(t,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(t);return e?n:n.toLowerCase()}function Z(t,e,n,r=!1){const i=t[e];return null!=i?K(i.s,r):n}function J(t,e,n){const r=t[e];return r?r.b:n}function Q(t,e,n){const r=t[e]||{},i=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof i?i:parseInt(i,10)}function tt(t){switch("string"==typeof t&&(t=b[t]),t){case b.DT_FLOAT:return"float32";case b.DT_INT32:case b.DT_INT64:case b.DT_INT8:case b.DT_UINT8:return"int32";case b.DT_BOOL:return"bool";case b.DT_DOUBLE:return"float32";case b.DT_STRING:return"string";default:return null}}function et(t,e,n){const r=t[e];return r&&r.func?r.func.name:n}function nt(t,e,n){const r=t[e];return r&&r.type?tt(r.type):n}function rt(t,e,n){const r=t[e];return r&&r.list&&r.list.type?r.list.type.map((t=>tt(t))):n}function it(t){if(!t.unknownRank)return null!=t.dim?t.dim.map((t=>"number"==typeof t.size?t.size:parseInt(t.size,10))):[]}function ot(t,e,n){const r=t[e];return r&&r.shape?it(r.shape):n}function st(t,e,n){const r=t[e];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((t=>"number"==typeof t?t:parseInt(t,10))):n}function at(t,e,n,r=!1){const i=t[e];return i&&i.list&&i.list.s?i.list.s.map((t=>K(t,r))):n}function ut(t,e,n){const r=t[e];return r&&r.list&&r.list.shape?r.list.shape.map((t=>it(t))):n}function ct(t,e,n){const r=t[e];return r&&r.list&&r.list.b?r.list.b:n}class lt{constructor(t,e,n){this.node=t,this.tensorMap=e,this.context=n,this.inputs=[],this.attrs={},this.inputs=t.inputNames.map((t=>this.getInput(t))),null!=t.rawAttrs&&(this.attrs=Object.keys(t.rawAttrs).reduce(((t,e)=>(t[e]=this.getAttr(e),t)),{}))}getInput(t){return M(t,this.tensorMap,this.context)}getAttr(t,e){const n=this.node.rawAttrs[t];if(null!=n.tensor)return M(t,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return Q(this.node.rawAttrs,t,e);if(null!=n.s)return Z(this.node.rawAttrs,t,e);if(null!=n.b)return J(this.node.rawAttrs,t,e);if(null!=n.shape)return ot(this.node.rawAttrs,t,e);if(null!=n.type)return nt(this.node.rawAttrs,t,e);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return st(this.node.rawAttrs,t,e);if(null!=n.list.s)return at(this.node.rawAttrs,t,e);if(null!=n.list.shape)return ut(this.node.rawAttrs,t,e);if(null!=n.list.b)return ct(this.node.rawAttrs,t,e);if(null!=n.list.type)return rt(this.node.rawAttrs,t,e)}return e}}var ht=n(6407),pt=n(7097),dt=n(9121),ft=n(3740),mt=n(569),gt=n(2668);const yt=(0,gt.op)({addN_:function(t){mt.hu(Array.isArray(t),(()=>"The argument passed to tf.addN() must be a list of tensors")),mt.hu(t.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${t.length}`));const e=t.map(((t,e)=>(0,ft._1)(t,`tensors${e}`,"addN"))),n=e[0];e.forEach((t=>{if(t.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),e.forEach((t=>{if(!mt.cO(t.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=e;return pt.BV.runKernelFunc(((t,n)=>{const r=t.addN(e);return n(e),r}),r,null,dt.Xz)}});var vt=n(5228),xt=n(4841),bt=n(1274),wt=n(9322),_t=n(9165),St=n(827),Tt=n(4513),Et=n(632),Mt=n(3453),Ct=n(5265),At=n(6235),Nt=n(7839),Rt=n(1470),It=n(2421),Dt=n(1891),Ot=n(7037),Lt=n(9812),kt=n(369),Pt=n(6825),$t=n(1661),Bt=n(173),Ft=n(2699),Ut=n(3233),zt=n(4650),Vt=n(4842),Wt=n(3426),Ht=n(6943),Gt=n(2597),jt=n(7474),Xt=n(4386),qt=n(7370),Yt=n(9036),Kt=n(766),Zt=n(7409),Jt=n(7809),Qt=n(5503),te=n(625),ee=n(9331),ne=n(4434),re=n(3254),ie=n(3694),oe=n(3261),se=n(248),ae=n(1869),ue=n(1173),ce=n(2279),le=n(2634),he=n(9451),pe=n(9133),de=n(8151);function fe(t,e,n=""){_.D5U.hu(function(t,e){if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(-1!==t[n]&&-1!==e[n]&&t[n]!==e[n])return!1;return!0}(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}class me{constructor(t,e,n,r,i,o,s){this.name=t,this.dtype=e,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=i,this.dynamicSize=o,this.clearAfterRead=s,this.tensors=[],this.closed_=!1,this.idTensor=(0,_.iD$)(0),(0,_.CnY)(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.tensor.id)||e.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||t>=this.size())throw new Error(`Tried to read from index ${t}, but array size is: ${this.size()}`);const e=this.tensors[t];if(e.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${t} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(e.cleared=!0),e.read=!0,e.tensor}readMany(t){return t.map((t=>this.read(t)))}write(t,e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(t<0||!this.dynamicSize&&t>=this.maxSize)throw new Error(`Tried to write to index ${t}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[t]||{};if(e.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t},\n          because the value dtype is ${e.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=e.shape),fe(this.elementShape,e.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${t}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${t}, because it has already been written.`);n.tensor=e,(0,_.CnY)(e),n.written=!0,this.tensors[t]=n}writeMany(t,e){if(t.length!==e.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${t.length} is not the same as tensors size: ${e.length}.`);t.forEach(((t,n)=>this.write(t,e[n])))}gather(t,e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${e}`);if(t)t=t.slice(0,this.size());else{t=[];for(let e=0;e<this.size();e++)t.push(e)}if(0===t.length)return(0,_.XeE)([],[0].concat(this.elementShape));const n=this.readMany(t);return fe(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),(0,_.knu)(n,0)}concat(t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${t}`);if(0===this.size())return(0,_.XeE)([],[0].concat(this.elementShape));const e=[];for(let t=0;t<this.size();t++)e.push(t);const n=this.readMany(e);return fe(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),(0,_.zoF)(n,0)}scatter(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const n=Math.max(...t);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(t,(0,_.HHK)(e,0))}split(t,e){if(e.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${e.dtype}`);let n=0;const r=t.map((t=>(n+=t,n)));if(n!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${e.shape}`);if(!this.dynamicSize&&t.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${t.length}), and the TensorArray is not marked as dynamically resizeable`);const i=0===n?0:e.size/n,o=[];(0,_.lub)((()=>{e=(0,_.XLQ)(e,[1,n,i]);for(let n=0;n<t.length;++n){const s=[0,0===n?0:r[n-1],0],a=[1,t[n],i];o[n]=(0,_.XLQ)((0,_.tPi)(e,s,a),this.elementShape)}return o}));const s=[];for(let e=0;e<t.length;e++)s[e]=e;this.writeMany(s,o)}}class ge{constructor(t,e,n,r=-1){this.tensors=t,this.elementShape=e,this.elementDtype=n,null!=t&&t.forEach((t=>{if(n!==t.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${t.dtype}`);fe(e,t.shape,"TensorList shape mismatch: "),(0,_.CnY)(t)})),this.idTensor=(0,_.iD$)(0),this.maxNumElements=r,(0,_.CnY)(this.idTensor)}get id(){return this.idTensor.id}copy(){return new ge([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(t){this.tensors.forEach((e=>{null!=t&&t.has(e.id)||e.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(t,e,n=-1){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);return fe(t,this.elementShape,"TensorList shape mismatch: "),(0,_.lub)((()=>{const e=this.tensors.map((e=>(0,_.XLQ)(e,t)));return(0,_.knu)(e,0)}))}popBack(t,e){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=this.tensors.pop();return fe(n.shape,t,"TensorList shape mismatch: "),(0,_.XLQ)(n,t)}pushBack(t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(fe(t.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");(0,_.CnY)(t),this.tensors.push(t)}resize(t){if(t<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${t}`);if(-1!==this.maxNumElements&&t>this.maxNumElements)throw new Error(`TensorListResize input size ${t} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=t}getItem(t,e,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(t<0||t>this.tensors.length)throw new Error(`Trying to access element ${t} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[t])throw new Error(`element at index ${t} is null.`);return fe(this.tensors[t].shape,e,"TensorList shape mismatch: "),this.tensors[t]}setItem(t,e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(t<0||-1!==this.maxNumElements&&t>=this.maxNumElements)throw new Error(`Trying to set element ${t} in a list with max ${this.maxNumElements} elements.`);fe(this.elementShape,e.shape,"TensorList shape mismatch: "),(0,_.CnY)(e),this.tensors[t]=e}gather(t,e,n){if(e!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e}, but list elements ${this.elementDtype}`);return fe(this.elementShape,n,"TensorList shape mismatch: "),0===(t=t.slice(0,this.size())).length?(0,_.XeE)([],[0].concat(this.elementShape)):(0,_.lub)((()=>{const e=t.map((t=>(0,_.XLQ)(this.tensors[t],n)));return(0,_.knu)(e,0)}))}concat(t,e){if(t&&t!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${t}`);return fe(this.elementShape,e,"TensorList shape mismatch: "),0===this.size()?(0,_.XeE)([],[0].concat(this.elementShape)):(0,_.lub)((()=>{const t=this.tensors.map((t=>(0,_.XLQ)(t,e)));return(0,_.zoF)(t,0)}))}}var ye=n(1355),ve=n(4794),xe=n(633),be=n(747),we=n(2200),_e=n(6013),Se=n(9832),Te=n(2582),Ee=n(9323),Me=n(4968);const Ce=(0,gt.op)({fusedConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:i="NHWC",dilations:o=[1,1],dimRoundingMode:s,bias:a,activation:u="linear",preluActivationWeights:c}){if(u=u||"linear",!1===(0,Ee.uy)(pt.BV.state.gradientDepth,u)){let l=(0,ve.T)(t,e,n,r,i,o,s);return null!=a&&(l=(0,ht.I)(l,a)),(0,Ee.QH)(l,u,c)}const l=(0,ft._1)(t,"x","conv2d"),h=(0,ft._1)(e,"filter","conv2d");let p=l,d=!1;3===l.rank&&(d=!0,p=(0,Me.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]])),mt.hu(4===p.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${p.rank}.`)),mt.hu(4===h.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${h.rank}.`)),null!=s&&mt.hu(mt.GN(r),(()=>`Error in fused conv2d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${r}.`)),mt.hu(p.shape[3]===h.shape[2],(()=>`Error in conv2d: depth of input (${p.shape[3]}) must match input depth for filter ${h.shape[2]}.`)),mt.hu(Te.jT(n,o),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`)),mt.hu("NHWC"===i,(()=>`Error in conv2d: got dataFormat of ${i} but only NHWC is currently supported.`));const f=Te.Ix(p.shape,h.shape,n,o,r,s);let m,g;null!=a&&(m=(0,ft._1)(a,"bias","fused conv2d"),[m]=(0,be.T_)(m,l),we.$N(f.outShape,m.shape)),null!=c&&(g=(0,ft._1)(c,"prelu weights","fused conv2d"));const y=(t,e)=>{const[i,s,a,c]=e,l=(0,Ee.Fr)(t,a,u);mt.hu(Te.I0(o),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`));const h=[(0,Se._)(s.shape,l,i,n,r),(0,_e.p)(s,l,i.shape,n,r)];if(null!=c){const t=(0,Ee.pf)(c,l);h.push(t)}return h},v=t=>t.fusedConv2d({input:p,filter:h,convInfo:f,bias:m,activation:u,preluActivationWeights:g}),x={x:p,filter:h,bias:m,preluActivationWeights:g},b={strides:n,pad:r,dataFormat:i,dilations:o,dimRoundingMode:s,activation:u};return null==a?(0,xe.cb)(((t,e,n)=>{let r=pt.BV.runKernelFunc(v,x,null,dt._V,b);return n([e,t,r]),d&&(r=(0,Me.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(p,h):(0,xe.cb)(((t,e,n,r)=>{let i=pt.BV.runKernelFunc(v,x,null,dt._V,b);return r([e,t,i,n]),d&&(i=(0,Me.X)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:y}}))(p,h,m)}});var Ae=n(4718),Ne=n(8098),Re=n(4375);const Ie=(0,gt.op)({fusedDepthwiseConv2d_:function({x:t,filter:e,strides:n,pad:r,dataFormat:i="NHWC",dilations:o=[1,1],dimRoundingMode:s,bias:a,activation:u="linear",preluActivationWeights:c}){if(!1===(0,Ee.uy)(pt.BV.state.gradientDepth,u)){let l=(0,Ae.B)(t,e,n,r,i,o,s);return null!=a&&(l=(0,ht.I)(l,a)),(0,Ee.QH)(l,u,c)}const l=(0,ft._1)(t,"x","depthwiseConv2d"),h=(0,ft._1)(e,"filter","depthwiseConv2d");let p=l,d=!1;3===l.rank&&(d=!0,p=(0,Me.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]])),mt.hu(4===p.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${p.rank}.`)),mt.hu(4===h.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${h.rank}.`)),mt.hu(p.shape[3]===h.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${p.shape[3]}) must match the inChannels dimension in filter ${h.shape[2]}.`)),null==o&&(o=[1,1]),mt.hu(Te.jT(n,o),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`)),null!=s&&mt.hu(mt.GN(r),(()=>`Error in fused depthwiseConv2d: pad must be an integer when using dimRoundingMode ${s} but got pad ${r}.`));const f=Te.Ix(p.shape,h.shape,n,o,r,s,!0);let m,g;null!=a&&(m=(0,ft._1)(a,"bias","fused conv2d"),[m]=(0,be.T_)(m,l),we.$N(f.outShape,m.shape)),null!=c&&(g=(0,ft._1)(c,"prelu weights","fused depthwiseConv2d"));const y=(t,e)=>{mt.hu(Te.I0(o),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[i,a,c,l]=e,h=(0,Ee.Fr)(t,c,u),p=(0,Re.v)(a.shape,h,i,n,r,o,s),d=(0,Ne.z)(a,h,i.shape,n,r,o,s);return null!=l?[p,d,(0,Ee.pf)(m,h)]:[p,d]},v=t=>t.fusedDepthwiseConv2D({input:p,filter:h,convInfo:f,bias:m,activation:u,preluActivationWeights:g}),x={x:p,filter:h,bias:m,preluActivationWeights:g},b={strides:n,pad:r,dataFormat:i,dilations:o,dimRoundingMode:s,activation:u};return null==a?(0,xe.cb)(((t,e,n)=>{let r=pt.BV.runKernelFunc(v,x,null,dt.lu,b);return n([e,t,r]),d&&(r=(0,Me.X)(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:y}}))(p,h):(0,xe.cb)(((t,e,n,r)=>{let i=pt.BV.runKernelFunc(v,x,null,dt.lu,b);return r([e,t,i,n]),d&&(i=(0,Me.X)(i,[i.shape[1],i.shape[2],i.shape[3]])),{value:i,gradFunc:y}}))(p,h,m)}});var De=n(8687);const Oe=(0,gt.op)({fusedMatMul_:function({a:t,b:e,transposeA:n=!1,transposeB:r=!1,bias:i,activation:o="linear",preluActivationWeights:s}){if(!1===(0,Ee.uy)(pt.BV.state.gradientDepth,o)){let a=(0,De.O)(t,e,n,r);return null!=i&&(a=(0,ht.I)(a,i)),(0,Ee.QH)(a,o,s)}let a=(0,ft._1)(t,"a","fused matMul"),u=(0,ft._1)(e,"b","fused matMul");[a,u]=(0,be.T_)(a,u);const c=n?a.shape[a.rank-2]:a.shape[a.rank-1],l=r?u.shape[u.rank-1]:u.shape[u.rank-2],h=n?a.shape[a.rank-1]:a.shape[a.rank-2],p=r?u.shape[u.rank-2]:u.shape[u.rank-1],d=a.shape.slice(0,-2),f=u.shape.slice(0,-2),m=mt.NA(d),g=mt.NA(f);mt.hu(a.rank>=2&&u.rank>=2&&a.rank===u.rank,(()=>`Error in fused matMul: inputs must have the same rank of at least 2, got ranks ${a.rank} and ${u.rank}.`)),mt.hu(mt.cO(d,f),(()=>`Error in fused matMul: outer dimensions (${d}) and (${f}) of Tensors with shapes ${a.shape} and ${u.shape} must match.`)),mt.hu(c===l,(()=>`Error in fused matMul: inner shapes (${c}) and (${l}) of Tensors with shapes ${a.shape} and ${u.shape} and transposeA=${n} and transposeB=${r} must match.`));const y=a.shape.slice(0,-2).concat([h,p]),v=n?(0,Me.X)(a,[m,c,h]):(0,Me.X)(a,[m,h,c]),x=r?(0,Me.X)(u,[g,p,l]):(0,Me.X)(u,[g,l,p]);let b,w;null!=i&&(b=(0,ft._1)(i,"bias","fused matMul"),[b]=(0,be.T_)(b,a),we.$N(y,b.shape)),null!=s&&(w=(0,ft._1)(s,"prelu weights","fused matMul"));const _=(t,e)=>{const[s,a,u,c]=e,l=(0,Ee.Fr)((0,Me.X)(t,u.shape),u,o);let h,p;return n||r?!n&&r?(h=(0,De.O)(l,a,!1,!1),p=(0,De.O)(l,s,!0,!1)):n&&!r?(h=(0,De.O)(a,l,!1,!0),p=(0,De.O)(s,l,!1,!1)):(h=(0,De.O)(a,l,!0,!0),p=(0,De.O)(l,s,!0,!0)):(h=(0,De.O)(l,a,!1,!0),p=(0,De.O)(s,l,!0,!1)),null!=i?[h,p,(0,Ee.pf)(c,l)]:[h,p]},S=t=>t.fusedBatchMatMul({a:v,b:x,transposeA:n,transposeB:r,bias:b,activation:o,preluActivationWeights:w}),T={a:v,b:x,bias:b,preluActivationWeights:w},E={transposeA:n,transposeB:r,activation:o};return null==i?(0,xe.cb)(((t,e,n)=>{const r=pt.BV.runKernelFunc(S,T,null,dt.us,E);return n([t,e,r]),{value:(0,Me.X)(r,y),gradFunc:_}}))(v,x):(0,xe.cb)(((t,e,n,r)=>{const i=pt.BV.runKernelFunc(S,T,null,dt.us,E);return r([t,e,i,n]),{value:(0,Me.X)(i,y),gradFunc:_}}))(v,x,b)}});var Le=n(1405);const ke=(0,gt.op)({conv3d_:function(t,e,n,r,i="NDHWC",o=[1,1,1]){const s=(0,ft._1)(t,"x","conv3d"),a=(0,ft._1)(e,"filter","conv3d");let u=s,c=!1;4===s.rank&&(c=!0,u=(0,Me.X)(s,[1,s.shape[0],s.shape[1],s.shape[2],s.shape[3]])),mt.hu(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),mt.hu(5===a.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${a.rank}.`)),mt.hu(u.shape[4]===a.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${a.shape[3]}.`)),mt.hu((0,Te.jT)(n,o),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${o}'`)),mt.hu("NDHWC"===i,(()=>`Error in conv3d: got dataFormat of ${i} but only NDHWC is currently supported.`));const l={x:u,filter:a},h={strides:n,pad:r,dataFormat:i,dilations:o},p=pt.BV.runKernelFunc(((t,e)=>{const i=Te.jw(u.shape,a.shape,n,o,r),s=t.conv3d(u,a,i);return e([u,a]),s}),l,null,dt.x1,h);return c?(0,Me.X)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var Pe=n(5176),$e=n(1174);const Be=(0,gt.op)({maxPoolWithArgmax_:function(t,e,n,r,i=!1){const o={x:(0,ft._1)(t,"x","maxPoolWithArgmax")},s={filterSize:e,strides:n,pad:r,includeBatchInIndex:i},a=pt.BV.runKernel(dt.vF,o,s);return{result:a[0],indexes:a[1]}}});var Fe=n(4368),Ue=n(2271);const ze=(0,gt.op)({avgPool3d_:function(t,e,n,r,i,o="NDHWC",s){null==s?s=[1,1,1]:(0,Fe.MX)("dilations is deprecated, this field will be gone in v3.0.0.");const a=(0,ft._1)(t,"x","avgPool3d","float32");let u=a,c=!1;4===a.rank&&(c=!0,u=(0,Me.X)(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),mt.hu(5===u.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${u.rank}.`)),mt.hu("NDHWC"===o,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`)),mt.hu(Te.jT(n,s),(()=>`Error in avgPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=i&&mt.hu(mt.GN(r),(()=>`Error in avgPool3d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const l={x:u},h={filterSize:e,strides:n,pad:r,dimRoundingMode:i,dataFormat:o,dilations:s};let p=pt.BV.runKernelFunc(((t,a)=>{null==s&&(s=[1,1,1]);const c=Te.pl(u.shape,e,n,s,r,i,o);return a([u]),t.avgPool3d(u,c)}),l,null,dt._k,h);return p=(0,Ue.p)(p,u.dtype),c?(0,Me.X)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Ve=(0,gt.op)({maxPool3d_:function(t,e=[1,1,1],n,r,i,o="NDHWC",s){null==s?s=[1,1,1]:(0,Fe.MX)("dilations is deprecated, this field will be gone in v3.0.0.");const a=(0,ft._1)(t,"x","maxPool3d");let u=a,c=!1;4===a.rank&&(c=!0,u=(0,Me.X)(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]])),mt.hu(5===u.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${u.rank}.`)),mt.hu("NDHWC"===o,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${o}`)),mt.hu(Te.jT(n,s),(()=>`Error in maxPool3d: Either strides or dilations must be 1. Got strides ${n} and dilations '${s}'`)),null!=i&&mt.hu(mt.GN(r),(()=>`Error in maxPool3d: pad must be an integer when using, dimRoundingMode ${i} but got pad ${r}.`));const l={x:u},h={filterSize:e,strides:n,pad:r,dimRoundingMode:i,dataFormat:o,dilations:s},p=pt.BV.runKernelFunc(((t,a)=>{null==s&&(s=[1,1,1]);const c=Te.pl(u.shape,e,n,s,r,i,o),l=t.maxPool3d(u,c);return a([u,l]),l}),l,null,dt.OA,h);return c?(0,Me.X)(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}});var We=n(557);function He(t,e,n){const[r,i]=E("fusedOps",t,e,n),o="biasadd"===r,s="prelu"===i,a="fusedbatchnorm"===r,u=E("numArgs",t,e,n);if(o){if(s&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(a)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported.");const c=E("strides",t,e,n),l=R(t,e,n),h=E("dataFormat",t,e,n).toUpperCase(),p=E("dilations",t,e,n),[d,f]=E("args",t,e,n);return{stride:c,pad:l,dataFormat:h,dilations:p,biasArg:d,preluArg:f,activationFunc:i}}var Ge=n(4006);function je(t,e,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:t,stop:e,num:n};return pt.BV.runKernelFunc((r=>r.linspace(t,e,n)),{},null,dt.e7,r)}const Xe=(0,gt.op)({multinomial_:function(t,e,n,r=!1){const i=(0,ft._1)(t,"logits","multinomial"),o=i.size,s=i.rank;if(o<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${o}.`);if(s>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${s}`);n=n||Math.random();const a=1===s?(0,Me.X)(i,[1,-1]):i,u=pt.BV.runKernelFunc((t=>t.multinomial(a,r,e,n)),{logits2D:a});return 1===s?(0,Me.X)(u,[u.size]):u}});var qe=n(6708),Ye=n(4917),Ke=n(7846),Ze=n(2657),Je=n(6377);class Qe{constructor(t,e,n,r,i){this.mean=t,this.stdDev=e,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const o=i||Math.random();this.random=Je.alea(o.toString())}nextValue(){if(!isNaN(this.nextVal)){const t=this.nextVal;return this.nextVal=NaN,t}let t,e,n=!1;for(;!n;){let r,i,o;do{r=2*this.random()-1,i=2*this.random()-1,o=r*r+i*i}while(o>=1||0===o);const s=Math.sqrt(-2*Math.log(o)/o);t=this.mean+this.stdDev*r*s,e=this.mean+this.stdDev*i*s,this.truncated&&!this.isValidTruncated(t)||(n=!0)}return this.truncated&&!this.isValidTruncated(e)||(this.nextVal=this.convertValue(e)),this.convertValue(t)}convertValue(t){return null==this.dtype||"float32"===this.dtype?t:Math.round(t)}isValidTruncated(t){return t<=this.upper&&t>=this.lower}}class tn{constructor(t=0,e=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=t,this.range=e-t,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${t} - ${e} <= 1 and dtype is not float`);this.random=Je.alea(r)}convertValue(t){return this.canReturnFloat()?t:Math.round(t)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const en=(0,gt.op)({randomUniform_:function(t,e=0,n=1,r="float32",i){const o=(0,Ze.f)(t,r),s=new tn(e,n,null,i);for(let t=0;t<o.values.length;t++)o.values[t]=s.nextValue();return o.toTensor()}});var nn=n(7245);const rn=(0,gt.op)({truncatedNormal_:function(t,e=0,n=1,r,i){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const o=new Qe(e,n,r,!0,i),s=(0,Ze.f)(t,r);for(let t=0;t<s.values.length;t++)s.values[t]=o.nextValue();return s.toTensor()}});var on=n(9640),sn=n(6577),an=n(5410),un=n(8333);const cn=async function(t){const e=(0,ft._1)(t,"condition","whereAsync","bool"),n=await e.data(),r=(0,un.Z)(e.shape,n);return t!==e&&e.dispose(),r};var ln=n(4077);function hn(t,e,n){return{boxes:E("boxes",t,e,n),scores:E("scores",t,e,n),maxOutputSize:E("maxOutputSize",t,e,n),iouThreshold:E("iouThreshold",t,e,n),scoreThreshold:E("scoreThreshold",t,e,n),softNmsSigma:E("softNmsSigma",t,e,n)}}var pn=n(3243),dn=n(9608),fn=n(6092),mn=n(9494);class gn{constructor(t,e){this.keyDType=t,this.valueDType=e,this.handle=(0,_.iD$)(0),this.tensorMap=new Map,(0,_.CnY)(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}async import(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return this.tensorMap.forEach((t=>t.dispose())),this.tensorMap.clear(),(0,_.lub)((()=>{const t=(0,_.HHK)(e),r=n.length,i=t.length;_.D5U.hu(r===i,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${i} elements.`));for(let e=0;e<r;e++){const r=n[e],i=t[e];(0,_.CnY)(i),this.tensorMap.set(r,i)}return this.handle}))}async find(t,e){this.checkKeyAndValueTensor(t,e);const n=await t.data();return(0,_.lub)((()=>{const t=[];for(let r=0;r<n.length;r++){const i=n[r],o=this.findWithDefault(i,e);t.push(o)}return(0,_.knu)(t)}))}findWithDefault(t,e){const n=this.tensorMap.get(t);return null!=n?n:e}checkKeyAndValueTensor(t,e){if(t.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${t.dtype}`);if(e.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${e.dtype}`)}}var yn=n(6477),vn=n(6500),xn=n(636),bn=n(7630),wn=n(6573),_n=n(624),Sn=n(2856),Tn=n(8651),En=n(5750),Mn=n(5912),Cn=n(9065),An=n(7505),Nn=n(9648),Rn=n(682),In=n(1510);const Dn=(0,gt.op)({sparseToDense_:function(t,e,n,r=0){const i=(0,ft._1)(t,"sparseIndices","sparseToDense","int32"),o=(0,ft._1)(e,"sparseValues","sparseToDense"),s=(0,ft._1)(r,"defaultValue","sparseToDense",o.dtype);!function(t,e,n,r){if("int32"!==t.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${t.shape}.`);const i=t.rank>0?t.shape[0]:1,o=t.rank>1?t.shape[1]:1;if(n.length!==o)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${o}.`);const s=e.size;if(0!==e.rank&&(1!==e.rank||s!==i))throw new Error(`sparseValues has incorrect shape ${e.shape}, should be [] or [${i}]`);if(e.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(i,o,n,s);const a={sparseIndices:i,sparseValues:o,defaultValue:s},u={outputShape:n};return pt.BV.runKernelFunc((t=>t.sparseToDense(i,o,n,s)),a,null,dt.D2,u)}});var On=n(3307),Ln=n(5130),kn=n(5735),Pn=n(5475),$n=n(781),Bn=n(2998),Fn=n(47),Un=n(7394),zn=n(7405),Vn=n(6884),Wn=n(4926),Hn=n(7486),Gn=n(2676),jn=n(5158),Xn=n(9590),qn=n(2991),Yn=n(4136),Kn=n(7501),Zn=n(8644),Jn=n(3028);const Qn=(0,gt.op)({scatterND_:function(t,e,n){const r=(0,ft._1)(t,"indices","scatterND","int32"),i=(0,ft._1)(e,"updates","scatterND");Jn.b0(i,r,n);const o={indices:r,updates:i},s={shape:n};return pt.BV.runKernelFunc((t=>t.scatterND(r,i,n)),o,null,dt.xQ,s)}}),tr=(0,gt.op)({gatherND_:function(t,e){const n=(0,ft._1)(e,"indices","gatherND","int32"),r=(0,ft._1)(t,"x","gatherND"),i={params:r,indices:n};return pt.BV.runKernelFunc((t=>t.gatherND(r,n)),i,null,dt.q1)}});var er=n(7020),nr=n(8447),rr=n(3710),ir=n(4415),or=n(1300),sr=n(1483),ar=n(9682),ur=n(7918),cr=n(8441),lr=n(9112),hr=n(8247);function pr(t,e,n,r){const i=((t,e,n)=>{switch(t.category){case"arithmetic":return _.lub((()=>((t,e,n)=>{switch(t.op){case"BiasAdd":case"AddV2":case"Add":return[ht.I(E("a",t,e,n),E("b",t,e,n))];case"AddN":return[yt(E("tensors",t,e,n))];case"FloorMod":case"Mod":return[vt.w(E("a",t,e,n),E("b",t,e,n))];case"Mul":return[xt.d(E("a",t,e,n),E("b",t,e,n))];case"RealDiv":case"Div":return[bt.h(E("a",t,e,n),E("b",t,e,n))];case"DivNoNan":return[wt.N(E("a",t,e,n),E("b",t,e,n))];case"FloorDiv":return[_t.q(E("a",t,e,n),E("b",t,e,n))];case"Sub":return[St.l(E("a",t,e,n),E("b",t,e,n))];case"Minimum":return[Tt.L(E("a",t,e,n),E("b",t,e,n))];case"Maximum":return[Et.g(E("a",t,e,n),E("b",t,e,n))];case"Pow":return[Mt.s(E("a",t,e,n),E("b",t,e,n))];case"SquaredDifference":return[Ct.$(E("a",t,e,n),E("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"basic_math":return _.lub((()=>((t,e,n)=>{switch(t.op){case"Abs":case"ComplexAbs":return[At.W(E("x",t,e,n))];case"Acos":return[Nt.K(E("x",t,e,n))];case"Acosh":return[Rt._(E("x",t,e,n))];case"Asin":return[It.Z(E("x",t,e,n))];case"Asinh":return[Dt.V(E("x",t,e,n))];case"Atan":return[Ot.z(E("x",t,e,n))];case"Atan2":return[Lt.f(E("x",t,e,n),E("y",t,e,n))];case"Atanh":return[kt.C(E("x",t,e,n))];case"Ceil":return[Pt.m(E("x",t,e,n))];case"Complex":return[$t.P(E("real",t,e,n),E("imag",t,e,n))];case"Cos":return[Bt.m(E("x",t,e,n))];case"Cosh":return[Ft.f(E("x",t,e,n))];case"Elu":return[Ut.p(E("x",t,e,n))];case"Erf":return[zt.q(E("x",t,e,n))];case"Exp":return[Vt.Q(E("x",t,e,n))];case"Expm1":return[Wt.t(E("x",t,e,n))];case"Floor":return[Ht.G(E("x",t,e,n))];case"Log":return[Gt.c(E("x",t,e,n))];case"Log1p":return[jt.K(E("x",t,e,n))];case"Imag":return[Xt.a(E("x",t,e,n))];case"Neg":return[qt.W(E("x",t,e,n))];case"Reciprocal":return[Yt.M(E("x",t,e,n))];case"Real":return[Kt.k(E("x",t,e,n))];case"Relu":return[Zt.U(E("x",t,e,n))];case"Round":return[Jt.N(E("x",t,e,n))];case"Selu":return[Qt.U(E("x",t,e,n))];case"Sigmoid":return[te.X(E("x",t,e,n))];case"Sin":return[ee.O(E("x",t,e,n))];case"Sign":return[ne.X(E("x",t,e,n))];case"Sinh":return[re.R(E("x",t,e,n))];case"Softplus":return[ie.W(E("x",t,e,n))];case"Sqrt":return[oe._(E("x",t,e,n))];case"Square":return[se.h(E("x",t,e,n))];case"Tanh":return[ae.A(E("x",t,e,n))];case"Tan":return[ue.O(E("x",t,e,n))];case"Relu6":case"ClipByValue":return[ce.i(E("x",t,e,n),E("clipValueMin",t,e,n),E("clipValueMax",t,e,n))];case"Rsqrt":return[le.b(M(t.inputNames[0],e,n))];case"Prod":return[he.W(E("x",t,e,n),E("axes",t,e,n))];case"LeakyRelu":return[pe.h(E("x",t,e,n),E("alpha",t,e,n))];case"Prelu":return[de.A(E("x",t,e,n),E("alpha",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"control":return(async(t,e,n)=>{switch(t.op){case"If":case"StatelessIf":{const r=E("thenBranch",t,e,n),i=E("elseBranch",t,e,n),o=E("cond",t,e,n),s=E("args",t,e,n);return(await o.data())[0]?n.functionMap[r].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap):n.functionMap[i].executeFunctionAsync(s,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=E("body",t,e,n),i=E("cond",t,e,n),o=E("args",t,e,n),s=await n.functionMap[i].executeFunctionAsync(o,n.tensorArrayMap,n.tensorListMap),a=o.map((t=>t.id));let u=await s[0].data();s.forEach((t=>{t.kept||-1!==a.indexOf(t.id)||t.dispose()}));let c=o;for(;u[0];){const t=c;c=await n.functionMap[r].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);const e=c.map((t=>t.id));t.forEach((t=>{t.kept||-1!==a.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}));const o=await n.functionMap[i].executeFunctionAsync(c,n.tensorArrayMap,n.tensorListMap);u=await o[0].data(),o.forEach((t=>{t.kept||-1!==a.indexOf(t.id)||-1!==e.indexOf(t.id)||t.dispose()}))}return c}case"LoopCond":return[I(E("pred",t,e,n))];case"Switch":{const r=E("pred",t,e,n);let i=E("data",t,e,n);return i.kept||(i=I(i)),(await r.data())[0]?[void 0,i]:[i,void 0]}case"Merge":{const r=t.inputNames.find((t=>void 0!==M(t,e,n)));return r?[I(M(r,e,n))]:void 0}case"Enter":{const r=E("frameName",t,e,n),i=E("tensor",t,e,n);return n.enterFrame(r),[I(i)]}case"Exit":{const r=E("tensor",t,e,n);return n.exitFrame(),[I(r)]}case"NextIteration":{const r=E("tensor",t,e,n);return n.nextIteration(),[I(r)]}case"TensorArrayV3":{const r=E("size",t,e,n),i=E("dtype",t,e,n),o=E("elementShape",t,e,n),s=E("dynamicSize",t,e,n),a=E("clearAfterRead",t,e,n),u=E("identicalElementShapes",t,e,n),c=E("name",t,e,n),l=new me(c,i,r,o,u,s,a);return n.addTensorArray(l),[l.idTensor,(0,_.iD$)(1)]}case"TensorArrayWriteV3":{const r=E("tensorArrayId",t,e,n),i=E("index",t,e,n),o=E("tensor",t,e,n),s=n.getTensorArray(r.id);return s.write(i,o),[s.idTensor]}case"TensorArrayReadV3":{const r=E("tensorArrayId",t,e,n),i=E("index",t,e,n);return[n.getTensorArray(r.id).read(i)]}case"TensorArrayGatherV3":{const r=E("tensorArrayId",t,e,n),i=E("indices",t,e,n),o=E("dtype",t,e,n);return[n.getTensorArray(r.id).gather(i,o)]}case"TensorArrayScatterV3":{const r=E("tensorArrayId",t,e,n),i=E("indices",t,e,n),o=E("tensor",t,e,n),s=n.getTensorArray(r.id);return s.scatter(i,o),[s.idTensor]}case"TensorArrayConcatV3":{const r=E("tensorArrayId",t,e,n),i=n.getTensorArray(r.id),o=E("dtype",t,e,n);return[i.concat(o)]}case"TensorArraySplitV3":{const r=E("tensorArrayId",t,e,n),i=E("tensor",t,e,n),o=E("lengths",t,e,n),s=n.getTensorArray(r.id);return s.split(o,i),[s.idTensor]}case"TensorArraySizeV3":{const r=E("tensorArrayId",t,e,n),i=n.getTensorArray(r.id);return[(0,_.iD$)(i.size(),"int32")]}case"TensorArrayCloseV3":{const r=E("tensorArrayId",t,e,n),i=n.getTensorArray(r.id);return i.clearAndClose(),[i.idTensor]}case"TensorListSetItem":{const r=E("tensorListId",t,e,n),i=E("index",t,e,n),o=E("tensor",t,e,n),s=n.getTensorList(r.id);return s.setItem(i,o),[s.idTensor]}case"TensorListGetItem":{const r=E("tensorListId",t,e,n),i=E("index",t,e,n),o=E("elementShape",t,e,n),s=E("elementDType",t,e,n);return[n.getTensorList(r.id).getItem(i,o,s)]}case"TensorListScatterV2":case"TensorListScatter":{const r=E("indices",t,e,n),i=function(t,e,n,r){if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const i=Math.max(...e);if(null!=r&&-1!==r&&i>=r)throw new Error(`Max index must be < array size (${i}  vs. ${r})`);const o=new ge([],n,t.dtype,r),s=(0,_.HHK)(t,0);return e.forEach(((t,e)=>{o.setItem(t,s[e])})),o}(E("tensor",t,e,n),r,E("elementShape",t,e,n),E("numElements",t,e,n));return n.addTensorList(i),[i.idTensor]}case"TensorListReserve":{const s=(r=E("elementShape",t,e,n),i=E("elementDType",t,e,n),o=E("numElements",t,e,n),new ge([],r,i,o));return n.addTensorList(s),[s.idTensor]}case"TensorListGather":{const r=E("tensorListId",t,e,n),i=E("indices",t,e,n),o=E("elementShape",t,e,n),s=E("elementDType",t,e,n);return[n.getTensorList(r.id).gather(i,s,o)]}case"TensorListStack":{const r=E("tensorListId",t,e,n),i=E("elementShape",t,e,n),o=E("elementDType",t,e,n),s=E("numElements",t,e,n);return[n.getTensorList(r.id).stack(i,o,s)]}case"TensorListFromTensor":{const r=function(t,e,n){const r=t.dtype;if(t.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${t.shape}`);if(t.dtype!==n)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${n}`);fe(t.shape.slice(1),e,"TensorList shape mismatch: ");const i=(0,_.HHK)(t);return new ge(i,e,r)}(E("tensor",t,e,n),E("elementShape",t,e,n),E("elementDType",t,e,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=E("tensorListId",t,e,n),i=n.getTensorList(r.id),o=E("dtype",t,e,n),s=E("elementShape",t,e,n);return[i.concat(o,s)]}case"TensorListPushBack":{const r=E("tensorListId",t,e,n),i=E("tensor",t,e,n),o=n.getTensorList(r.id);return o.pushBack(i),[o.idTensor]}case"TensorListPopBack":{const r=E("tensorListId",t,e,n),i=E("elementShape",t,e,n),o=E("elementDType",t,e,n);return[n.getTensorList(r.id).popBack(i,o)]}case"TensorListSplit":{const r=E("tensor",t,e,n),i=E("elementShape",t,e,n),o=function(t,e,n){let r=0;const i=e.map((t=>(r+=t,r)));if(r!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${t.shape}`);const o=0===r?0:t.size/r,s=(0,_.lub)((()=>{const s=[];t=(0,_.XLQ)(t,[1,r,o]);for(let r=0;r<e.length;++r){const a=[0,0===r?0:i[r-1],0],u=[1,e[r],o];s[r]=(0,_.XLQ)((0,_.tPi)(t,a,u),n)}return t.dispose(),s})),a=new ge([],n,t.dtype,e.length);for(let t=0;t<s.length;t++)a.setItem(t,s[t]);return a}(r,E("lengths",t,e,n),i);return n.addTensorList(o),[o.idTensor]}default:throw TypeError(`Node type ${t.op} is not implemented`)}var r,i,o})(t,e,n);case"convolution":return _.lub((()=>((t,e,n)=>{switch(t.op){case"Conv1D":{const r=E("stride",t,e,n),i=E("pad",t,e,n),o=E("dataFormat",t,e,n).toUpperCase(),s=E("dilation",t,e,n);return[ye.P(E("x",t,e,n),E("filter",t,e,n),r,i,o,s)]}case"Conv2D":{const r=E("strides",t,e,n),i=R(t,e,n),o=E("dataFormat",t,e,n).toUpperCase(),s=E("dilations",t,e,n);return[ve.T(E("x",t,e,n),E("filter",t,e,n),[r[1],r[2]],i,o,[s[1],s[2]])]}case"_FusedConv2D":{const{stride:r,pad:i,dataFormat:o,dilations:s,biasArg:a,preluArg:u,activationFunc:c}=He(t,e,n);return[Ce({x:E("x",t,e,n),filter:E("filter",t,e,n),strides:[r[1],r[2]],pad:i,dataFormat:o,dilations:[s[1],s[2]],bias:a,activation:c,preluActivationWeights:u})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:i,dataFormat:o,dilations:s,biasArg:a,preluArg:u,activationFunc:c}=He(t,e,n);return[Ie({x:E("x",t,e,n),filter:E("filter",t,e,n),strides:[r[1],r[2]],pad:i,dataFormat:o,dilations:[s[1],s[2]],bias:a,activation:c,preluActivationWeights:u})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=E("outputShape",t,e,n),i=E("strides",t,e,n),o=R(t,e,n);return[Le.b(E("x",t,e,n),E("filter",t,e,n),r,[i[1],i[2]],o)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=E("strides",t,e,n),i=R(t,e,n),o=E("dilations",t,e,n),s=E("dataFormat",t,e,n).toUpperCase();return[Ae.B(E("input",t,e,n),E("filter",t,e,n),[r[1],r[2]],i,s,[o[1],o[2]])]}case"Conv3D":{const r=E("strides",t,e,n),i=E("pad",t,e,n),o=E("dataFormat",t,e,n).toUpperCase(),s=E("dilations",t,e,n);return[ke(E("x",t,e,n),E("filter",t,e,n),[r[1],r[2],r[3]],i,o,[s[1],s[2],s[3]])]}case"AvgPool":{const r=E("strides",t,e,n),i=E("pad",t,e,n),o=E("kernelSize",t,e,n);return[Pe.w(E("x",t,e,n),[o[1],o[2]],[r[1],r[2]],i)]}case"MaxPool":{const r=E("strides",t,e,n),i=E("pad",t,e,n),o=E("kernelSize",t,e,n);return[$e._(E("x",t,e,n),[o[1],o[2]],[r[1],r[2]],i)]}case"MaxPoolWithArgmax":{const r=E("strides",t,e,n),i=E("pad",t,e,n),o=E("kernelSize",t,e,n),s=E("includeBatchInIndex",t,e,n),{result:a,indexes:u}=Be(E("x",t,e,n),[o[1],o[2]],[r[1],r[2]],i,s);return[a,u]}case"AvgPool3D":{const r=E("strides",t,e,n),i=E("pad",t,e,n),o=E("kernelSize",t,e,n);return[ze(E("x",t,e,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],i)]}case"MaxPool3D":{const r=E("strides",t,e,n),i=E("pad",t,e,n),o=E("kernelSize",t,e,n);return[Ve(E("x",t,e,n),[o[1],o[2],o[3]],[r[1],r[2],r[3]],i)]}case"Dilation2D":{const r=E("strides",t,e,n),i=E("pad",t,e,n),o=E("dilations",t,e,n),s=r[1],a=r[2],u=o[1],c=o[2];return[We.W(E("x",t,e,n),E("filter",t,e,n),[s,a],i,[u,c],"NHWC")]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"creation":return _.lub((()=>((t,e,n)=>{switch(t.op){case"Fill":{const r=E("shape",t,e,n),i=E("dtype",t,e,n),o=E("value",t,e,n);return[Ge.h(r,o,i)]}case"LinSpace":return[je(E("start",t,e,n),E("stop",t,e,n),E("num",t,e,n))];case"Multinomial":{const r=E("logits",t,e,n),i=E("numSamples",t,e,n),o=E("seed",t,e,n);return[Xe(r,i,o)]}case"OneHot":{const r=E("indices",t,e,n),i=E("depth",t,e,n),o=E("onValue",t,e,n),s=E("offValue",t,e,n);return[qe.l(r,i,o,s)]}case"Ones":return[Ye.i(E("shape",t,e,n),E("dtype",t,e,n))];case"OnesLike":return[Ke.J(E("x",t,e,n))];case"RandomUniform":return[en(E("shape",t,e,n),E("minval",t,e,n),E("maxval",t,e,n),E("dtype",t,e,n))];case"Range":{const r=E("start",t,e,n),i=E("stop",t,e,n),o=E("step",t,e,n);return[nn.w(r,i,o,E("dtype",t,e,n))]}case"TruncatedNormal":{const r=E("shape",t,e,n),i=E("mean",t,e,n),o=E("stdDev",t,e,n),s=E("seed",t,e,n);return[rn(r,i,o,E("dtype",t,e,n),s)]}case"Zeros":return[on.l(E("shape",t,e,n),E("dtype",t,e,n))];case"ZerosLike":return[sn.P(E("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"dynamic":return(async(t,e,n)=>{switch(t.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:s,scoreThreshold:a,softNmsSigma:u}=hn(t,e,n),c=await an.BHj.nonMaxSuppressionWithScoreAsync(r,i,o,s,a,u);return[c.selectedIndices,c.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:s,scoreThreshold:a}=hn(t,e,n),u=E("padToMaxOutputSize",t,e,n),c=await an.BHj.nonMaxSuppressionPaddedAsync(r,i,o,s,a,u);return[c.selectedIndices,c.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:i,maxOutputSize:o,iouThreshold:s,scoreThreshold:a}=hn(t,e,n);return[await an.BHj.nonMaxSuppressionAsync(r,i,o,s,a)]}case"Where":{const r=Ue.p(E("condition",t,e,n),"bool"),i=[await cn(r)];return r.dispose(),i}case"ListDiff":return async function(t,e){const n=(0,ft._1)(t,"x","setdiff1d"),r=(0,ft._1)(e,"y","setdiff1d");mt.hu(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),mt.hu(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),mt.hu(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const i=await n.data(),o=await r.data(),s=new Set(o);let a=0;for(let t=0;t<i.length;t++)s.has(i[t])||a++;const u=new ln.YD([a],n.dtype),c=new ln.YD([a],"int32");for(let t=0,e=0;t<i.length;t++)s.has(i[t])||(u.values[e]=i[t],c.values[e]=t,e++);return[u.toTensor(),c.toTensor()]}(E("x",t,e,n),E("y",t,e,n));default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n);case"evaluation":return _.lub((()=>((t,e,n)=>{switch(t.op){case"TopKV2":{const r=E("x",t,e,n),i=E("k",t,e,n),o=E("sorted",t,e,n),s=pn.h(r,i,o);return[s.values,s.indices]}case"Unique":{const r=E("x",t,e,n),i=dn.T(r);return[i.values,i.indices]}case"UniqueV2":{const r=E("x",t,e,n),i=E("axis",t,e,n),o=dn.T(r,i);return[o.values,o.indices]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"image":return _.lub((()=>((t,e,n)=>{switch(t.op){case"ResizeBilinear":{const r=E("images",t,e,n),i=E("size",t,e,n),o=E("alignCorners",t,e,n);return[an.BHj.resizeBilinear(r,[i[0],i[1]],o)]}case"ResizeNearestNeighbor":{const r=E("images",t,e,n),i=E("size",t,e,n),o=E("alignCorners",t,e,n);return[an.BHj.resizeNearestNeighbor(r,[i[0],i[1]],o)]}case"CropAndResize":{const r=E("image",t,e,n),i=E("boxes",t,e,n),o=E("boxInd",t,e,n),s=E("cropSize",t,e,n),a=E("method",t,e,n),u=E("extrapolationValue",t,e,n);return[an.BHj.cropAndResize(r,i,o,s,a,u)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"graph":return _.lub((()=>((t,e,n)=>{switch(t.op){case"Const":return e[t.name];case"PlaceholderWithDefault":const r=E("default",t,e,n);return[M(t.name,e,n)||r];case"Placeholder":return[M(t.name,e,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":return[I(E("x",t,e,n))];case"IdentityN":return E("x",t,e,n).map((t=>I(t)));case"Snapshot":return[I(E("x",t,e,n))];case"Shape":return[fn.R(E("x",t,e,n).shape,"int32")];case"ShapeN":return E("x",t,e,n).map((t=>fn.R(t.shape)));case"Size":return[mn.i(E("x",t,e,n).size,"int32")];case"Rank":return[mn.i(E("x",t,e,n).rank,"int32")];case"NoOp":return[mn.i(1)];case"Print":const i=E("x",t,e,n),o=E("data",t,e,n),s=E("message",t,e,n),a=E("summarize",t,e,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(s);for(let t=0;t<o.length;t++)console.log(Array.prototype.slice.call(o[t].dataSync()).slice(0,a));return[i];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"logical":return _.lub((()=>((t,e,n)=>{switch(t.op){case"Equal":return[yn.D(E("a",t,e,n),E("b",t,e,n))];case"NotEqual":return[vn.Q(E("a",t,e,n),E("b",t,e,n))];case"Greater":return[xn.p(E("a",t,e,n),E("b",t,e,n))];case"GreaterEqual":return[bn.b(E("a",t,e,n),E("b",t,e,n))];case"Less":return[wn.d(E("a",t,e,n),E("b",t,e,n))];case"LessEqual":return[_n.z(E("a",t,e,n),E("b",t,e,n))];case"LogicalAnd":return[Sn.H(E("a",t,e,n),E("b",t,e,n))];case"LogicalNot":return[Tn.h(E("a",t,e,n))];case"LogicalOr":return[En.K(E("a",t,e,n),E("b",t,e,n))];case"Select":case"SelectV2":return[Mn.a(E("condition",t,e,n),E("a",t,e,n),E("b",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"matrices":return _.lub((()=>((t,e,n)=>{switch(t.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[De.O(E("a",t,e,n),E("b",t,e,n),E("transposeA",t,e,n),E("transposeB",t,e,n))];case"Transpose":return[Cn.p(E("x",t,e,n),E("perm",t,e,n))];case"_FusedMatMul":const[r,i]=E("fusedOps",t,e,n),o="biasadd"===r,s="prelu"===i,a=E("numArgs",t,e,n);if(o){if(s&&2!==a)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!s&&1!==a)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=E("args",t,e,n);return[Oe({a:E("a",t,e,n),b:E("b",t,e,n),transposeA:E("transposeA",t,e,n),transposeB:E("transposeB",t,e,n),bias:u,activation:i,preluActivationWeights:c})];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"normalization":return _.lub((()=>((t,e,n)=>{switch(t.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[An.t(E("x",t,e,n),E("mean",t,e,n),E("variance",t,e,n),E("offset",t,e,n),E("scale",t,e,n),E("epsilon",t,e,n))];case"LRN":return[Nn.G(E("x",t,e,n),E("radius",t,e,n),E("bias",t,e,n),E("alpha",t,e,n),E("beta",t,e,n))];case"Softmax":return[Rn.X(E("x",t,e,n))];case"LogSoftmax":return[In.C(E("x",t,e,n))];case"SparseToDense":return[Dn(E("sparseIndices",t,e,n),E("outputShape",t,e,n),E("sparseValues",t,e,n),E("defaultValue",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"reduction":return _.lub((()=>((t,e,n)=>{switch(t.op){case"Max":{const r=E("axis",t,e,n),i=E("keepDims",t,e,n);return[On.F(E("x",t,e,n),r,i)]}case"Mean":{const r=E("axis",t,e,n),i=E("keepDims",t,e,n);return[Ln.J(E("x",t,e,n),r,i)]}case"Min":{const r=E("axis",t,e,n),i=E("keepDims",t,e,n);return[kn.V(E("x",t,e,n),r,i)]}case"Sum":{const r=E("axis",t,e,n),i=E("keepDims",t,e,n);return[Pn.S(E("x",t,e,n),r,i)]}case"All":{const r=E("axis",t,e,n),i=E("keepDims",t,e,n);return[$n.$(E("x",t,e,n),r,i)]}case"Any":{const r=E("axis",t,e,n),i=E("keepDims",t,e,n);return[Bn.Y(E("x",t,e,n),r,i)]}case"ArgMax":{const r=E("axis",t,e,n);return[Fn.N(E("x",t,e,n),r)]}case"ArgMin":{const r=E("axis",t,e,n);return[Un.v(E("x",t,e,n),r)]}case"Prod":{const r=E("axis",t,e,n),i=E("keepDims",t,e,n);return[he.W(E("x",t,e,n),r,i)]}case"Cumsum":{const r=E("axis",t,e,n),i=E("exclusive",t,e,n),o=E("reverse",t,e,n);return[zn.z(E("x",t,e,n),r,i,o)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"slice_join":return _.lub((()=>((t,e,n)=>{switch(t.op){case"ConcatV2":case"Concat":{const r=E("n",t,e,n),i=E("axis",t,e,n);let o=E("tensors",t,e,n);return o=o.slice(0,r),[Vn.z(o,i)]}case"GatherV2":case"Gather":{const r=E("axis",t,e,n),i=E("x",t,e,n),o=E("indices",t,e,n);return[Wn.I(i,Ue.p(o,"int32"),r)]}case"ReverseV2":case"Reverse":{const r=E("axis",t,e,n),i=E("x",t,e,n);return[Hn.G(i,r)]}case"Slice":{const r=E("begin",t,e,n),i=E("size",t,e,n);return[Gn.t(E("x",t,e,n),r,i)]}case"StridedSlice":{const r=E("begin",t,e,n),i=E("end",t,e,n),o=E("strides",t,e,n),s=E("beginMask",t,e,n),a=E("endMask",t,e,n),u=E("ellipsisMask",t,e,n),c=E("newAxisMask",t,e,n),l=E("shrinkAxisMask",t,e,n),h=E("x",t,e,n);return[jn.N(h,r,i,o,s,a,u,c,l)]}case"Pack":return(0,_.lub)((()=>{const r=E("axis",t,e,n),i=E("tensors",t,e,n),o=i[0].shape,s=Xn.L(i[0]).shape,a=i.map((t=>{const e=_.D5U.cO(t.shape,o);if(!e&&!_.D5U.cO(Xn.L(t).shape,s))throw new Error("the input tensors shape does not match");return e?t:Me.X(t,o)}));return[qn.k(a,r)]}));case"Unpack":{const r=E("axis",t,e,n),i=E("tensor",t,e,n);return Yn.H(i,r)}case"Tile":{const r=E("reps",t,e,n);return[Kn.G(E("x",t,e,n),r)]}case"Split":case"SplitV":{const r=E("axis",t,e,n),i=E("numOrSizeSplits",t,e,n),o=E("x",t,e,n);return Zn.V(o,i,r)}case"ScatterNd":{const r=E("indices",t,e,n),i=E("values",t,e,n),o=E("shape",t,e,n);return[Qn(r,i,o)]}case"GatherNd":{const r=E("x",t,e,n),i=E("indices",t,e,n);return[tr(r,i)]}case"SparseToDense":{const r=E("sparseIndices",t,e,n),i=E("outputShape",t,e,n),o=E("sparseValues",t,e,n),s=E("defaultValue",t,e,n);return[Dn(r,o,i,o.dtype===s.dtype?s:Ue.p(s,o.dtype))]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"spectral":return _.lub((()=>((t,e,n)=>{switch(t.op){case"FFT":return[er.k(E("x",t,e,n))];case"IFFT":return[nr.S(E("x",t,e,n))];case"RFFT":return[rr.Q(E("x",t,e,n))];case"IRFFT":return[ir.w(E("x",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"transformation":return _.lub((()=>((t,e,n)=>{switch(t.op){case"Cast":return[Ue.p(E("x",t,e,n),E("dtype",t,e,n))];case"ExpandDims":{const r=E("axis",t,e,n);return[or.d(E("x",t,e,n),r)]}case"Squeeze":{const r=E("axis",t,e,n);return[Xn.L(E("x",t,e,n),r)]}case"Reshape":return[Me.X(E("x",t,e,n),E("shape",t,e,n))];case"MirrorPad":return[sr.V(E("x",t,e,n),E("padding",t,e,n),E("mode",t,e,n))];case"PadV2":case"Pad":return[ar.v(E("x",t,e,n),E("padding",t,e,n),E("constantValue",t,e,n))];case"SpaceToBatchND":{const r=E("blockShape",t,e,n),i=E("paddings",t,e,n);return[ur.f(E("x",t,e,n),r,i)]}case"BatchToSpaceND":{const r=E("blockShape",t,e,n),i=E("crops",t,e,n);return[cr.E(E("x",t,e,n),r,i)]}case"DepthToSpace":{const r=E("blockSize",t,e,n),i=E("dataFormat",t,e,n).toUpperCase();return[lr.n(E("x",t,e,n),r,i)]}case"BroadcastTo":return[hr.U(E("x",t,e,n),E("shape",t,e,n))];default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n)));case"hash_table":return(async(t,e,n,r)=>{switch(t.op){case"HashTable":case"HashTableV2":{const i=E("keyDType",t,e,n),o=E("valueDType",t,e,n),s=new gn(i,o);return r.addHashTable(t.name,s),[s.handle]}case"LookupTableImport":case"LookupTableImportV2":{const i=E("tableHandle",t,e,n,r),o=E("keys",t,e,n),s=E("values",t,e,n),a=r.getHashTableById(i.id);return[await a.import(o,s)]}case"LookupTableFind":case"LookupTableFindV2":{const i=E("tableHandle",t,e,n,r),o=E("keys",t,e,n),s=E("defaultValue",t,e,n),a=r.getHashTableById(i.id);return[await a.find(o,s)]}default:throw TypeError(`Node type ${t.op} is not implemented`)}})(t,e,n,r);case"custom":const i=T(t.op);if(i&&i.customExecutor)return i.customExecutor(new lt(t,e,n));throw TypeError(`Custom op ${t.op} is not registered.`);default:throw TypeError(`Unknown op '${t.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(t,e,n);return _.D5U.tI(i)?i.then((t=>[].concat(t))):[].concat(i)}class dr{constructor(t={},e={},n={},r={}){this.weightMap=t,this.tensorArrayMap=e,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(t,e){return{id:t,frameName:e,iterationId:0}}set currentContext(t){this.contexts!==t&&(this.contexts=t,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const t=[];for(let e=0;e<this.contexts.length-1;e++){const n=this.contexts.slice(0,this.contexts.length-e);t.push(this.contextIdforContexts(n))}t.push(""),this._currentContextIds=t}contextIdforContexts(t){return t?t.map((t=>0===t.id&&0===t.iterationId?"":`${t.frameName}-${t.iterationId}`)).join("/"):""}enterFrame(t){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,t)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const t=Object.assign({},this.contexts[this.contexts.length-1]);t.iterationId+=1,t.id=this.lastId,this.contexts.splice(-1,1,t),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(t){return this.weightMap[t]}addTensorArray(t){this.tensorArrayMap[t.id]=t}getTensorArray(t){return this.tensorArrayMap[t]}addTensorList(t){this.tensorListMap[t.id]=t}getTensorList(t){return this.tensorListMap[t]}dispose(t){for(const e in this.tensorArrayMap)this.tensorArrayMap[e].clearAndClose(t);for(const e in this.tensorListMap)this.tensorListMap[e].clearAndClose(t)}}function fr(t,e,n,r){const i=new Set,o=[];let s=null,a=null;const u=new Set,c=Object.keys(t).map((t=>N(t)[0]));let l=[];null!=r&&(l=r.map((t=>N(t.name)[0])));const h=[...e];for(;h.length>0;){const t=h.pop();(vr(t)||xr(t)||br(t))&&null==s&&(s=t,a=s.children.map((t=>t.name)).filter((t=>i.has(t)))),i.add(t.name),null==n[t.name]&&-1===c.indexOf(t.name)&&-1===l.indexOf(t.name)&&(0!==t.inputs.length?t.inputs.forEach((t=>{u.has(t.name)||(u.add(t.name),h.push(t))})):o.push(t.name))}return{inputs:t,outputs:e,usedNodes:i,missingInputs:o,dynamicNode:s,syncInputs:a}}const mr=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],gr=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],yr=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2"];function vr(t){return mr.indexOf(t.op)>=0}function xr(t){return gr.indexOf(t.op)>=0}function br(t){return yr.indexOf(t.op)>=0}class wr{constructor(t,e){this.graph=t,this.parent=e,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this._outputs=t.outputs,this._inputs=t.inputs,this._initNodes=t.initNodes,this._signature=t.signature,this._functions=t.functions,null!=t.functions&&Object.keys(t.functions).forEach((e=>{this._functionExecutorMap[e]=new wr(t.functions[e],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(t){const e=Object.keys(t).map((e=>t[e].map((t=>t.id))));this._weightIds=[].concat(...e),this._weightMap=t}set resourceManager(t){this._resourceManager=t}get inputs(){return this._inputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((t=>({name:t.name,shape:t.attrParams.shape?t.attrParams.shape.value:void 0,dtype:t.attrParams.dtype?t.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((t=>t.signatureKey||t.name))}get outputNodes(){return this._outputs.map((t=>{const e=t.signatureKey||t.name;return t.defaultOutput?`${e}:${t.defaultOutput}`:e}))}get functions(){return Object.keys(this._functions).reduce(((t,e)=>(t[e]=this._functions[e].signature,t)),{})}getCompilationKey(t,e){const n=t.map((t=>t.name)).sort(),r=e.map((t=>t.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(t,e){const n=fr(t,e,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:i,syncInputs:o}=n;if(null!=i)throw new Error(`This execution contains the node '${i.name}', which has the dynamic op '${i.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${o}]`);if(r.length>0){const n=e.map((t=>t.name)),i=Object.keys(t);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${i}]. Missing the following inputs: [${r}]`)}return function(t,e,n){const{usedNodes:r,inputs:i}=n,o=[],s=Object.keys(i).map((t=>N(t)[0])).map((e=>t.nodes[e])),a=t.initNodes;s.forEach((t=>{r.has(t.name)&&o.push(t)})),t.weights.forEach((t=>{r.has(t.name)&&o.push(t)})),null!=a&&a.forEach((t=>{r.has(t.name)&&o.push(t)}));const u=new Set,c=[];for(;o.length>0;){const t=o.pop();u.add(t.name),e[t.name]||c.push(t),t.children.forEach((t=>{!u.has(t.name)&&r.has(t.name)&&t.inputs.every((t=>u.has(t.name)))&&o.push(t)}))}return c}(this.graph,this.weightMap,n)}execute(t,e){t=this.mapInputs(t);const n=Object.keys(t).sort();this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e);const r=n.map((t=>this.graph.nodes[N(t)[0]])),i=e.map((t=>N(t)[0]));let o=i.map((t=>this.graph.nodes[t]));0===o.length&&(o=this._outputs);const s=this.getCompilationKey(r,o);let a=this.compiledMap.get(s);null==a&&(a=this.compile(t,o),this.compiledMap.set(s,a));const u={},c={};return(0,_.lub)((()=>{const n=new dr(this.weightMap,u,c,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,i]=N(e),o=[];o[i]=t[e],r[n]=o}));const o=this.getFrozenTensorIds(r),s={};for(let t=0;t<a.length;t++){const e=a[t];if(!r[e.name]){const t=pr(e,r,n,this._resourceManager);if(_.D5U.tI(t))throw new Error(`The execution of the op '${e.op}' returned a promise. Please use model.executeAsync() instead.`);r[e.name]=t,this.checkTensorForDisposal(e.name,e,r,n,o,i,s)}}return null==this.parent&&n.dispose(o),e.map((t=>M(t,r,n)))}))}getFrozenTensorIds(t){const e=[].concat.apply([],Object.keys(t).map((e=>t[e])).map((t=>t.map((t=>t.id)))));return new Set(e)}checkTensorForDisposal(t,e,n,r,i,o,s){"control"!==e.category&&-1===o.indexOf(t)&&(n[t].forEach((t=>{null!=t&&(s[t.id]=(s[t.id]||0)+e.children.length)})),e.inputs.forEach((t=>{if("control"!==t.category){const e=function(t,e,n){return e[A(t,n.currentContextId)]}(t.name,n,r);null!=e&&e.forEach((t=>{if(t&&!i.has(t.id)){const e=s[t.id];1===e?(t.dispose(),delete s[t.id]):null!=e&&s[t.id]--}}))}})))}async executeAsync(t,e){return this._executeAsync(t,e)}async _executeAsync(t,e,n=!1,r={},i={}){n||(t=this.mapInputs(t),this.checkInputs(t),this.checkInputShapeAndType(t),e=this.mapOutputs(e),this.checkOutputs(e));const o=new dr(this.weightMap,r,i,this.functionExecutorMap),s=await this.executeWithControlFlow(t,o,e,n),a=e.map((t=>M(t,s,o))),u=a.map((t=>t.id)),c=Object.keys(t).map((e=>t[e].id)),l=new Set([...u,...c,...this.weightIds]);return Object.keys(s).forEach((t=>{s[t].forEach((t=>{!t||t.isDisposed||l.has(t.id)||t.dispose()}))})),null==this.parent&&o.dispose(l),a}async executeFunctionAsync(t,e,n){const r=t.reduce(((t,e,n)=>(t[this.inputs[n].name]=e,t)),{});return this._executeAsync(r,this.outputNodes,!0,e,n)}async executeWithControlFlow(t,e,n,r){const i=Object.keys(t),o=i.map((t=>this.graph.nodes[N(t)[0]])),s=n.map((t=>N(t)[0]));let a=s.map((t=>this.graph.nodes[t]));0===a.length&&(a=this._outputs);const{usedNodes:u,missingInputs:c,dynamicNode:l,syncInputs:h}=fr(t,a,this.weightMap,this._initNodes),p=[...o,...this.graph.weights,...this._initNodes||[]].map((t=>({node:t,contexts:e.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(t).forEach((e=>{const[n,r]=N(e),i=[];i[r]=t[e],d[n]=i}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const t=this.processStack(o,p,e,d,g,m,s,f,u);await Promise.all(t)}null!=l||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=a.filter((t=>!vr(t)&&!M(t.name,d,e))).map((t=>t.name));if(y.length>0){let t="";throw null!=l&&(t=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${i}]. Consider providing the following inputs: [${c}]. ${t}`)}return d}processStack(t,e,n,r,i,o,s,a,u){const c=[];for(;e.length>0;){const t=e.pop();n.currentContext=t.contexts;let l="";if("Enter"===t.node.op&&E("isConstant",t.node,r,n)&&([l]=C(t.node.name,n)),null==r[t.node.name]){const h=pr(t.node,r,n,this._resourceManager);l||([l]=C(t.node.name,n));const p=n.currentContext;_.D5U.tI(h)?c.push(h.then((c=>(r[l]=c,n.currentContext=p,this.checkTensorForDisposal(l,t.node,r,n,o,s,a),this.processChildNodes(t.node,e,n,r,i,u),c)))):(r[l]=h,this.checkTensorForDisposal(l,t.node,r,n,o,s,a),this.processChildNodes(t.node,e,n,r,i,u))}else this.processChildNodes(t.node,e,n,r,i,u)}return c}processChildNodes(t,e,n,r,i,o){t.children.forEach((t=>{const[s]=C(t.name,n);!i[s]&&o.has(t.name)&&("Merge"===t.op?t.inputNames.some((t=>!!M(t,r,n)))&&(i[s]=!0,e.push({contexts:n.currentContext,node:t})):t.inputNames.every((t=>!!M(t,r,n)))&&(i[s]=!0,e.push({contexts:n.currentContext,node:t})))}))}dispose(){Object.keys(this.weightMap).forEach((t=>this.weightMap[t].forEach((t=>t.dispose()))))}checkInputShapeAndType(t){Object.keys(t).forEach((e=>{const n=t[e],[r]=N(e),i=this.graph.nodes[r];if(i.attrParams.shape&&i.attrParams.shape.value){const t=i.attrParams.shape.value,e=t.length===n.shape.length&&n.shape.every(((e,n)=>-1===t[n]||t[n]===e));_.D5U.hu(e,(()=>`The shape of dict['${i.name}'] provided in model.execute(dict) must be [${t}], but was [${n.shape}]`))}i.attrParams.dtype&&i.attrParams.dtype.value&&_.D5U.hu(n.dtype===i.attrParams.dtype.value,(()=>`The dtype of dict['${i.name}'] provided in model.execute(dict) must be ${i.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(t){const e={};for(const n in t)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?e[this._signature.inputs[n].name]=t[n]:e[n]=t[n];return e}checkInputs(t){const e=Object.keys(t).filter((t=>{const[e]=N(t);return null==this.graph.nodes[e]}));if(e.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${e}] that are not part of graph`)}mapOutputs(t){return t.map((t=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[t]?this._signature.outputs[t].name:t),{})}checkOutputs(t){t.forEach((t=>{const[e]=N(t);if(!this.graph.nodes[e])throw new Error(`The output '${t}' is not found in the graph`)}))}}class _r{constructor(t={},e={}){this.hashTableNameToHandle=t,this.hashTableMap=e}addHashTable(t,e){this.hashTableNameToHandle[t]=e.handle,this.hashTableMap[e.id]=e}getHashTableHandleByName(t){return this.hashTableNameToHandle[t]}getHashTableById(t){return this.hashTableMap[t]}dispose(){for(const t in this.hashTableMap)this.hashTableMap[t].clearAndClose(),delete this.hashTableMap[t];for(const t in this.hashTableNameToHandle)this.hashTableNameToHandle[t].dispose(),delete this.hashTableNameToHandle[t]}}class Sr{constructor(t,e={}){this.modelUrl=t,this.loadOptions=e,this.version="n/a",null==e&&(this.loadOptions={}),this.resourceManager=new _r}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}findIOHandler(){const t=this.modelUrl;if(null!=t.load)this.handler=t;else if(null!=this.loadOptions.requestInit)this.handler=_.io.MP(t,this.loadOptions);else{const e=_.io.rM(t,this.loadOptions);if(0===e.length)e.push(_.io.MP(t,this.loadOptions));else if(e.length>1)throw new Error(`Found more than one (${e.length}) load handlers for URL '${[t]}'`);this.handler=e[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const t=await this.handler.load();return this.loadSync(t)}loadSync(t){this.artifacts=t;const e=this.artifacts.modelTopology;let n={};null!=this.artifacts.userDefinedMetadata&&(n=this.artifacts.userDefinedMetadata.signature),this.version=`${e.versions.producer}.${e.versions.minConsumer}`;const r=_.io.dI(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new wr(Y.Instance.transformGraph(e,n)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=t.modelInitializer){const e=Y.Instance.transformGraph(t.modelInitializer);this.initializer=new wr(e),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(t,e){if("string"==typeof t){const e=_.io.yB(t);if(0===e.length)throw new Error(`Cannot find any save handlers for URL '${t}'`);if(e.length>1)throw new Error(`Found more than one (${e.length}) save handlers for URL '${t}'`);t=e[0]}if(null==t.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return t.save(this.artifacts)}predict(t,e){return this.execute(t,this.outputNodes)}normalizeInputs(t){if(!(t instanceof _.esB||Array.isArray(t)))return t;if((t=Array.isArray(t)?t:[t]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${t.length} input tensors.`);return this.inputNodes.reduce(((e,n,r)=>(e[n]=t[r],e)),{})}normalizeOutputs(t){return t=t||this.outputNodes,Array.isArray(t)?t:[t]}execute(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=this.executor.execute(t,e);return n.length>1?n:n[0]}async executeAsync(t,e){t=this.normalizeInputs(t),e=this.normalizeOutputs(e);const n=await this.executor.executeAsync(t,e);return n.length>1?n:n[0]}convertTensorMapToTensorsMap(t){return Object.keys(t).reduce(((e,n)=>(e[n]=[t[n]],e)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function Tr(t,e={}){if(null==t)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==e&&(e={}),e.fromTFHub&&null==t.load&&(t.endsWith("/")||(t+="/"),t=`${t}model.json?tfjs-format=file`);const n=new Sr(t,e);return await n.load(),n}function Er(t,e,n,r){return new(n||(n=Promise))((function(i,o){function s(t){try{u(r.next(t))}catch(t){o(t)}}function a(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}u((r=r.apply(t,e||[])).next())}))}function Mr(t,e){var n,r,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=e.call(t,s)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}}function Cr(t){return[Math.abs(t.endPoint[0]-t.startPoint[0]),Math.abs(t.endPoint[1]-t.startPoint[1])]}function Ar(t){return[t.startPoint[0]+(t.endPoint[0]-t.startPoint[0])/2,t.startPoint[1]+(t.endPoint[1]-t.startPoint[1])/2]}function Nr(t,e){void 0===e&&(e=1.5);var n=Ar(t),r=Cr(t),i=[e*r[0]/2,e*r[1]/2];return{startPoint:[n[0]-i[0],n[1]-i[1]],endPoint:[n[0]+i[0],n[1]+i[1]],palmLandmarks:t.palmLandmarks}}function Rr(t){var e=Ar(t),n=Cr(t),r=Math.max.apply(Math,n)/2;return{startPoint:[e[0]-r,e[1]-r],endPoint:[e[0]+r,e[1]+r],palmLandmarks:t.palmLandmarks}}function Ir(t,e){var n=[t.endPoint[0]-t.startPoint[0],t.endPoint[1]-t.startPoint[1]],r=[n[0]*e[0],n[1]*e[1]];return{startPoint:[t.startPoint[0]+r[0],t.startPoint[1]+r[1]],endPoint:[t.endPoint[0]+r[0],t.endPoint[1]+r[1]],palmLandmarks:t.palmLandmarks}}var Dr=function(){function t(t,e,n,r,i,o){this.model=t,this.width=e,this.height=n,this.iouThreshold=i,this.scoreThreshold=o,this.anchors=r.map((function(t){return[t.x_center,t.y_center]})),this.anchorsTensor=(0,_.odF)(this.anchors),this.inputSizeTensor=(0,_.RRF)([e,n]),this.doubleInputSizeTensor=(0,_.RRF)([2*e,2*n])}return t.prototype.normalizeBoxes=function(t){var e=this;return(0,_.lub)((function(){var n=(0,_.tPi)(t,[0,0],[-1,2]),r=(0,_.tPi)(t,[0,2],[-1,2]),i=(0,_.IHx)((0,_.hiC)(n,e.inputSizeTensor),e.anchorsTensor),o=(0,_.hiC)(r,e.doubleInputSizeTensor),s=(0,_.dC7)((0,_.luU)(i,o),e.inputSizeTensor),a=(0,_.dC7)((0,_.IHx)(i,o),e.inputSizeTensor);return(0,_.Izb)([s,a],1)}))},t.prototype.normalizeLandmarks=function(t,e){var n=this;return(0,_.lub)((function(){var r=(0,_.IHx)((0,_.hiC)(t.reshape([-1,7,2]),n.inputSizeTensor),n.anchors[e]);return(0,_.dC7)(r,n.inputSizeTensor)}))},t.prototype.getBoundingBoxes=function(t){return Er(this,void 0,void 0,(function(){var e,n,r,i,o,s,a,u,c,l,h,p,d,f,m,g=this;return Mr(this,(function(y){switch(y.label){case 0:return e=(0,_.lub)((function(){return(0,_.dC7)((0,_.luU)(t,.5),2)})),"webgl"===(0,_.N_N)()?(r=(0,_.OBj)().get("WEBGL_PACK_DEPTHWISECONV"),(0,_.OBj)().set("WEBGL_PACK_DEPTHWISECONV",!0),n=this.model.predict(e),(0,_.OBj)().set("WEBGL_PACK_DEPTHWISECONV",r)):n=this.model.predict(e),i=n.squeeze(),o=(0,_.lub)((function(){return(0,_.XD2)((0,_.tPi)(i,[0,0],[-1,1])).squeeze()})),s=(0,_.tPi)(i,[0,1],[-1,4]),a=this.normalizeBoxes(s),u=console.warn,console.warn=function(){},c=_.BHj.nonMaxSuppression(a,o,1,this.iouThreshold,this.scoreThreshold),console.warn=u,[4,c.array()];case 1:return l=y.sent(),h=[e,n,c,i,a,s,o],0===l.length?(h.forEach((function(t){return t.dispose()})),[2,null]):(p=l[0],d=(0,_.tPi)(a,[p,0],[1,-1]),f=(0,_.tPi)(i,[p,5],[1,14]),m=(0,_.lub)((function(){return g.normalizeLandmarks(f,p).reshape([-1,2])})),h.push(f),h.forEach((function(t){return t.dispose()})),[2,{boxes:d,palmLandmarks:m}])}}))}))},t.prototype.estimateHandBounds=function(t){return Er(this,void 0,void 0,(function(){var e,n,r,i,o,s,a,u,c=this;return Mr(this,(function(l){switch(l.label){case 0:return e=t.shape[1],n=t.shape[2],r=(0,_.lub)((function(){return t.resizeBilinear([c.width,c.height]).div(255)})),[4,this.getBoundingBoxes(r)];case 1:return null===(i=l.sent())?(r.dispose(),[2,null]):(o=i.boxes.arraySync(),s=o[0].slice(0,2),a=o[0].slice(2,4),u=i.palmLandmarks.arraySync(),r.dispose(),i.boxes.dispose(),i.palmLandmarks.dispose(),[2,(h={startPoint:s,endPoint:a,palmLandmarks:u},p=[n/this.width,e/this.height],{startPoint:[h.startPoint[0]*p[0],h.startPoint[1]*p[1]],endPoint:[h.endPoint[0]*p[0],h.endPoint[1]*p[1]],palmLandmarks:h.palmLandmarks.map((function(t){return[t[0]*p[0],t[1]*p[1]]}))})])}var h,p}))}))},t}(),Or={thumb:[1,2,3,4],indexFinger:[5,6,7,8],middleFinger:[9,10,11,12],ringFinger:[13,14,15,16],pinky:[17,18,19,20],palmBase:[0]},Lr=function(t,e){return[[1,0,t],[0,1,e],[0,0,1]]};function kr(t,e){for(var n=0,r=0;r<t.length;r++)n+=t[r]*e[r];return n}function Pr(t,e){for(var n=[],r=0;r<t.length;r++)n.push(t[r][e]);return n}function $r(t,e){for(var n=[],r=t.length,i=0;i<r;i++){n.push([]);for(var o=0;o<r;o++)n[i].push(kr(t[i],Pr(e,o)))}return n}function Br(t,e){var n=Math.cos(t),r=Math.sin(t),i=[[n,-r,0],[r,n,0],[0,0,1]],o=$r(Lr(e[0],e[1]),i);return $r(o,Lr(-e[0],-e[1]))}function Fr(t,e){return[kr(t,e[0]),kr(t,e[1])]}var Ur=[0,-.4],zr=[0,-.1],Vr=[0,5,9,13,17,1,2],Wr=function(){function t(t,e,n,r,i,o){this.regionsOfInterest=[],this.runsWithoutHandDetector=0,this.boundingBoxDetector=t,this.meshDetector=e,this.maxContinuousChecks=i,this.detectionConfidence=o,this.meshWidth=n,this.meshHeight=r,this.maxHandsNumber=1}return t.prototype.getBoxForPalmLandmarks=function(t,e){var n=t.map((function(t){return Fr(t.concat([1]),e)}));return Nr(Rr(Ir(this.calculateLandmarksBoundingBox(n),Ur)),3)},t.prototype.getBoxForHandLandmarks=function(t){for(var e=Nr(Rr(Ir(this.calculateLandmarksBoundingBox(t),zr)),1.65),n=[],r=0;r<Vr.length;r++)n.push(t[Vr[r]].slice(0,2));return e.palmLandmarks=n,e},t.prototype.transformRawCoords=function(t,e,n,r){var i,o,s,a,u=this,c=Cr(e),l=[c[0]/this.meshWidth,c[1]/this.meshHeight],h=t.map((function(t){return[l[0]*(t[0]-u.meshWidth/2),l[1]*(t[1]-u.meshHeight/2),t[2]]})),p=Br(n,[0,0]),d=h.map((function(t){return Fr(t,p).concat([t[2]])})),f=(o=[[(i=r)[0][0],i[1][0]],[i[0][1],i[1][1]]],s=[i[0][2],i[1][2]],a=[-kr(o[0],s),-kr(o[1],s)],[o[0].concat(a[0]),o[1].concat(a[1]),[0,0,1]]),m=Ar(e).concat([1]),g=[kr(m,f[0]),kr(m,f[1])];return d.map((function(t){return[t[0]+g[0],t[1]+g[1],t[2]]}))},t.prototype.estimateHand=function(t){return Er(this,void 0,void 0,(function(){var e,n,r,i,o,s,a,u,c,l,h,p,d,f,m,g,y,v,x,b;return Mr(this,(function(w){switch(w.label){case 0:return!0!==(e=this.shouldUpdateRegionsOfInterest())?[3,2]:[4,this.boundingBoxDetector.estimateHandBounds(t)];case 1:return null===(n=w.sent())?(t.dispose(),this.regionsOfInterest=[],[2,null]):(this.updateRegionsOfInterest(n,!0),this.runsWithoutHandDetector=0,[3,3]);case 2:this.runsWithoutHandDetector++,w.label=3;case 3:return r=this.regionsOfInterest[0],i=function(t,e){var n;return(n=Math.PI/2-Math.atan2(-(e[1]-t[1]),e[0]-t[0]))-2*Math.PI*Math.floor((n+Math.PI)/(2*Math.PI))}(r.palmLandmarks[0],r.palmLandmarks[2]),o=Ar(r),s=[o[0]/t.shape[2],o[1]/t.shape[1]],a=_.BHj.rotateWithOffset(t,i,0,s),u=Br(-i,o),c=!0===e?this.getBoxForPalmLandmarks(r.palmLandmarks,u):r,l=function(t,e,n){var r=e.shape[1],i=e.shape[2],o=[[t.startPoint[1]/r,t.startPoint[0]/i,t.endPoint[1]/r,t.endPoint[0]/i]];return _.BHj.cropAndResize(e,o,[0],n)}(c,a,[this.meshWidth,this.meshHeight]),h=l.div(255),l.dispose(),a.dispose(),"webgl"===(0,_.N_N)()?(d=(0,_.OBj)().get("WEBGL_PACK_DEPTHWISECONV"),(0,_.OBj)().set("WEBGL_PACK_DEPTHWISECONV",!0),p=this.meshDetector.predict(h),(0,_.OBj)().set("WEBGL_PACK_DEPTHWISECONV",d)):p=this.meshDetector.predict(h),f=p[0],m=p[1],h.dispose(),g=f.dataSync()[0],f.dispose(),g<this.detectionConfidence?(m.dispose(),this.regionsOfInterest=[],[2,null]):(y=(0,_.XLQ)(m,[-1,3]),v=y.arraySync(),m.dispose(),y.dispose(),x=this.transformRawCoords(v,c,i,u),b=this.getBoxForHandLandmarks(x),this.updateRegionsOfInterest(b,!1),[2,{landmarks:x,handInViewConfidence:g,boundingBox:{topLeft:b.startPoint,bottomRight:b.endPoint}}])}}))}))},t.prototype.calculateLandmarksBoundingBox=function(t){var e=t.map((function(t){return t[0]})),n=t.map((function(t){return t[1]}));return{startPoint:[Math.min.apply(Math,e),Math.min.apply(Math,n)],endPoint:[Math.max.apply(Math,e),Math.max.apply(Math,n)]}},t.prototype.updateRegionsOfInterest=function(t,e){if(e)this.regionsOfInterest=[t];else{var n=this.regionsOfInterest[0],r=0;if(null!=n&&null!=n.startPoint){var i=t.startPoint,o=i[0],s=i[1],a=t.endPoint,u=a[0],c=a[1],l=n.startPoint,h=l[0],p=l[1],d=n.endPoint,f=d[0],m=d[1],g=Math.max(o,h),y=Math.max(s,p),v=(Math.min(u,f)-g)*(Math.min(c,m)-y);r=v/((u-o)*(c-s)+(f-h)*(m-s)-v)}this.regionsOfInterest[0]=r>.8?n:t}},t.prototype.shouldUpdateRegionsOfInterest=function(){return this.regionsOfInterest.length!==this.maxHandsNumber||this.runsWithoutHandDetector>=this.maxContinuousChecks},t}();function Hr(){return Er(this,void 0,void 0,(function(){return Mr(this,(function(t){return[2,Tr("https://tfhub.dev/mediapipe/tfjs-model/handdetector/1/default/1",{fromTFHub:!0})]}))}))}function Gr(){return Er(this,void 0,void 0,(function(){return Mr(this,(function(t){return[2,Tr("https://tfhub.dev/mediapipe/tfjs-model/handskeleton/1/default/1",{fromTFHub:!0})]}))}))}function jr(){return Er(this,void 0,void 0,(function(){return Mr(this,(function(t){return[2,_.D5U.he("https://tfhub.dev/mediapipe/tfjs-model/handskeleton/1/default/1/anchors.json?tfjs-format=file").then((function(t){return t.json()}))]}))}))}function Xr(t){var e=void 0===t?{}:t,n=e.maxContinuousChecks,r=void 0===n?1/0:n,i=e.detectionConfidence,o=void 0===i?.8:i,s=e.iouThreshold,a=void 0===s?.3:s,u=e.scoreThreshold,c=void 0===u?.5:u;return Er(this,void 0,void 0,(function(){var t,e,n,i,s,u;return Mr(this,(function(l){switch(l.label){case 0:return[4,Promise.all([jr(),Hr(),Gr()])];case 1:return t=l.sent(),e=t[0],n=t[1],i=t[2],s=new Dr(n,256,256,e,a,c),u=new Wr(s,i,256,256,r,o),[2,new qr(u)]}}))}))}var qr=function(){function t(t){this.pipeline=t}return t.getAnnotations=function(){return Or},t.prototype.estimateHands=function(t,e){return void 0===e&&(e=!1),Er(this,void 0,void 0,(function(){var n,r,i,o,s,a,u,c,l;return Mr(this,(function(h){switch(h.label){case 0:return n=function(t){return t instanceof _.esB?[t.shape[0],t.shape[1]]:[t.height,t.width]}(t),r=n[1],i=(0,_.lub)((function(){return t instanceof _.esB||(t=_.Xhn.n(t)),t.toFloat().expandDims(0)})),[4,this.pipeline.estimateHand(i)];case 1:if(o=h.sent(),i.dispose(),null===o)return[2,[]];for(s=o,!0===e&&(s=function(t,e){var n=t.handInViewConfidence,r=t.landmarks,i=t.boundingBox;return{handInViewConfidence:n,landmarks:r.map((function(t){return[e-1-t[0],t[1],t[2]]})),boundingBox:{topLeft:[e-1-i.topLeft[0],i.topLeft[1]],bottomRight:[e-1-i.bottomRight[0],i.bottomRight[1]]}}}(o,r)),a={},u=0,c=Object.keys(Or);u<c.length;u++)l=c[u],a[l]=Or[l].map((function(t){return s.landmarks[t]}));return[2,[{handInViewConfidence:s.handInViewConfidence,boundingBox:s.boundingBox,landmarks:s.landmarks,annotations:a}]]}}))}))},t}()},8713:function(t,e,n){"use strict";n.d(e,{JL:function(){return r},Zu:function(){return i}});class r{constructor(t,e){this.backend=t,this.dataMover=e,this.data=new WeakMap,this.dataIdsCount=0}get(t){return this.data.has(t)||this.dataMover.moveData(this.backend,t),this.data.get(t)}set(t,e){this.dataIdsCount++,this.data.set(t,e)}has(t){return this.data.has(t)}delete(t){return this.dataIdsCount--,this.data.delete(t)}numDataIds(){return this.dataIdsCount}}class i{time(t){return o("time")}read(t){return o("read")}readSync(t){return o("readSync")}numDataIds(){return o("numDataIds")}disposeData(t){return o("disposeData")}write(t,e,n){return o("write")}move(t,e,n,r){return o("move")}memory(){return o("memory")}floatPrecision(){return o("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}batchMatMul(t,e,n,r){return o("batchMatMul")}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:r,bias:i,activation:s,preluActivationWeights:a}){return o("fusedBatchMatMul")}slice(t,e,n){return o("slice")}stridedSlice(t,e,n,r){return o("stridedSlice")}unstack(t,e){return o("unstack")}reverse(t,e){return o("reverse")}concat(t,e){return o("concat")}neg(t){return o("neg")}add(t,e){return o("add")}addN(t){return o("addN")}subtract(t,e){return o("subtract")}multiply(t,e){return o("multiply")}realDivide(t,e){return o("realDivide")}floorDiv(t,e){return o("floorDiv")}sum(t,e){return o("sum")}prod(t,e){return o("prod")}unsortedSegmentSum(t,e,n){return o("unsortedSegmentSum")}argMin(t,e){return o("argMin")}argMax(t,e){return o("argMax")}equal(t,e){return o("equal")}notEqual(t,e){return o("notEqual")}less(t,e){return o("less")}lessEqual(t,e){return o("lessEqual")}greater(t,e){return o("greater")}greaterEqual(t,e){return o("greaterEqual")}logicalNot(t){return o("logicalNot")}logicalAnd(t,e){return o("logicalAnd")}logicalOr(t,e){return o("logicalOr")}where(t){return o("where")}select(t,e,n){return o("select")}topk(t,e,n){return o("topk")}min(t,e){return o("min")}minimum(t,e){return o("minimum")}mod(t,e){return o("mod")}max(t,e){return o("max")}maximum(t,e){return o("maximum")}all(t,e){return o("all")}any(t,e){return o("any")}squaredDifference(t,e){return o("squaredDifference")}ceil(t){return o("ceil")}floor(t){return o("floor")}round(t){return o("round")}sign(t){return o("sign")}isNaN(t){return o("isNaN")}isInf(t){return o("isInf")}isFinite(t){return o("isFinite")}pow(t,e){return o("pow")}exp(t){return o("exp")}expm1(t){return o("expm1")}softmax(t,e){return o("softmax")}log(t){return o("log")}log1p(t){return o("log1p")}sqrt(t){return o("sqrt")}rsqrt(t){return o("rsqrt")}square(t){return o("square")}reciprocal(t){return o("reciprocal")}relu(t){return o("relu")}relu6(t){return o("relu6")}prelu(t,e){return o("prelu")}elu(t){return o("elu")}eluDer(t,e){return o("eluDer")}selu(t){return o("selu")}int(t){return o("int")}clip(t,e,n){return o("clip")}abs(t){return o("abs")}complexAbs(t){return o("complexAbs")}sigmoid(t){return o("sigmoid")}softplus(t){return o("softplus")}sin(t){return o("sin")}cos(t){return o("cos")}tan(t){return o("tan")}asin(t){return o("asin")}acos(t){return o("acos")}atan(t){return o("atan")}atan2(t,e){return o("atan2")}sinh(t){return o("sinh")}cosh(t){return o("cosh")}tanh(t){return o("tanh")}asinh(t){return o("asinh")}acosh(t){return o("acosh")}atanh(t){return o("atanh")}erf(t){return o("erf")}step(t,e){return o("step")}fusedConv2d({input:t,filter:e,convInfo:n,bias:r,activation:i,preluActivationWeights:s}){return o("fusedConv2d")}conv2d(t,e,n){return o("conv2d")}conv2dDerInput(t,e,n){return o("conv2dDerInput")}conv2dDerFilter(t,e,n){return o("conv2dDerFilter")}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:r,activation:i,preluActivationWeights:s}){return o("fusedDepthwiseConv2D")}depthwiseConv2D(t,e,n){return o("depthwiseConv2D")}depthwiseConv2DDerInput(t,e,n){return o("depthwiseConv2DDerInput")}depthwiseConv2DDerFilter(t,e,n){return o("depthwiseConv2DDerFilter")}conv3d(t,e,n){return o("conv3d")}conv3dDerInput(t,e,n){return o("conv3dDerInput")}conv3dDerFilter(t,e,n){return o("conv3dDerFilter")}maxPool(t,e){return o("maxPool")}maxPoolBackprop(t,e,n,r){return o("maxPoolBackprop")}avgPool(t,e){return o("avgPool")}avgPoolBackprop(t,e,n){return o("avgPoolBackprop")}avgPool3d(t,e){return o("avgPool3d")}avgPool3dBackprop(t,e,n){return o("avgPool3dBackprop")}maxPool3d(t,e){return o("maxPool3d")}maxPool3dBackprop(t,e,n,r){return o("maxPool3dBackprop")}reshape(t,e){return o("reshape")}cast(t,e){return o("cast")}tile(t,e){return o("tile")}pad(t,e,n){return o("pad")}transpose(t,e){return o("transpose")}gather(t,e,n){return o("gather")}gatherND(t,e){return o("gatherND")}scatterND(t,e,n){return o("scatterND")}batchToSpaceND(t,e,n){return o("batchToSpaceND")}spaceToBatchND(t,e,n){return o("spaceToBatchND")}resizeBilinear(t,e,n,r){return o("resizeBilinear")}resizeBilinearBackprop(t,e,n){return o("resizeBilinearBackprop")}resizeNearestNeighbor(t,e,n,r){return o("resizeNearestNeighbor")}resizeNearestNeighborBackprop(t,e,n){return o("resizeNearestNeighborBackprop")}batchNorm(t,e,n,r,i,s){return o("batchNorm")}localResponseNormalization4D(t,e,n,r,i){return o("localResponseNormalization4D")}LRNGrad(t,e,n,r,i,s,a){return o("LRNGrad")}multinomial(t,e,n,r){return o("multinomial")}oneHot(t,e,n,r){return o("oneHot")}cumsum(t,e,n,r){return o("cumsum")}nonMaxSuppression(t,e,n,r,i){return o("nonMaxSuppression")}fft(t){return o("fft")}ifft(t){return o("ifft")}complex(t,e){return o("complex")}real(t){return o("real")}imag(t){return o("imag")}cropAndResize(t,e,n,r,i,s){return o("cropAndResize")}depthToSpace(t,e,n){return o("depthToSpace")}split(t,e,n){return o("split")}sparseToDense(t,e,n,r){return o("sparseToDense")}diag(t){return o("diag")}fill(t,e,n){return o("fill")}onesLike(t){return o("onesLike")}zerosLike(t){return o("zerosLike")}linspace(t,e,n){return o("linspace")}dispose(){return o("dispose")}}function o(t){throw new Error(`'${t}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}},2055:function(t,e,n){"use strict";n.d(e,{GP:function(){return a},qP:function(){return u},pA:function(){return c}});var r=n(9494),i=n(6092);function o(t,e,n){const r=function(t,e,n){return function(t,e,n){let r=0,i=t.length,o=0,s=!1;for(;r<i;){o=r+(i-r>>>1);const a=n(e,t[o]);a>0?r=o+1:(i=o,s=!a)}return s?r:-r-1}(t,e,n||s)}(t,e,n),i=r<0?-(r+1):r;t.splice(i,0,e)}function s(t,e){return t>e?1:t<e?-1:0}function a(t,e,n,r,i){return l(t,e,n,r,i,0).selectedIndices}function u(t,e,n,r,i,o){return l(t,e,n,r,i,0,!1,o,!0)}function c(t,e,n,r,i,o){return l(t,e,n,r,i,o,!0)}function l(t,e,n,s,a,u,c=!1,l=!1,f=!1){const m=[];for(let t=0;t<e.length;t++)e[t]>a&&m.push({score:e[t],boxIndex:t,suppressBeginIndex:0});m.sort(d);const g=u>0?-.5/u:0,y=[],v=[];for(;y.length<n&&m.length>0;){const e=m.pop(),{score:n,boxIndex:r,suppressBeginIndex:i}=e;if(n<a)break;let u=!1;for(let n=y.length-1;n>=i;--n){const i=h(t,r,y[n]);if(i>=s){u=!0;break}if(e.score=e.score*p(s,g,i),e.score<=a)break}e.suppressBeginIndex=y.length,u||(e.score===n?(y.push(r),v.push(e.score)):e.score>a&&o(m,e,d))}const x=y.length,b=n-x;l&&b>0&&(y.push(...new Array(b).fill(0)),v.push(...new Array(b).fill(0)));const w={selectedIndices:(0,i.R)(y,"int32")};return c&&(w.selectedScores=(0,i.R)(v,"float32")),f&&(w.validOutputs=(0,r.i)(x,"int32")),w}function h(t,e,n){const r=t.subarray(4*e,4*e+4),i=t.subarray(4*n,4*n+4),o=Math.min(r[0],r[2]),s=Math.min(r[1],r[3]),a=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),c=Math.min(i[0],i[2]),l=Math.min(i[1],i[3]),h=Math.max(i[0],i[2]),p=Math.max(i[1],i[3]),d=(a-o)*(u-s),f=(h-c)*(p-l);if(d<=0||f<=0)return 0;const m=Math.max(o,c),g=Math.max(s,l),y=Math.min(a,h),v=Math.min(u,p),x=Math.max(y-m,0)*Math.max(v-g,0);return x/(d+f-x)}function p(t,e,n){const r=Math.exp(e*n*n);return n<=t?r:0}function d(t,e){return t.score-e.score||t.score===e.score&&e.boxIndex-t.boxIndex}},8333:function(t,e,n){"use strict";n.d(e,{Z:function(){return i}});var r=n(2657);function i(t,e){const n=[];for(let t=0;t<e.length;t++)e[t]&&n.push(t);const i=(0,r.f)(t,"int32"),o=(0,r.f)([n.length,t.length],"int32");for(let e=0;e<n.length;e++){const r=i.indexToLoc(n[e]),s=e*t.length;o.values.set(r,s)}return o.toTensor()}},7097:function(t,e,n){"use strict";n.d(e,{BV:function(){return v},wv:function(){return y}});var r=n(8713),i=n(2885),o=n(5938),s=n(9121),a=n(6151),u=n(569);class c{constructor(t,e){this.backendTimer=t,this.logger=e,null==e&&(this.logger=new h)}profileKernel(t,e,n){let r;const i=this.backendTimer.time((()=>{r=n()}));for(let e=0;e<r.length;e++){const n=r[e];n.data().then((e=>{l(e,n.dtype,t)}))}return{kernelName:t,outputs:r,inputs:e,timeMs:i.then((t=>t.kernelMs)),extraInfo:i.then((t=>null!=t.getExtraProfileInfo?t.getExtraProfileInfo():""))}}logKernelProfile(t){const{kernelName:e,outputs:n,timeMs:r,inputs:i,extraInfo:o}=t;n.forEach((t=>{Promise.all([t.data(),r,o]).then((n=>{this.logger.logKernelProfile(e,t,n[0],n[1],i,n[2])}))}))}}function l(t,e,n){if("float32"!==e)return!1;for(let e=0;e<t.length;e++){const r=t[e];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class h{logKernelProfile(t,e,n,r,i,o){const s="number"==typeof r?u.oj(`${r}ms`,9):r.error,a=u.oj(t,25),c=e.rank,l=e.size,h=u.oj(e.shape.toString(),14);let p="";for(const t in i){const n=i[t];if(null!=n){const r=n.shape||e.shape,i=r.length;p+=`${t}: ${i}D ${i>0?r:""} `}}console.log(`%c${a}\t%c${s}\t%c${c}D ${h}\t%c${l}\t%c${p}\t%c${o}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}var p=n(4077),d=n(747),f=n(9155);class m{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null}}dispose(){for(const t in this.registeredVariables)this.registeredVariables[t].dispose()}}class g{constructor(t){this.ENV=t,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new m}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:t,asyncInit:e}=this.initializeBackendsAndReturnBest();if(e)throw new Error(`The highest priority backend '${t}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(t)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(t){if(!(t in this.registry)){if(!(t in this.registryFactory))return null;{const{asyncInit:e}=this.initializeBackend(t);if(e)return null}}return this.registry[t]}findBackendFactory(t){return t in this.registryFactory?this.registryFactory[t].factory:null}registerBackend(t,e,n=1){return t in this.registryFactory?(console.warn(`${t} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[t]={factory:e,priority:n},!0)}async setBackend(t){if(null==this.registryFactory[t])throw new Error(`Backend name '${t}' not found in registry`);if(this.backendName=t,null==this.registry[t]){this.backendInstance=null;const{success:e,asyncInit:n}=this.initializeBackend(t);if(!(n?await e:e))return!1}return this.backendInstance=this.registry[t],this.setupRegisteredKernels(),this.profiler=new c(this.backendInstance),!0}setupRegisteredKernels(){(0,a.tr)(this.backendName).forEach((t=>{null!=t.setupFunc&&t.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(t){(0,a.tr)(t).forEach((e=>{null!=e.disposeFunc&&e.disposeFunc(this.registry[t])}))}initializeBackend(t){const e=this.registryFactory[t];if(null==e)throw new Error(`Cannot initialize backend ${t}, no registration found.`);try{const n=e.factory();if(!n||n instanceof r.Zu||"function"!=typeof n.then)return this.registry[t]=n,{success:!0,asyncInit:!1};{const e=++this.pendingBackendInitId,r=n.then((n=>!(e<this.pendingBackendInitId||(this.registry[t]=n,this.pendingBackendInit=null,0)))).catch((n=>(e<this.pendingBackendInitId||(this.pendingBackendInit=null,console.warn(`Initialization of backend ${t} failed`),console.warn(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(e){return console.warn(`Initialization of backend ${t} failed`),console.warn(e.stack||e.message),{success:!1,asyncInit:!1}}}removeBackend(t){if(!(t in this.registryFactory))throw new Error(`${t} backend not found in registry`);this.backendName===t&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,t in this.registry&&(this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t]),delete this.registryFactory[t],this.backendName===t&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((t,e)=>this.registryFactory[e].priority-this.registryFactory[t].priority))}initializeBackendsAndReturnBest(){const t=this.getSortedBackends();for(let e=0;e<t.length;e++){const n=t[e],{success:r,asyncInit:i}=this.initializeBackend(n);if(i||r)return{name:n,asyncInit:i}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(t,e){const n=this.state.tensorInfo.get(e),r=n.backend,i=this.readSync(e);r.disposeData(e),n.backend=t,t.move(e,i,n.shape,n.dtype),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(t,e){let n,r=null;if(null==e){if("function"!=typeof t)throw new Error("Please provide a function to tidy()");e=t}else{if("string"!=typeof t&&!(t instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof e)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=t}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=e(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(t,e,n){t();try{const t=n();return e(),t}catch(t){throw e(),t}}nextTensorId(){return g.nextTensorId++}nextVariableId(){return g.nextVariableId++}clone(t){const e=this.makeTensorFromDataId(t.dataId,t.shape,t.dtype),n={x:t};return this.addTapeNode(this.state.activeScope.name,n,[e],(t=>({x:()=>{const e="float32",n={x:t},r={dtype:e};return v.runKernelFunc((n=>n.cast(t,e)),n,null,s.RF,r)}})),[],{}),e}runKernel(t,e,n,r,i){return this.runKernelFunc(null,e,null,t,n,r,i)}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(t,e,n){const r=this.backend.numDataIds();let i=0;n.forEach((t=>{i+="complex64"===t.dtype?3:1}));const o=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],s=r-e-i-o;if(s>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${s} data ids) after running '${t}'`)}runKernelFunc(t,e,n,r,i,o,s){let u,c=[];const l=this.isTapeOn();null==r&&(r=null!=this.state.activeScope?this.state.activeScope.name:"");const h=this.state.numBytes,p=this.state.numTensors;let d;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0);const f=(0,a.pI)(r,this.backendName);let m,g;if(null!=f)d=()=>{const t=this.backend.numDataIds();m=f.kernelFunc({inputs:e,attrs:i,backend:this.backend});const n=Array.isArray(m)?m:[m];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,t,n);const a=n.map((({dataId:t,shape:e,dtype:n})=>this.makeTensorFromDataId(t,e,n)));if(l){let t=this.getTensorsForGradient(r,e,a);if(null==t){null==s&&(s=[]);const e=a.filter(((t,e)=>s[e]));t=(o||[]).slice().concat(e)}c=this.saveTensorsForBackwardMode(t)}return a};else{const e=t=>{l&&(c=t.map((t=>this.keep(this.clone(t)))))};d=()=>{const n=this.backend.numDataIds();m=this.tidy((()=>t(this.backend,e)));const i=Array.isArray(m)?m:[m];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(r,n,i),i}}return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(g=this.profiler.profileKernel(r,e,(()=>d())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(g),u=g.outputs):u=d()})),l&&this.addTapeNode(r,e,u,n,c,i),this.state.profiling&&this.state.activeProfile.kernels.push({name:r,bytesAdded:this.state.numBytes-h,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-p,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(e).map((t=>null!=e[t]?e[t].shape:null)),outputShapes:u.map((t=>t.shape)),kernelTimeMs:g.timeMs,extraInfo:g.extraInfo}),Array.isArray(m)?u:u[0]}saveTensorsForBackwardMode(t){return t.map((t=>this.keep(this.clone(t))))}getTensorsForGradient(t,e,n){const r=(0,a.uk)(t);if(null!=r){const t=r.inputsToSave||[],i=r.outputsToSave||[];let o;r.saveAllInputs?(u.hu(Array.isArray(e),(()=>"saveAllInputs is true, expected inputs to be an array.")),o=Object.keys(e).map((t=>e[t]))):o=t.map((t=>e[t]));const s=n.filter(((t,e)=>i[e]));return o.concat(s)}return null}makeTensor(t,e,n,r){if(null==t)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let i=t;"string"===n&&u.HD(t[0])&&(i=t.map((t=>f.YW(t))));const o=r.write(i,e,n),s=new p.es(e,n,o,this.nextTensorId());if(this.incRef(s,r),"string"===n){const t=this.state.tensorInfo.get(o),e=(0,u.Ub)(i);this.state.numBytes+=e-t.bytes,t.bytes=e}return s}makeTensorFromDataId(t,e,n,r){n=n||"float32";const i=new p.es(e,n,t,this.nextTensorId());return this.incRef(i,r),i}makeVariable(t,e=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==t.dtype&&(t=t.cast(r));const i=new p._w(t,e,n,this.nextTensorId());if(null!=this.state.registeredVariables[i.name])throw new Error(`Variable with name ${i.name} was already registered`);return this.state.registeredVariables[i.name]=i,this.incRef(i,this.backend),i}incRef(t,e){const n=this.state.tensorInfo.has(t.dataId)?this.state.tensorInfo.get(t.dataId).refCount:0;if(this.state.numTensors++,"string"===t.dtype&&this.state.numStringTensors++,0===n){this.state.numDataBuffers++;let n=0;"complex64"!==t.dtype&&"string"!==t.dtype&&(n=t.size*u.bT(t.dtype)),this.state.tensorInfo.set(t.dataId,{backend:e||this.backend,dtype:t.dtype,shape:t.shape,bytes:n,refCount:0}),this.state.numBytes+=n}this.state.tensorInfo.get(t.dataId).refCount++,t instanceof p._w||this.track(t)}disposeTensor(t){if(!this.state.tensorInfo.has(t.dataId))return;this.state.numTensors--,"string"===t.dtype&&this.state.numStringTensors--;const e=this.state.tensorInfo.get(t.dataId);e.refCount<=1?("complex64"!==t.dtype&&(this.state.numBytes-=e.bytes),this.state.numDataBuffers--,e.backend.disposeData(t.dataId),this.state.tensorInfo.delete(t.dataId)):this.state.tensorInfo.get(t.dataId).refCount--}disposeVariables(){for(const t in this.state.registeredVariables){const e=this.state.registeredVariables[t];this.disposeVariable(e)}}disposeVariable(t){this.disposeTensor(t),null!=this.state.registeredVariables[t.name]&&delete this.state.registeredVariables[t.name]}memory(){const t=this.backend.memory();return t.numTensors=this.state.numTensors,t.numDataBuffers=this.state.numDataBuffers,t.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(t.unreliable=!0,null==t.reasons&&(t.reasons=[]),t.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),t}async profile(t){this.state.profiling=!0;const e=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await t(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((t=>t.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-e,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const t of this.state.activeProfile.kernels)t.kernelTimeMs=await t.kernelTimeMs,t.extraInfo=await t.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(t,e,n,r,i,o){const s={id:this.state.nextTapeNodeId++,kernelName:t,inputs:e,outputs:n,saved:i},c=(0,a.uk)(t);null!=c&&(r=c.gradFunc),null!=r&&(s.gradient=t=>(t=t.map(((t,e)=>{if(null==t){const t=n[e],r=u.wT(t.size,t.dtype);return this.makeTensor(r,t.shape,t.dtype)}return t})),r(t.length>1?t:t[0],i,o))),this.state.activeTape.push(s)}keep(t){return t.kept=!0,t}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(t){const e={track:[],name:"unnamed scope",id:this.state.nextScopeId++};t&&(e.name=t),this.state.scopeStack.push(e),this.state.activeScope=e}endScope(t){const e=(0,d.Vu)(t),n=new Set(e.map((t=>t.id)));for(let t=0;t<this.state.activeScope.track.length;t++){const e=this.state.activeScope.track[t];e.kept||n.has(e.id)||e.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],e.forEach((t=>{t.kept||t.scopeId!==r.id||this.track(t)}))}gradients(t,e,n,r=!1){if(u.hu(e.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const i=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",t)));u.hu(i instanceof p.es,(()=>"The result y returned by f() must be a tensor."));const o=function(t,e,n){const r={},i={};for(let t=0;t<e.length;t++)r[e[t].id]=!0;for(let n=0;n<t.length;n++){const o=t[n],s=o.inputs;for(const t in s){const n=s[t];let a=!1;for(let t=0;t<e.length;t++)if(r[n.id]){o.outputs.forEach((t=>r[t.id]=!0)),a=!0,i[o.id]=!0;break}if(a)break}}const o={};o[n.id]=!0;const s={};for(let e=t.length-1;e>=0;e--){const n=t[e],r=n.inputs;for(let t=0;t<n.outputs.length;t++)if(o[n.outputs[t].id]){for(const t in r)o[r[t].id]=!0,s[n.id]=!0;break}}const a=[];for(let e=0;e<t.length;e++){const n=t[e];if(i[n.id]&&s[n.id]){const t={};for(const e in n.inputs){const i=n.inputs[e];r[i.id]&&(t[e]=i)}const e=Object.assign({},n);e.inputs=t,e.outputs=n.outputs,a.push(e)}}return a}(this.state.activeTape,e,i);if(!r&&0===o.length&&e.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const t={};t[i.id]=null==n?function(t){const e=(0,u.p8)((0,u.NA)(t),"float32");return v.makeTensor(e,t,"float32")}(i.shape):n,function(t,e,n,r){for(let i=e.length-1;i>=0;i--){const o=e[i],s=[];if(o.outputs.forEach((e=>{const n=t[e.id];null!=n?s.push(n):s.push(null)})),null==o.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${o.kernelName}.`);const a=o.gradient(s);for(const e in o.inputs){if(!(e in a))throw new Error(`Cannot backprop through input ${e}. Available gradients found: ${Object.keys(a)}.`);const i=n((()=>a[e]()));if("float32"!==i.dtype)throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input ${e} must have 'float32' dtype, but has '${i.dtype}'`);const s=o.inputs[e];if(!u.cO(i.shape,s.shape))throw new Error(`Error in gradient for op ${o.kernelName}. The gradient of input '${e}' has shape '${i.shape}', which does not match the shape of the input '${s.shape}'`);if(null==t[s.id])t[s.id]=i;else{const e=t[s.id];t[s.id]=r(e,i),e.dispose()}}}}(t,o,(t=>this.tidy(t)),x);const r=e.map((e=>t[e.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((t=>{for(const e of t.saved)e.dispose()})),this.state.activeTape=null),{value:i,grads:r}}))}customGrad(t){return u.hu(u.mf(t),(()=>"The f passed in customGrad(f) must be a function.")),(...e)=>{let n;u.hu(e.every((t=>t instanceof p.es)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return e.forEach(((t,e)=>{r[e]=t})),this.runKernelFunc(((r,i)=>(n=t(...e,i),u.hu(n.value instanceof p.es,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),u.hu(u.mf(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value)),r,((t,r)=>{const i=n.gradFunc(t,r),o=Array.isArray(i)?i:[i];u.hu(o.length===e.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),u.hu(o.every((t=>t instanceof p.es)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const s={};return o.forEach(((t,e)=>{s[e]=()=>t})),s}))}}readSync(t){return this.state.tensorInfo.get(t).backend.readSync(t)}read(t){return this.state.tensorInfo.get(t).backend.read(t)}async time(t){const e=(0,f.zO)(),n=await this.backend.time(t);return n.wallMs=(0,f.zO)()-e,n}track(t){return null!=this.state.activeScope&&(t.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(t)),t}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new m;for(const t in this.registry)this.disposeRegisteredKernels(t),this.registry[t].dispose(),delete this.registry[t];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function y(){const t=(0,o.D)();if(null==t._tfengine){const e=new i.qA(t);t._tfengine=new g(e)}return(0,i.iG)(t._tfengine.ENV),(0,p.Vi)((()=>t._tfengine)),t._tfengine}g.nextTensorId=0,g.nextVariableId=0;const v=y();function x(t,e){const n={a:t,b:e};return v.runKernelFunc(((n,r)=>{const i=n.add(t,e);return r([t,e]),i}),n,null,s.mm)}},2885:function(t,e,n){"use strict";n.d(e,{qA:function(){return i},OB:function(){return o},iG:function(){return a}});var r=n(569);class i{constructor(t){this.global=t,this.flags={},this.flagRegistry={},this.urlFlags={},this.populateURLFlags()}setPlatform(t,e){null!=this.platform&&console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${e}.`),this.platformName=t,this.platform=e}registerFlag(t,e,n){if(this.flagRegistry[t]={evaluationFn:e,setHook:n},null!=this.urlFlags[t]){const e=this.urlFlags[t];console.warn(`Setting feature override from URL ${t}: ${e}.`),this.set(t,e)}}async getAsync(t){return t in this.flags||(this.flags[t]=await this.evaluateFlag(t)),this.flags[t]}get(t){if(t in this.flags)return this.flags[t];const e=this.evaluateFlag(t);if((0,r.tI)(e))throw new Error(`Flag ${t} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[t]=e,this.flags[t]}getNumber(t){return this.get(t)}getBool(t){return this.get(t)}getFlags(){return this.flags}get features(){return this.flags}set(t,e){if(null==this.flagRegistry[t])throw new Error(`Cannot set flag ${t} as it has not been registered.`);this.flags[t]=e,null!=this.flagRegistry[t].setHook&&this.flagRegistry[t].setHook(e)}evaluateFlag(t){if(null==this.flagRegistry[t])throw new Error(`Cannot evaluate flag '${t}': no evaluation function found.`);return this.flagRegistry[t].evaluationFn()}setFlags(t){this.flags=Object.assign({},t)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const t=function(t){const e={};return t.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((t,...n)=>(function(t,e,n){t[decodeURIComponent(e)]=decodeURIComponent(n||"")}(e,n[0],n[1]),n.join("=")))),e}(this.global.location.search);"tfjsflags"in t&&t.tfjsflags.split(",").forEach((t=>{const[e,n]=t.split(":");this.urlFlags[e]=function(t,e){if("true"===(e=e.toLowerCase())||"false"===e)return"true"===e;if(""+ +e===e)return+e;throw new Error(`Could not parse value flag value ${e} for flag ${t}.`)}(e,n)}))}}function o(){return s}let s=null;function a(t){s=t}},5938:function(t,e,n){"use strict";let r;function i(){if(null==r){let t;if("undefined"!=typeof window)t=window;else if(void 0!==n.g)t=n.g;else if("undefined"!=typeof process)t=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");t=self}r=t}return r}function o(t,e){const n=function(){const t=i();return null==t._tfGlobals&&(t._tfGlobals=new Map),t._tfGlobals}();if(n.has(t))return n.get(t);{const r=e();return n.set(t,r),n.get(t)}}n.d(e,{D:function(){return i},R:function(){return o}})},4368:function(t,e,n){"use strict";n.d(e,{MX:function(){return a},SR:function(){return u},lu:function(){return c},B9:function(){return l},Cn:function(){return h},CQ:function(){return p},N_:function(){return d},jq:function(){return f}});var r=n(7097),i=n(2885),o=n(4077),s=n(747);function a(t){(0,i.OB)().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(t+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function u(){return r.BV}function c(t,e){return r.BV.tidy(t,e)}function l(t){(0,s.Vu)(t).forEach((t=>t.dispose()))}function h(t){return r.BV.keep(t)}function p(t){return r.BV.setBackend(t)}function d(){return r.BV.backendName}function f(t,e,n=1){return r.BV.registerBackend(t,e,n)}(0,o.FZ)(a)},633:function(t,e,n){"use strict";n.d(e,{cb:function(){return i}});var r=n(7097);function i(t){return r.BV.customGrad(t)}},6743:function(t,e,n){"use strict";n.d(e,{SYM:function(){return ct.SY},mm_:function(){return ct.mm},QCc:function(){return ct.QC},JhU:function(){return ct.Jh},xts:function(){return ct.xt},RFZ:function(){return ct.RF},gJX:function(){return ct.gJ},Zz9:function(){return ct.Zz},Eh3:function(){return ct.Eh},mc4:function(){return ct.mc},JLz:function(){return de.JL},ZCY:function(){return ct.ZC},NEP:function(){return ct.NE},Y0y:function(){return ct.Y0},vwp:function(){return ct.vw},Uyb:function(){return ct.Uy},OR:function(){return ct.OR},eBW:function(){return ct.eB},sHE:function(){return ct.sH},Qg5:function(){return ct.Qg},iJz:function(){return ct.iJ},J_u:function(){return ct.J_},Zuw:function(){return de.Zu},ZbH:function(){return ct.Zb},YoZ:function(){return ct.Yo},mTV:function(){return ct.mT},GvW:function(){return ct.Gv},vFR:function(){return ct.vF},q2K:function(){return ct.q2},jQs:function(){return ct.jQ},wYn:function(){return ct.wY},uv1:function(){return ct.uv},cye:function(){return ct.cy},W0H:function(){return ct.W0},yQU:function(){return ct.yQ},xJR:function(){return ct.xJ},HZH:function(){return ct.HZ},b9H:function(){return ct.b9},bV0:function(){return ct.bV},RQH:function(){return ct.RQ},p2w:function(){return ct.p2},bK0:function(){return ct.bK},_tC:function(){return ct._t},Tr8:function(){return ct.Tr},sEM:function(){return ct.sE},esB:function(){return J.es},YDk:function(){return J.YD},G3Y:function(){return ct.G3},kpP:function(){return ct.kp},IHx:function(){return xt.IHx},Wap:function(){return s},Xhn:function(){return o},f3b:function(){return xt.f3b},d9v:function(){return xt.d9v},zoF:function(){return xt.zoF},Izb:function(){return xt.Izb},C2$:function(){return r},hiC:function(){return xt.hiC},SRH:function(){return bt.SR},OBj:function(){return h.OB},N_N:function(){return bt.N_},BHj:function(){return xt.BHj},io:function(){return i},CnY:function(){return bt.Cn},GDt:function(){return a},Fp7:function(){return xt.Fp7},dC7:function(){return xt.dC7},w6H:function(){return xt.w6H},jqO:function(){return bt.jq},wCN:function(){return lt.wC},XLQ:function(){return xt.XLQ},iD$:function(){return xt.iD$},CQI:function(){return bt.CQ},XD2:function(){return xt.XD2},tPi:function(){return xt.tPi},kuN:function(){return gt},XAC:function(){return xt.XAC},knu:function(){return xt.knu},luU:function(){return xt.luU},z4k:function(){return vt.z4},XeE:function(){return xt.XeE},RRF:function(){return xt.RRF},odF:function(){return xt.odF},lub:function(){return bt.lu},p4s:function(){return xt.p4s},HHK:function(){return xt.HHK},x8V:function(){return vt.x8},D5U:function(){return yt},lls:function(){return xt.lls}});var r={};n.r(r),n.d(r,{j:function(){return l},t:function(){return c}});var i={};n.r(i),n.d(i,{MP:function(){return ut},dI:function(){return y},rM:function(){return E},yB:function(){return T}});var o={};n.r(o),n.d(o,{n:function(){return mt}});var s={};n.r(s),n.d(s,{ERF_A1:function(){return zt},ERF_A2:function(){return Vt},ERF_A3:function(){return Wt},ERF_A4:function(){return Ht},ERF_A5:function(){return Gt},ERF_P:function(){return Ut},PARALLELIZE_THRESHOLD:function(){return Nt.g},SELU_SCALE:function(){return Ft},SELU_SCALEALPHA:function(){return Bt},applyActivation:function(){return At.QH},assertAndGetBroadcastShape:function(){return Et.$N},assertAxesAreInnerMostDims:function(){return Tt.lB},assertParamsConsistent:function(){return Mt.o},assignToTypedArray:function(){return Qt},axesAreInnerMostDims:function(){return Tt.YB},calculateShapes:function(){return $t.SU},castTensor:function(){return ie},combineLocations:function(){return Tt.Vh},complexWithEvenIndex:function(){return Kt},complexWithOddIndex:function(){return Zt},computeConv2DInfo:function(){return Ct.Ix},computeConv3DInfo:function(){return Ct.jw},computeDefaultPad:function(){return Ct.aO},computeDilation2DInfo:function(){return Ct.Rf},computeOptimalWindowSize:function(){return Nt.A},computeOutAndReduceShapes:function(){return Tt.kz},computeOutShape:function(){return Mt.N},computePool2DInfo:function(){return Ct.Xw},computePool3DInfo:function(){return Ct.pl},convertConv2DDataFormat:function(){return Ct.sl},eitherStridesOrDilationsAreOne:function(){return Ct.jT},expandShapeToKeepDim:function(){return Tt.rv},exponent:function(){return ee},exponents:function(){return te},getAxesPermutation:function(){return Tt.Q3},getBroadcastDims:function(){return Et.XF},getComplexWithIndex:function(){return Jt},getFusedBiasGradient:function(){return At.pf},getFusedDyActivation:function(){return At.Fr},getImageCenter:function(){return Rt},getInnerMostAxes:function(){return Tt.sY},getPermuted:function(){return Dt},getReductionAxes:function(){return Et.RR},getReshaped:function(){return It},getReshapedPermuted:function(){return Ot},getSliceBeginCoords:function(){return Lt},getSliceSize:function(){return kt},getUndoAxesPermutation:function(){return Tt.LJ},linspaceImpl:function(){return se},log:function(){return Xt},mergeRealAndImagArrays:function(){return qt},prepareAndValidate:function(){return Pt},prepareSplitSize:function(){return ne.O},reshapeTensor:function(){return oe},segment_util:function(){return re},shouldFuse:function(){return At.uy},slice_util:function(){return gt},splitRealAndImagArrays:function(){return Yt},tupleValuesAreOne:function(){return Ct.I0},upcastType:function(){return vt.x8},validateInput:function(){return $t.b0},validateUpdateShape:function(){return $t.l5},warn:function(){return jt}});var a={};n.r(a),n.d(a,{GP:function(){return ae.GP},qP:function(){return ae.qP},pA:function(){return ae.pA},Vl:function(){return ce},Gg:function(){return le},vN:function(){return he},ZA:function(){return pe.Z}});var u=n(7097);function c(){if("undefined"!=typeof navigator&&null!=navigator){const t=navigator.userAgent||navigator.vendor||window.opera;return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function l(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}var h=n(2885);const p=(0,h.OB)();p.registerFlag("DEBUG",(()=>!1),(t=>{t&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),p.registerFlag("IS_BROWSER",(()=>l())),p.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),p.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),p.registerFlag("PROD",(()=>!1)),p.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>p.getBool("DEBUG"))),p.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),p.registerFlag("IS_TEST",(()=>!1));var d=n(1661),f=n(701),m=n(569);const g={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};function y(t,e){const n={};let r,i=0;for(const o of e){const e=o.name,s=o.dtype,a=o.shape,u=(0,m.NA)(a);let c;if("quantization"in o){const n=o.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${o.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${o.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==s)throw new Error(`Weight ${o.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${s}.`)}const a=g[n.dtype],l=t.slice(i,i+u*a),h="uint8"===n.dtype?new Uint8Array(l):new Uint16Array(l);if("float32"===s)if("uint8"===n.dtype||"uint16"===n.dtype){c=new Float32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];c[t]=e*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=_()),c=r(h)}else{if("int32"!==s)throw new Error(`Unsupported dtype in weight '${e}': ${s}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);c=new Int32Array(h.length);for(let t=0;t<h.length;t++){const e=h[t];c[t]=Math.round(e*n.scale+n.min)}}i+=u*a}else if("string"===s){const e=(0,m.NA)(o.shape);c=[];for(let n=0;n<e;n++){const e=new Uint32Array(t.slice(i,i+4))[0];i+=4;const n=new Uint8Array(t.slice(i,i+e));c.push(n),i+=e}}else{const r=g[s],o=t.slice(i,i+u*r);if("float32"===s)c=new Float32Array(o);else if("int32"===s)c=new Int32Array(o);else if("bool"===s)c=new Uint8Array(o);else{if("complex64"!==s)throw new Error(`Unsupported dtype in weight '${e}': ${s}`);{c=new Float32Array(o);const t=new Float32Array(c.length/2),r=new Float32Array(c.length/2);for(let e=0;e<t.length;e++)t[e]=c[2*e],r[e]=c[2*e+1];const i=(0,f.X)(t,a,"float32"),s=(0,f.X)(r,a,"float32");n[e]=(0,d.P)(i,s),i.dispose(),s.dispose()}}i+=u*r}"complex64"!==s&&(n[e]=(0,f.X)(c,a,s))}return n}const v="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function x(t){return v?Buffer.byteLength(t):new Blob([t]).size}function b(t){if(1===t.length)return t[0];let e=0;t.forEach((t=>{e+=t.byteLength}));const n=new Uint8Array(e);let r=0;return t.forEach((t=>{n.set(new Uint8Array(t),r),r+=t.byteLength})),n.buffer}function w(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==t.modelTopology?0:x(JSON.stringify(t.modelTopology)),weightSpecsBytes:null==t.weightSpecs?0:x(JSON.stringify(t.weightSpecs)),weightDataBytes:null==t.weightData?0:t.weightData.byteLength}}function _(){const t=function(){const t=t=>{let e=t<<13,n=0;for(;0==(8388608&e);)n-=8388608,e<<=1;return e&=-8388609,n+=947912704,e|n},e=new Uint32Array(2048);e[0]=0;for(let n=1;n<1024;n++)e[n]=t(n);for(let t=1024;t<2048;t++)e[t]=939524096+(t-1024<<13);return e}(),e=function(){const t=new Uint32Array(64);t[0]=0,t[31]=1199570944,t[32]=2147483648,t[63]=3347054592;for(let e=1;e<31;e++)t[e]=e<<23;for(let e=33;e<63;e++)t[e]=2147483648+(e-32<<23);return t}(),n=function(){const t=new Uint32Array(64);for(let e=0;e<64;e++)t[e]=1024;return t[0]=t[32]=0,t}();return r=>{const i=new ArrayBuffer(4*r.length),o=new Uint32Array(i);for(let i=0;i<r.length;i++){const s=r[i],a=t[n[s>>10]+(1023&s)]+e[s>>10];o[i]=a}return new Float32Array(i)}}class S{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==S.instance&&(S.instance=new S),S.instance}static registerSaveRouter(t){S.getInstance().saveRouters.push(t)}static registerLoadRouter(t){S.getInstance().loadRouters.push(t)}static getSaveHandlers(t){return S.getHandlers(t,"save")}static getLoadHandlers(t,e){return S.getHandlers(t,"load",e)}static getHandlers(t,e,n){const r=[];return("load"===e?S.getInstance().loadRouters:S.getInstance().saveRouters).forEach((e=>{const i=e(t,n);null!==i&&r.push(i)})),r}}const T=t=>S.getSaveHandlers(t),E=(t,e)=>S.getLoadHandlers(t,e),M="tensorflowjs",C="models_store",A="model_info_store";function N(){if(!(0,h.OB)().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const t="undefined"==typeof window?self:window,e=t.indexedDB||t.mozIndexedDB||t.webkitIndexedDB||t.msIndexedDB||t.shimIndexedDB;if(null==e)throw new Error("The current browser does not appear to support IndexedDB.");return e}function R(t){const e=t.result;e.createObjectStore(C,{keyPath:"modelPath"}),e.createObjectStore(A,{keyPath:"modelPath"})}class I{constructor(t){if(this.indexedDB=N(),null==t||!t)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=t}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,t)}async load(){return this.databaseAction(this.modelPath)}databaseAction(t,e){return new Promise(((t,n)=>{const r=this.indexedDB.open(M,1);r.onupgradeneeded=()=>R(r),r.onsuccess=()=>{const i=r.result;if(null==e){const e=i.transaction(C,"readonly"),r=e.objectStore(C).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return i.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));t(r.result.modelArtifacts)},r.onerror=t=>(i.close(),n(r.error)),e.oncomplete=()=>i.close()}else{const r=w(e),o=i.transaction(A,"readwrite");let s=o.objectStore(A);const a=s.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;a.onsuccess=()=>{u=i.transaction(C,"readwrite");const a=u.objectStore(C).put({modelPath:this.modelPath,modelArtifacts:e,modelArtifactsInfo:r});a.onsuccess=()=>t({modelArtifactsInfo:r}),a.onerror=t=>{s=o.objectStore(A);const e=s.delete(this.modelPath);e.onsuccess=()=>(i.close(),n(a.error)),e.onerror=t=>(i.close(),n(a.error))}},a.onerror=t=>(i.close(),n(a.error)),o.oncomplete=()=>{null==u?i.close():u.oncomplete=()=>i.close()}}},r.onerror=t=>n(r.error)}))}}I.URL_SCHEME="indexeddb://";const D=t=>{return(0,h.OB)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(I.URL_SCHEME)?(e=t.slice(I.URL_SCHEME.length),new I(e)):null;var e};S.registerSaveRouter(D),S.registerLoadRouter(D);class O{constructor(){this.indexedDB=N()}async listModels(){return new Promise(((t,e)=>{const n=this.indexedDB.open(M,1);n.onupgradeneeded=()=>R(n),n.onsuccess=()=>{const r=n.result,i=r.transaction(A,"readonly"),o=i.objectStore(A).getAll();o.onsuccess=()=>{const e={};for(const t of o.result)e[t.modelPath]=t.modelArtifactsInfo;t(e)},o.onerror=t=>(r.close(),e(o.error)),i.oncomplete=()=>r.close()},n.onerror=t=>e(n.error)}))}async removeModel(t){var e;return t=(e=t).startsWith(I.URL_SCHEME)?e.slice(I.URL_SCHEME.length):e,new Promise(((e,n)=>{const r=this.indexedDB.open(M,1);r.onupgradeneeded=()=>R(r),r.onsuccess=()=>{const i=r.result,o=i.transaction(A,"readwrite"),s=o.objectStore(A),a=s.get(t);let u;a.onsuccess=()=>{if(null==a.result)return i.close(),n(new Error(`Cannot find model with path '${t}' in IndexedDB.`));{const r=s.delete(t),o=()=>{u=i.transaction(C,"readwrite");const r=u.objectStore(C).delete(t);r.onsuccess=()=>e(a.result.modelArtifactsInfo),r.onerror=t=>n(a.error)};r.onsuccess=o,r.onerror=t=>(o(),i.close(),n(a.error))}},a.onerror=t=>(i.close(),n(a.error)),o.oncomplete=()=>{null==u?i.close():u.oncomplete=()=>i.close()}},r.onerror=t=>n(r.error)}))}}const L="/",k="tensorflowjs_models",P="info",$="model_topology",B="weight_specs",F="weight_data",U="model_metadata";function z(t){return{info:[k,t,P].join(L),topology:[k,t,$].join(L),weightSpecs:[k,t,B].join(L),weightData:[k,t,F].join(L),modelMetadata:[k,t,U].join(L)}}function V(t){const e=t.split(L);if(e.length<3)throw new Error(`Invalid key format: ${t}`);return e.slice(1,e.length-1).join(L)}class W{constructor(t){if(!(0,h.OB)().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==t||!t)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=t,this.keys=z(this.modelPath)}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const e=JSON.stringify(t.modelTopology),n=JSON.stringify(t.weightSpecs),r=w(t);try{return this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,e),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(t){if(v)return Buffer.from(t).toString("base64");const e=new Uint8Array(t);let n="";for(let t=0,r=e.length;t<r;t++)n+=String.fromCharCode(e[t]);return btoa(n)}(t.weightData)),this.LS.setItem(this.keys.modelMetadata,JSON.stringify({format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata})),{modelArtifactsInfo:r}}catch(t){throw this.LS.removeItem(this.keys.info),this.LS.removeItem(this.keys.topology),this.LS.removeItem(this.keys.weightSpecs),this.LS.removeItem(this.keys.weightData),this.LS.removeItem(this.keys.modelMetadata),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const t=JSON.parse(this.LS.getItem(this.keys.info));if(null==t)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==t.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const e={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);e.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);e.weightSpecs=r;const i=this.LS.getItem(this.keys.modelMetadata);if(null!=i){const t=JSON.parse(i);e.format=t.format,e.generatedBy=t.generatedBy,e.convertedBy=t.convertedBy,e.userDefinedMetadata=t.userDefinedMetadata}const o=this.LS.getItem(this.keys.weightData);if(null==o)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return e.weightData=function(t){if(v){const e=Buffer.from(t,"base64");return e.buffer.slice(e.byteOffset,e.byteOffset+e.byteLength)}const e=atob(t),n=new Uint8Array(e.length);for(let t=0;t<e.length;++t)n.set([e.charCodeAt(t)],t);return n.buffer}(o),e}}W.URL_SCHEME="localstorage://";const H=t=>{return(0,h.OB)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(W.URL_SCHEME)?(e=t.slice(W.URL_SCHEME.length),new W(e)):null;var e};S.registerSaveRouter(H),S.registerLoadRouter(H);class G{constructor(){(0,m.hu)((0,h.OB)().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),(0,m.hu)("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const t={},e=k+L,n=L+P;for(let r=0;r<this.LS.length;++r){const i=this.LS.key(r);i.startsWith(e)&&i.endsWith(n)&&(t[V(i)]=JSON.parse(this.LS.getItem(i)))}return t}async removeModel(t){var e;const n=z(t=(e=t).startsWith(W.URL_SCHEME)?e.slice(W.URL_SCHEME.length):e);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${t}'`);const r=JSON.parse(this.LS.getItem(n.info));return this.LS.removeItem(n.info),this.LS.removeItem(n.topology),this.LS.removeItem(n.weightSpecs),this.LS.removeItem(n.weightData),r}}class j{constructor(){this.managers={}}static getInstance(){return null==j.instance&&(j.instance=new j),j.instance}static registerManager(t,e){(0,m.hu)(null!=t,(()=>"scheme must not be undefined or null.")),t.endsWith("://")&&(t=t.slice(0,t.indexOf("://"))),(0,m.hu)(t.length>0,(()=>"scheme must not be an empty string."));const n=j.getInstance();(0,m.hu)(null==n.managers[t],(()=>`A model store manager is already registered for scheme '${t}'.`)),n.managers[t]=e}static getManager(t){const e=this.getInstance().managers[t];if(null==e)throw new Error(`Cannot find model manager for scheme '${t}'`);return e}static getSchemes(){return Object.keys(this.getInstance().managers)}}class X{fetch(t,e){return fetch(t,e)}now(){return performance.now()}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Browser's encoder only supports utf-8, but got ${e}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(t)}decode(t,e){return new TextDecoder(e).decode(t)}}if((0,h.OB)().get("IS_BROWSER")){(0,h.OB)().setPlatform("browser",new X);try{j.registerManager(W.URL_SCHEME,new G)}catch(t){}try{j.registerManager(I.URL_SCHEME,new O)}catch(t){}}let q;(0,h.OB)().get("IS_NODE")&&(0,h.OB)().setPlatform("node",new class{constructor(){this.util=n(1758),this.textEncoder=new this.util.TextEncoder}fetch(t,e){return null!=(0,h.OB)().global.fetch?(0,h.OB)().global.fetch(t,e):(null==q&&(q=n(8352)),q(t,e))}now(){const t=process.hrtime();return 1e3*t[0]+t[1]/1e6}encode(t,e){if("utf-8"!==e&&"utf8"!==e)throw new Error(`Node built-in encoder only supports utf-8, but got ${e}`);return this.textEncoder.encode(t)}decode(t,e){return 0===t.length?"":new this.util.TextDecoder(e).decode(t)}});var Y=n(2657),K=n(2271),Z=n(8723),J=n(4077);(0,u.wv)();const Q={buffer:Y.f,cast:K.p,clone:Z.d,print:function(t,e=!1){console.log(t.toString(e))}};function tt(t){return new Promise((t=>setTimeout(t))).then(t)}(0,J.Vp)(Q);class et{constructor(t){if(!(0,h.OB)().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");t.startsWith(et.URL_SCHEME)&&(t=t.slice(et.URL_SCHEME.length)),null!=t&&0!==t.length||(t="model"),this.modelTopologyFileName=t+".json",this.weightDataFileName=t+".weights.bin"}async save(t){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const e=window.URL.createObjectURL(new Blob([t.weightData],{type:"application/octet-stream"}));if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=[{paths:["./"+this.weightDataFileName],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,weightsManifest:n},i=window.URL.createObjectURL(new Blob([JSON.stringify(r)],{type:"application/json"})),o=null==this.jsonAnchor?document.createElement("a"):this.jsonAnchor;if(o.download=this.modelTopologyFileName,o.href=i,await tt((()=>o.dispatchEvent(new MouseEvent("click")))),null!=t.weightData){const t=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;t.download=this.weightDataFileName,t.href=e,await tt((()=>t.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:w(t)}}}}function nt(t,e,n,r){!function(t){(0,m.hu)(null!=t&&Array.isArray(t)&&t.length>0,(()=>"promises must be a none empty array"))}(t),function(t,e){(0,m.hu)(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${t}`)),(0,m.hu)(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${e}`)),(0,m.hu)(e>=t,(()=>`startFraction must be no more than endFraction, but got startFraction ${t} and endFraction ${e}`))}(n=null==n?0:n,r=null==r?1:r);let i=0;return Promise.all(t.map((o=>(o.then((o=>{const s=n+ ++i/t.length*(r-n);return e(s),o})),o))))}async function rt(t,e){null==e&&(e={});const n=null==e.fetchFunc?(0,h.OB)().platform.fetch:e.fetchFunc,r=t.map((t=>n(t,e.requestInit,{isBinary:!0}))),i=(null==e.onProgress?await Promise.all(r):await nt(r,e.onProgress,0,.5)).map((t=>t.arrayBuffer()));return null==e.onProgress?await Promise.all(i):await nt(i,e.onProgress,.5,1)}et.URL_SCHEME="downloads://",S.registerSaveRouter((t=>(0,h.OB)().getBool("IS_BROWSER")&&!Array.isArray(t)&&t.startsWith(et.URL_SCHEME)?function(t="model"){return new et(t)}(t.slice(et.URL_SCHEME.length)):null));class it{constructor(t,e){if(this.DEFAULT_METHOD="POST",null==e&&(e={}),this.weightPathPrefix=e.weightPathPrefix,this.onProgress=e.onProgress,this.weightUrlConverter=e.weightUrlConverter,null!=e.fetchFunc?((0,m.hu)("function"==typeof e.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=e.fetchFunc):this.fetch=(0,h.OB)().platform.fetch,(0,m.hu)(null!=t&&t.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(t)&&(0,m.hu)(2===t.length,(()=>`URL paths for http must have a length of 2, (actual length is ${t.length}).`)),this.path=t,null!=e.requestInit&&null!=e.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=e.requestInit||{}}async save(t){if(t.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const e=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);e.body=new FormData;const n=[{paths:["./model.weights.bin"],weights:t.weightSpecs}],r={modelTopology:t.modelTopology,format:t.format,generatedBy:t.generatedBy,convertedBy:t.convertedBy,userDefinedMetadata:t.userDefinedMetadata,weightsManifest:n};e.body.append("model.json",new Blob([JSON.stringify(r)],{type:"application/json"}),"model.json"),null!=t.weightData&&e.body.append("model.weights.bin",new Blob([t.weightData],{type:"application/octet-stream"}),"model.weights.bin");const i=await this.fetch(this.path,e);if(i.ok)return{modelArtifactsInfo:w(t),responses:[i]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${i.status}.`)}async load(){const t=await this.fetch(this.path,this.requestInit);if(!t.ok)throw new Error(`Request to ${this.path} failed with status code ${t.status}. Please verify this URL points to the model JSON of the model to load.`);let e;try{e=await t.json()}catch(t){let e=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?e+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":e+=" Please make sure the server is serving valid JSON for this request.",new Error(e)}const n=e.modelTopology,r=e.weightsManifest,i=e.generatedBy,o=e.convertedBy,s=e.format,a=e.userDefinedMetadata;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);let u,c;if(null!=r){const t=await this.loadWeights(r);[u,c]=t}const l={modelTopology:n,weightSpecs:u,weightData:c,userDefinedMetadata:a,generatedBy:i,convertedBy:o,format:s},h=e.modelInitializer;return h&&(l.modelInitializer=h),l}async loadWeights(t){const e=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(t){const e=t.lastIndexOf("/"),n=t.lastIndexOf("?");return[t.substring(0,e)+"/",n>e?t.substring(n):""]}(e),i=this.weightPathPrefix||n,o=[];for(const e of t)o.push(...e.weights);const s=[],a=[];for(const e of t)for(const t of e.paths)null!=this.weightUrlConverter?a.push(this.weightUrlConverter(t)):s.push(i+t+r);return this.weightUrlConverter&&s.push(...await Promise.all(a)),[o,b(await rt(s,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function ot(t){return null!=t.match(it.URL_SCHEME_REGEX)}it.URL_SCHEME_REGEX=/^https?:\/\//;const st=(t,e)=>{if("undefined"==typeof fetch&&(null==e||null==e.fetchFunc))return null;{let n=!0;if(n=Array.isArray(t)?t.every((t=>ot(t))):ot(t),n)return at(t,e)}return null};function at(t,e){return new it(t,e)}function ut(t,e){return at(t,e)}S.registerSaveRouter(st),S.registerLoadRouter(st);var ct=n(9121),lt=n(6151),ht=n(2668),pt=n(3740),dt=n(7852);let ft;const mt=(0,ht.op)({fromPixels_:function(t,e=3){if(e>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==t)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,i=!1,o=!1,s=!1;if(t.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&t instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&t instanceof HTMLVideoElement)i=!0;else if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement)o=!0;else{if(null==t.getContext)throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${t.constructor.name}`);s=!0}if(i){const e=2;if(i&&t.readyState<e)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=(0,lt.pI)(ct.eB,u.BV.backendName)){const n={pixels:t},r={numChannels:e};return u.BV.runKernel(ct.eB,n,r)}const[a,c]=i?[t.videoWidth,t.videoHeight]:[t.width,t.height];let l,h;if(s?l=t.getContext("2d").getImageData(0,0,a,c).data:r||n?l=t.data:(o||i)&&(null==ft&&(ft=document.createElement("canvas").getContext("2d")),ft.canvas.width=a,ft.canvas.height=c,ft.drawImage(t,0,0,a,c),l=ft.getImageData(0,0,a,c).data),4===e)h=new Int32Array(l);else{const t=a*c;h=new Int32Array(t*e);for(let n=0;n<t;n++)for(let t=0;t<e;++t)h[n*e+t]=l[4*n+t]}return function(t,e,n){if((0,m.Cq)(t),null!=e&&3!==e.length)throw new Error("tensor3d() requires shape to have three numbers");const r=(0,pt.C)(t,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return(0,dt.H)(t,e,r,n)}(h,[c,a,e],"int32")}});var gt=n(7650),yt=n(9155),vt=n(1221),xt=n(5410),bt=n(4368),wt=n(9494),_t=n(6092),St=n(9640),Tt=n(3591),Et=n(2200),Mt=n(398),Ct=n(2582),At=n(9323),Nt=n(5466);function Rt(t,e,n){return[n*("number"==typeof t?t:t[0]),e*("number"==typeof t?t:t[1])]}function It(t,e,n,r=!0){let i=[];if(r)i=i.concat(e.slice(0)),i.push(t[0]/n),i=i.concat(t.slice(1));else{i=i.concat(t[0]);const n=e.length;for(let r=0;r<n;++r)i=i.concat([t[r+1]/e[r],e[r]]);i=i.concat(t.slice(n+1))}return i}function Dt(t,e,n=!0){const r=[];if(n){r.push(e);for(let n=e+1;n<t;++n)n<=2*e?(r.push(n),r.push(n-(e+1))):r.push(n)}else{const n=[],i=[];for(let r=1;r<t;++r)r>=2*e+1||r%2==1?i.push(r):n.push(r);r.push(...n),r.push(0),r.push(...i)}return r}function Ot(t,e,n,r=!0){const i=[];r?i.push(t[0]/n):i.push(t[0]*n);for(let n=1;n<t.length;++n)n<=e.length?r?i.push(e[n-1]*t[n]):i.push(t[n]/e[n-1]):i.push(t[n]);return i}function Lt(t,e){const n=[0];for(let r=0;r<e;++r)n.push(t[r][0]);return n}function kt(t,e,n){const r=t.slice(0,1);for(let i=0;i<n;++i)r.push(t[i+1]-e[i][0]-e[i][1]);return r}function Pt(t,e){if(t.rank<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==e.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.shape[e.rank-1]>t.rank)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${e.shape[e.rank-1]} vs. ${t.rank}`);if(0===t.size)throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${t.shape}.`);const n=e.shape,r=n[n.length-1];let i=1;for(let t=0;t<n.length-1;++t)i*=n[t];const o=t.shape,s=n.slice();s.pop();let a=1;for(let e=r;e<t.rank;++e)a*=o[e],s.push(o[e]);const u=[...(0,m.e3)(t.shape).map((t=>t/a)),1].slice(0,r);return[s,i,a,u]}var $t=n(3028);const Bt=1.7580993408473768,Ft=1.0507009873554805,Ut=.3275911,zt=.254829592,Vt=-.284496736,Wt=1.421413741,Ht=-1.453152027,Gt=1.061405429;function jt(...t){(0,h.OB)().getBool("IS_TEST")||console.warn(...t)}function Xt(...t){(0,h.OB)().getBool("IS_TEST")||console.log(...t)}function qt(t,e){if(t.length!==e.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${t.length}, imag: ${e.length}.`);const n=new Float32Array(2*t.length);for(let r=0;r<n.length;r+=2)n[r]=t[r/2],n[r+1]=e[r/2];return n}function Yt(t){const e=new Float32Array(t.length/2),n=new Float32Array(t.length/2);for(let r=0;r<t.length;r+=2)e[r/2]=t[r],n[r/2]=t[r+1];return{real:e,imag:n}}function Kt(t){const e=Math.ceil(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=0;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Zt(t){const e=Math.floor(t.length/4),n=new Float32Array(e),r=new Float32Array(e);for(let e=2;e<t.length;e+=4)n[Math.floor(e/4)]=t[e],r[Math.floor(e/4)]=t[e+1];return{real:n,imag:r}}function Jt(t,e){return{real:t[2*e],imag:t[2*e+1]}}function Qt(t,e,n,r){t[2*r]=e,t[2*r+1]=n}function te(t,e){const n=new Float32Array(t/2),r=new Float32Array(t/2);for(let i=0;i<Math.ceil(t/2);i++){const o=(e?2:-2)*Math.PI*(i/t);n[i]=Math.cos(o),r[i]=Math.sin(o)}return{real:n,imag:r}}function ee(t,e,n){const r=(n?2:-2)*Math.PI*(t/e);return{real:Math.cos(r),imag:Math.sin(r)}}var ne=n(4099),re=n(4931);function ie(t,e,n){if("complex64"===e){if("complex64"===t.dtype)return t.clone();const e=(0,St.l)(t.shape),r=(0,K.p)(t,"float32"),i=n.complex(r,e);return e.dispose(),r.dispose(),i}if(!(0,m.QB)(t.dtype,e))return u.BV.makeTensorFromDataId(t.dataId,t.shape,e);if("complex64"===t.dtype){const r=n.real(t),i=(0,K.p)(r,e);return r.dispose(),i}if("int32"===e)return n.int(t);if("bool"===e){const e=(0,wt.i)(0,t.dtype),r=n.notEqual(t,e);return e.dispose(),r}throw new Error(`Error in Cast: failed to cast ${t.dtype} to ${e}`)}function oe(t,e){return u.BV.makeTensorFromDataId(t.dataId,e,t.dtype)}function se(t,e,n){const r=(e-t)/(n-1),i=(0,m.wT)(n,"float32");i[0]=t;for(let t=1;t<i.length;t++)i[t]=i[t-1]+r;return(0,_t.R)(i,"float32")}var ae=n(2055),ue=n(2676);function ce(t,e,n){const r=new Array(t.rank).fill(0),i=t.shape.slice();return e.map((e=>{const o=[...i];o[n]=e;const s=(0,ue.t)(t,r,o);return r[n]+=e,s}))}function le(t,e){const n=new Array(t.rank);for(let r=0;r<n.length;r++)n[r]=t.shape[r]*e[r];const r=(0,Y.f)(n,t.dtype);for(let e=0;e<r.values.length;++e){const n=r.indexToLoc(e),i=new Array(t.rank);for(let e=0;e<i.length;e++)i[e]=n[e]%t.shape[e];const o=t.locToIndex(i);r.values[e]=t.values[o]}return r.toTensor()}function he(t,e,n,r,i){const o=e[e.length-1],[s,a]=[t.length/o,o],u=(0,m.WP)(n,s*r),c=(0,m.WP)("int32",s*r);for(let e=0;e<s;e++){const n=e*a,i=t.subarray(n,n+a),o=[];for(let t=0;t<i.length;t++)o.push({value:i[t],index:t});o.sort(((t,e)=>e.value-t.value));const s=e*r,l=u.subarray(s,s+r),h=c.subarray(s,s+r);for(let t=0;t<r;t++)l[t]=o[t].value,h[t]=o[t].index}const l=e.slice();return l[l.length-1]=r,[(0,f.X)(u,l,n),(0,f.X)(c,l,"int32")]}var pe=n(8333),de=n(8713),fe=n(4841),me=n(1901);const ge={kernelName:ct.SY,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,fe.d)(t,(0,me.N)((0,K.p)(n,"float32"),-1))}}};var ye=n(1274),ve=n(7370),xe=n(3261),be=n(248),we=n(827);const _e={kernelName:ct.VG,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=(0,be.h)((0,K.p)(n,"float32")),r=(0,xe._)((0,we.l)((0,wt.i)(1),e));return(0,ve.W)((0,ye.h)(t,r))}}}},Se={kernelName:ct.Sp,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=(0,xe._)((0,we.l)((0,be.h)((0,K.p)(n,"float32")),1));return(0,ye.h)(t,e)}}}};var Te=n(4968),Ee=n(5475);const Me={kernelName:ct.mm,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=Et.$N(n.shape,r.shape);return{a:()=>{let e=t;const r=Et.RR(n.shape,i);return r.length>0&&(e=(0,Ee.S)(e,r)),(0,Te.X)(e,n.shape)},b:()=>{let e=t;const n=Et.RR(r.shape,i);return n.length>0&&(e=(0,Ee.S)(e,n)),(0,Te.X)(e,r.shape)}}}},Ce={kernelName:ct.Xz,saveAllInputs:!0,gradFunc:(t,e)=>{const n={};return e.forEach(((e,r)=>{n[r]=()=>t.clone()})),n}};var Ae=n(6577);const Ne={kernelName:ct.sJ,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,Ae.P)(n)}}},Re={kernelName:ct.aJ,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,Ae.P)(n)}}},Ie={kernelName:ct.M2,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ye.h)(t,(0,xe._)((0,we.l)((0,wt.i)(1),(0,be.h)((0,K.p)(n,"float32")))))}}};var De=n(6407);const Oe={kernelName:ct.qw,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=(0,xe._)((0,De.I)((0,wt.i)(1),(0,be.h)((0,K.p)(n,"float32"))));return(0,ye.h)(t,e)}}}},Le={kernelName:ct.QC,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=(0,Et.$N)(n.shape,r.shape);return{a:()=>{const e=(0,De.I)((0,be.h)(n),(0,be.h)(r));let o=(0,fe.d)(t,(0,ye.h)(r,e));const s=(0,Et.RR)(n.shape,i);return s.length>0&&(o=(0,Ee.S)(o,s)),(0,Te.X)(o,n.shape)},b:()=>{const e=(0,De.I)((0,be.h)(n),(0,be.h)(r));let o=(0,ve.W)((0,fe.d)(t,(0,ye.h)(n,e)));const s=(0,Et.RR)(r.shape,i);return s.length>0&&(o=(0,Ee.S)(o,s)),(0,Te.X)(o,r.shape)}}}},ke={kernelName:ct.jM,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ye.h)(t,(0,De.I)((0,be.h)((0,K.p)(n,"float32")),1))}}},Pe={kernelName:ct.Oy,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ye.h)(t,(0,we.l)((0,wt.i)(1),(0,be.h)((0,K.p)(n,"float32"))))}}},$e=(0,ht.op)({avgPool3dBackprop_:function(t,e,n,r,i=[1,1,1],o,s){const a=(0,pt._1)(t,"dy","avgPool3dBackprop"),c=(0,pt._1)(e,"input","avgPool3dBackprop");let l=a,h=c,p=!1;4===c.rank&&(p=!0,l=(0,Te.X)(a,[1,a.shape[0],a.shape[1],a.shape[2],a.shape[3]]),h=(0,Te.X)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]])),m.hu(5===l.rank,(()=>`Error in avgPool3dBackprop: dy must be rank 5 but got rank ${l.rank}.`)),m.hu(5===h.rank,(()=>`Error in avgPool3dBackprop: input must be rank 5 but got rank ${h.rank}.`)),m.hu(Ct.jT(r,i),(()=>`Error in avgPool3dBackprop: Either strides or dilations must be 1. Got strides ${r} and dilations '${i}'`)),null!=s&&m.hu(m.GN(o),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${s} but got pad ${o}.`));const d={dy:l,input:h},f={filterSize:n,strides:r,dilations:i,pad:o,dimRoundingMode:s},g=u.BV.runKernelFunc((t=>{const e=Ct.pl(h.shape,n,r,i,o,s);return t.avgPool3dBackprop(l,h,e)}),d,null,ct.DC,f);return p?(0,Te.X)(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),Be={kernelName:ct._k,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:i,strides:o,dilations:s,pad:a,dimRoundingMode:u}=n,c=null==s?[1,1,1]:s;return{x:()=>$e(t,r,i,o,c,a,u)}}},Fe=(0,ht.op)({avgPoolBackprop_:function(t,e,n,r,i){const o=(0,pt._1)(t,"dy","avgPoolBackprop"),s=(0,pt._1)(e,"input","avgPoolBackprop");m.hu(s.rank===o.rank,(()=>`Rank of input (${s.rank}) does not match rank of dy (${o.rank})`));let a=s,c=o,l=!1;3===s.rank&&(l=!0,a=(0,Te.X)(s,[1,s.shape[0],s.shape[1],s.shape[2]]),c=(0,Te.X)(o,[1,o.shape[0],o.shape[1],o.shape[2]])),m.hu(4===c.rank,(()=>`Error in avgPoolBackprop: dy must be rank 4 but got rank ${c.rank}.`)),m.hu(4===a.rank,(()=>`Error in avgPoolBackprop: input must be rank 4 but got rank ${a.rank}.`));const h={dy:c,input:a},p={filterSize:n,strides:r,pad:i},d=u.BV.runKernelFunc((t=>{const e=Ct.Xw(a.shape,n,r,1,i);return t.avgPoolBackprop(c,a,e)}),h,null,ct.xt,p);return l?(0,Te.X)(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Ue={kernelName:ct.Jh,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{filterSize:i,strides:o,pad:s}=n;return{x:()=>Fe(t,r,i,o,s)}}};var ze=n(8687);const Ve={kernelName:ct.XL,inputsToSave:["a","b"],gradFunc:(t,e,n)=>{const[r,i]=e,{transposeA:o,transposeB:s}=n;return o||s?!o&&s?{a:()=>(0,ze.O)(t,i,!1,!1),b:()=>(0,ze.O)(t,r,!0,!1)}:o&&!s?{a:()=>(0,ze.O)(i,t,!1,!0),b:()=>(0,ze.O)(r,t,!1,!1)}:{a:()=>(0,ze.O)(i,t,!0,!0),b:()=>(0,ze.O)(t,r,!0,!0)}:{a:()=>(0,ze.O)(t,i,!1,!0),b:()=>(0,ze.O)(r,t,!0,!1)}}};var We=n(7918);const He={kernelName:ct.zw,gradFunc:(t,e,n)=>{const{blockShape:r,crops:i}=n;return{x:()=>(0,We.f)(t,r,i)}}},Ge={kernelName:ct.Ly,gradFunc:(t,e,n)=>{const r=n,i=r.inputShape,o=r.shape,s=Array.from(o);for(let t=i.length-1;t>=0;t--)if(i[t]===o[t])s[t]=1;else if(1!==i[t])throw new Error(`broadcastTo(): [${i}] cannot be broadcast to [${o}].`);const a=[];for(let t=0;t<s.length;t++)s[t]>1&&a.push(t);return{x:()=>(0,Ee.S)(t,a,!0)}}},je={kernelName:ct.RF,gradFunc:t=>({x:()=>t.clone()})},Xe={kernelName:ct.gJ,gradFunc:t=>({x:()=>(0,Ae.P)(t)})};var qe=n(7630),Ye=n(624),Ke=n(2856),Ze=n(5912);const Je={kernelName:ct.xn,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{clipValueMin:i,clipValueMax:o}=n;return{x:()=>(0,Ze.a)((0,Ke.H)((0,qe.b)(r,i),(0,Ye.z)(r,o)),t,(0,Ae.P)(t))}}};var Qe=n(8644);const tn={kernelName:ct.Eh,saveAllInputs:!0,gradFunc:(t,e,n)=>{const r=e.map((t=>t.shape)),{axis:i}=n,o=(0,m.EC)(i,e[0].shape)[0],s=r.map((t=>t[o]));return(0,Qe.V)(t,s,o).map((t=>()=>t))}};var en=n(6013),nn=n(9832);const rn={kernelName:ct.mh,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,i]=e,{dilations:o,strides:s,pad:a,dataFormat:u}=n;return m.hu(Ct.I0(o),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${o}'`)),{x:()=>(0,nn._)(r.shape,t,i,s,a,u),filter:()=>(0,en.p)(r,t,i.shape,s,a,u)}}};var on=n(4794);const sn={kernelName:ct.wm,inputsToSave:["dy","filter"],gradFunc:(t,e,n)=>{const[r,i]=e,{strides:o,pad:s,dataFormat:a,dimRoundingMode:u}=n;return{dy:()=>(0,on.T)(t,i,o,s,a,1,u),filter:()=>(0,en.p)(t,r,i.shape,o,s,a,u)}}},an=(0,ht.op)({conv3DBackpropFilter_:function(t,e,n,r,i){let o=t;4===t.rank&&(o=(0,Te.X)(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]));let s=e;4===s.rank&&(s=(0,Te.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]])),m.hu(5===o.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${o.shape}.`)),m.hu(5===s.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${s.shape}.`)),m.hu(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),m.hu(o.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${o.shape[4]}) must match input depth in filter (${n[3]}.`)),m.hu(s.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${s.shape[4]}) must match output depth for filter (${n[4]}).`));const a={x:o,dy:s},c={strides:r,pad:i,filterShape:n};return u.BV.runKernelFunc((t=>{const e=Ct.jw(o.shape,n,r,1,i);return t.conv3dDerFilter(o,s,e)}),a,null,ct.o2,c)}}),un=(0,ht.op)({conv3DBackpropInput_:function(t,e,n,r,i){m.hu(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let o=t,s=e,a=!1;4===e.rank&&(a=!0,s=(0,Te.X)(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]),o=[1,t[0],t[1],t[2],t[3]]);const c=o[4],l=s.shape[4];m.hu(5===o.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${o.length}.`)),m.hu(5===s.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${s.rank}`)),m.hu(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),m.hu(c===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[3]}.`)),m.hu(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const h={dy:s,filter:n},p={pad:i,strides:r,inputShape:o},d=u.BV.runKernelFunc((t=>{const e=Ct.jw(o,n.shape,r,1,i);return t.conv3dDerInput(s,n,e)}),h,null,ct.ik,p);return a?(0,Te.X)(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),cn={kernelName:ct.x1,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:i,pad:o}=n;m.hu((0,Ct.I0)(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[s,a]=e;return{x:()=>un(s.shape,t,a,i,o),filter:()=>an(s,t,a.shape,i,o)}}};var ln=n(9331);const hn={kernelName:ct.mc,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,fe.d)((0,ve.W)((0,ln.O)((0,K.p)(n,"float32"))),t)}}};var pn=n(3254);const dn={kernelName:ct.TR,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,fe.d)((0,pn.R)((0,K.p)(n,"float32")),t)}}};var fn=n(7405),mn=n(9065);const gn={kernelName:ct.iH,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{axis:i,exclusive:o,reverse:s}=n;return{x:()=>{const e=(0,Tt.Q3)([i],r.rank);let n=(0,fn.z)(t,i,o,!s);return null!=e&&(n=(0,mn.p)(n,e)),n}}}};var yn=n(8098),vn=n(4375);const xn={kernelName:ct.ci,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const{dilations:r,strides:i,pad:o,dimRoundingMode:s}=n,a=null==r?[1,1]:r;m.hu(Ct.I0(a),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[u,c]=e;return m.hu(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),m.hu(4===c.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${c.rank}.`)),m.hu(u.shape[3]===c.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${c.shape[2]}.`)),m.hu(Ct.jT(i,a),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${i} and dilations '${a}'.`)),null!=s&&m.hu(m.GN(o),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${s} but got pad ${o}.`)),{x:()=>(0,vn.v)(u.shape,t,c,i,o,r,s),filter:()=>(0,yn.z)(u,t,c.shape,i,o,r,s)}}},bn={kernelName:ct.p4,inputsToSave:["x","filter"],gradFunc:(t,e,n)=>{const[r,i]=e,o={x:r,filter:i,dy:t},s={x:r,filter:i,dy:t};return{x:()=>u.BV.runKernel(ct.ek,o,n),filter:()=>u.BV.runKernel(ct.Vn,s,n)}}},wn={kernelName:ct.ZC,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=Et.$N(n.shape,r.shape);return{a:()=>{const e=(0,ye.h)(t,(0,K.p)(r,"float32")),o=Et.RR(n.shape,i);return o.length>0?(0,Te.X)((0,Ee.S)(e,o),n.shape):e},b:()=>{let e=(0,fe.d)(t,(0,K.p)(n,"float32"));const o=Et.RR(r.shape,i);o.length>0&&(e=(0,Te.X)((0,Ee.S)(e,o),r.shape));const s=(0,be.h)(r);return(0,ve.W)((0,ye.h)(e,(0,K.p)(s,"float32")))}}}},_n={kernelName:ct.SX,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e,r=e=>e.eluDer(t,n),i={dy:t,y:n};return{x:()=>u.BV.runKernelFunc(r,i,null,ct.HE)}}};var Sn=n(4842);const Tn={kernelName:ct.Om,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=(0,fe.d)((0,Sn.Q)((0,ve.W)((0,be.h)(n))),2/Math.sqrt(Math.PI));return{x:()=>(0,fe.d)(t,r)}}},En={kernelName:ct.NE,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,fe.d)(t,n)}}},Mn={kernelName:ct.Y0,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,fe.d)(t,(0,Sn.Q)(n))}}},Cn={kernelName:ct.OR,gradFunc:t=>({x:()=>(0,Ae.P)(t)})},An={kernelName:ct.je,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=(0,Et.$N)(n.shape,r.shape);return{a:()=>{const e=(0,ye.h)(t,(0,K.p)(r,"float32")),o=(0,Et.RR)(n.shape,i);return o.length>0?(0,Te.X)((0,Ee.S)(e,o),n.shape):e},b:()=>{let e=(0,fe.d)(t,(0,K.p)(n,"float32"));const o=(0,Et.RR)(r.shape,i);o.length>0&&(e=(0,Te.X)((0,Ee.S)(e,o),r.shape));const s=(0,be.h)(r);return(0,ve.W)((0,ye.h)(e,(0,K.p)(s,"float32")))}}}};var Nn=n(2634),Rn=n(7501);const In={kernelName:ct.sH,inputsToSave:["x","mean","variance","scale"],gradFunc:(t,e,n)=>{const{varianceEpsilon:r}=n,[i,o,s,a]=e,u=null==a?(0,wt.i)(1):a,c=(0,Et.RR)(o.shape,i.shape),l=[];if(1===o.rank){for(let t=0;t<i.shape.length-1;++t)l.push(i.shape[t]);l.push(1)}const h=(0,we.l)(i,o),p=(0,fe.d)(t,u),d=(0,Nn.b)((0,De.I)(s,(0,wt.i)(r))),f=(0,fe.d)((0,fe.d)((0,fe.d)(d,d),d),(0,wt.i)(-.5));return{x:()=>1===o.rank?(0,Te.X)((0,fe.d)((0,fe.d)(t,(0,Rn.G)((0,Te.X)(d,[1,1,1,o.shape[0]]),l)),u),i.shape):(0,Te.X)((0,fe.d)((0,fe.d)(t,d),u),i.shape),mean:()=>{let t=(0,fe.d)((0,fe.d)(d,(0,wt.i)(-1)),p);return 1===o.rank&&(t=(0,Ee.S)(t,c)),(0,Te.X)(t,o.shape)},variance:()=>{let t=(0,fe.d)((0,fe.d)(f,h),p);return 1===o.rank&&(t=(0,Ee.S)(t,c)),(0,Te.X)(t,o.shape)},scale:()=>{const e=(0,fe.d)(h,d);let n=(0,fe.d)(t,e);return 1===o.rank&&(n=(0,Ee.S)(n,c)),(0,Te.X)(n,o.shape)},offset:()=>{let e=t;return 1===o.rank&&(e=(0,Ee.S)(e,c)),(0,Te.X)(e,o.shape)}}}},Dn=(0,ht.op)({unsortedSegmentSum_:function(t,e,n){const r=(0,pt._1)(t,"x","unsortedSegmentSum"),i=(0,pt._1)(e,"segmentIds","unsortedSegmentSum","int32");(0,m.hu)((0,m.GN)(n),(()=>"numSegments must be of dtype int"));const o={x:r,segmentIds:i},s={numSegments:n};return u.BV.runKernelFunc(((t,e)=>{const o=t.unsortedSegmentSum(r,i,n);return e([i]),o}),o,null,ct.Qv,s)}}),On={kernelName:ct.qi,inputsToSave:["x","indices"],gradFunc:(t,e,n)=>{const[r,i]=e,{axis:o}=n,s=(0,m.EC)(o,r.shape)[0];return{x:()=>{const e=r.shape,n=i.size,a=e.slice(0,s),u=a.length,c=e.slice(o,e.length).slice(1),l=c.length,h=Ln(0,u),p=Ln(u+1,u+1+l),d=kn([a,[n],c]),f=(0,Te.X)(t,d),m=(0,Te.X)(i,[n]),g=kn([[u],h,p]),y=(0,mn.p)(f,g);let v=Dn(y,m,r.shape[s]);const x=(0,Tt.LJ)(g);return v=(0,mn.p)(v,x),v},indices:()=>i}}};function Ln(t,e){const n=[];for(let r=t;r<e;++r)n.push(r);return n}function kn(t){const e=[];for(let n=0;n<t.length;++n)for(let r=0;r<t[n].length;++r)e.push(t[n][r]);return e}const Pn={kernelName:ct.Ac,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>(0,Ae.P)(n),b:()=>(0,Ae.P)(r)}}},$n={kernelName:ct.iJ,gradFunc:t=>({x:()=>(0,K.p)(t,"float32")})},Bn={kernelName:ct.av,gradFunc:t=>({x:()=>(0,Ae.P)(t)})},Fn={kernelName:ct.iW,gradFunc:t=>({x:()=>(0,Ae.P)(t)})},Un={kernelName:ct.r7,gradFunc:t=>({x:()=>(0,Ae.P)(t)})},zn={kernelName:ct.kU,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ye.h)(t,(0,De.I)(n,1))}}},Vn={kernelName:ct.Zb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ye.h)(t,(0,K.p)(n,"float32"))}}},Wn={kernelName:ct.qC,inputsToSave:[],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{axis:i}=n;return{logits:()=>{const e=(0,Sn.Q)(r);return(0,we.l)(t,(0,fe.d)((0,Ee.S)(t,i,!0),e))}}}},Hn=(0,ht.op)({localResponseNormalizationBackprop_:function(t,e,n,r=5,i=1,o=1,s=.5){const a={x:t,y:e,dy:n},c={depthRadius:r,bias:i,alpha:o,beta:s};return u.BV.runKernelFunc((a=>a.LRNGrad(n,t,e,r,i,o,s)),a,null,ct.vI,c)}}),Gn={kernelName:ct.eZ,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,i]=e,{depthRadius:o,bias:s,alpha:a,beta:u}=n;return{x:()=>Hn(r,i,t,o,s,a,u)}}};var jn=n(6477);function Xn(t,e,n,r){return e.rank<n.rank&&(e=(0,Te.X)(e,Tt.rv(e.shape,r))),t.rank<n.rank&&(t=(0,Te.X)(t,Tt.rv(t.shape,r))),{x:()=>(0,fe.d)(t,(0,K.p)((0,jn.D)(n,e),t.dtype))}}const qn={kernelName:ct.Yo,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{reductionIndices:i}=r,o=e[0],s=Xn(t,e[1],o,m.EC(i,o.shape));return{x:()=>s.x()}}};var Yn=n(6573);const Kn={kernelName:ct.BM,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>(0,fe.d)(t,(0,K.p)((0,qe.b)(n,r),"float32")),b:()=>(0,fe.d)(t,(0,K.p)((0,Yn.d)(n,r),"float32"))}}},Zn=(0,ht.op)({maxPool3dBackprop_:function(t,e,n,r,i,o=[1,1,1],s,a){const c=(0,pt._1)(t,"dy","maxPool3dBackprop"),l=(0,pt._1)(e,"input","maxPool3dBackprop"),h=(0,pt._1)(n,"output","maxPool3dBackprop");let p=c,d=l,f=h,g=!1;4===l.rank&&(g=!0,p=(0,Te.X)(c,[1,c.shape[0],c.shape[1],c.shape[2],c.shape[3]]),d=(0,Te.X)(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),f=(0,Te.X)(h,[1,h.shape[0],h.shape[1],h.shape[2],h.shape[3]])),m.hu(5===p.rank,(()=>`Error in maxPool3dBackprop: dy must be rank 5 but got rank ${p.rank}.`)),m.hu(5===d.rank,(()=>`Error in maxPool3dBackprop: input must be rank 5 but got rank ${d.rank}.`)),m.hu(5===f.rank,(()=>`Error in maxPool3dBackprop: output must be rank 5 but got rank ${f.rank}.`)),m.hu(Ct.jT(i,o),(()=>`Error in maxPool3dBackprop: Either strides or dilations must be 1. Got strides ${i} and dilations '${o}'`)),null!=a&&m.hu(m.GN(s),(()=>`Error in maxPool3dBackprop: pad must be an integer when using, dimRoundingMode ${a} but got pad ${s}.`));const y={dy:p,input:d,output:f},v={filterSize:r,strides:i,dilations:o,pad:s,dimRoundingMode:a},x=u.BV.runKernelFunc((t=>{const e=Ct.pl(d.shape,r,i,o,s,a);return t.maxPool3dBackprop(p,d,f,e)}),y,null,ct.f,v);return g?(0,Te.X)(x,[x.shape[1],x.shape[2],x.shape[3],x.shape[4]]):x}}),Jn={kernelName:ct.OA,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,i]=e,{filterSize:o,strides:s,dilations:a,pad:u,dimRoundingMode:c}=n,l=null==a?[1,1,1]:a;return{x:()=>Zn(t,r,i,o,s,l,u,c)}}},Qn=(0,ht.op)({maxPoolBackprop_:function(t,e,n,r,i,o,s){const a=(0,pt._1)(t,"dy","maxPoolBackprop"),c=(0,pt._1)(e,"input","maxPoolBackprop"),l=(0,pt._1)(n,"output","maxPoolBackprop");m.hu(c.rank===a.rank,(()=>`Rank of input (${c.rank}) does not match rank of dy (${a.rank})`)),m.hu(4===a.rank,(()=>`Error in maxPoolBackprop: dy must be rank 4 but got rank ${a.rank}.`)),m.hu(4===c.rank,(()=>`Error in maxPoolBackprop: input must be rank 4 but got rank ${c.rank}.`)),null!=s&&m.hu(m.GN(o),(()=>`Error in maxPoolBackprop: pad must be an integer when using, dimRoundingMode ${s} but got pad ${o}.`));const h={dy:a,input:c,output:l},p={filterSize:r,strides:i,pad:o,dimRoundingMode:s};return u.BV.runKernelFunc((t=>{const e=Ct.Xw(c.shape,r,i,1,o,s);return t.maxPoolBackprop(a,c,l,e)}),h,null,ct.Gv,p)}}),tr={kernelName:ct.mT,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r,i]=e,{filterSize:o,strides:s,pad:a}=n;return{x:()=>Qn(t,r,i,o,s,a)}}},er={kernelName:ct.c1,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(t,e,n)=>{const r=n,{axis:i}=r,[o,s]=e,a=Xn(t,s,o,m.EC(i,o.shape));return{x:()=>a.x()}}};var nr=n(636);const rr={kernelName:ct.q8,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e;return{a:()=>(0,fe.d)(t,(0,K.p)((0,Ye.z)(n,r),"float32")),b:()=>(0,fe.d)(t,(0,K.p)((0,nr.p)(n,r),"float32"))}}},ir={kernelName:ct.jQ,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:i}=n,o=i.map((t=>t[0]));return{x:()=>(0,ue.t)(t,o,r.shape)}}};var or=n(6943);const sr={kernelName:ct.Vb,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=(0,Et.$N)(n.shape,r.shape);return{a:()=>{const e=(0,Et.RR)(n.shape,i);return e.length>0?(0,Te.X)((0,Ee.S)(t,e),n.shape):t},b:()=>{const e=(0,fe.d)(t,(0,ve.W)((0,or.G)((0,ye.h)(n,r)))),o=(0,Et.RR)(r.shape,i);return o.length>0?(0,Te.X)((0,Ee.S)(e,o),r.shape):e}}}},ar={kernelName:ct.wY,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=(0,Et.$N)(n.shape,r.shape);return{a:()=>{const e=(0,fe.d)(t,(0,K.p)(r,"float32")),o=(0,Et.RR)(n.shape,i);return o.length>0?(0,Te.X)((0,Ee.S)(e,o),n.shape):e},b:()=>{const e=(0,fe.d)(t,(0,K.p)(n,"float32")),o=(0,Et.RR)(r.shape,i);return o.length>0?(0,Te.X)((0,Ee.S)(e,o),r.shape):e}}}},ur={kernelName:ct.L0,gradFunc:t=>({x:()=>(0,ve.W)(t)})},cr={kernelName:ct.we,inputsToSave:["indices"],gradFunc:(t,e)=>{const n=e[0];return{indices:()=>(0,St.l)(n.shape,"float32")}}},lr={kernelName:ct.qW,gradFunc:t=>({x:()=>(0,Ae.P)(t)})},hr={kernelName:ct.ly,inputsToSave:["x"],gradFunc:(t,e,n)=>{const r=e[0],{paddings:i}=n,o=i.map((t=>t[0]));return{x:()=>(0,ue.t)(t,o,r.shape)}}};var pr=n(2597),dr=n(3453);const fr={kernelName:ct.pe,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(t,e)=>{const[n,r,i]=e,o=n,s=r,a=Et.$N(o.shape,s.shape);return{a:()=>{const e=(0,K.p)(s,"float32");let n=(0,fe.d)(t,(0,fe.d)(e,(0,dr.s)(o,(0,we.l)(e,(0,wt.i)(1)))));const r=Et.RR(o.shape,a);return r.length>0&&(n=(0,Ee.S)(n,r)),(0,Te.X)(n,o.shape)},b:()=>{const e=(0,nr.p)(o,0),n=(0,Ze.a)(e,(0,pr.c)(o),(0,Ae.P)(o));let r=(0,fe.d)(t,(0,fe.d)(i,n));const u=Et.RR(s.shape,a);return u.length>0&&(r=(0,Ee.S)(r,u)),(0,Te.X)(r,s.shape)}}}},mr={kernelName:ct.o0,inputsToSave:["x","alpha"],gradFunc:(t,e)=>{const[n,r]=e,i=(0,nr.p)(n,0);return{x:()=>(0,Ze.a)(i,t,(0,fe.d)(t,r)),alpha:()=>{let e=(0,Ze.a)(i,(0,Ae.P)(t),(0,fe.d)(t,n));const o=(0,Et.RR)(r.shape,t.shape);return o.length>0&&(e=(0,Ee.S)(e,o)),(0,Te.X)(e,r.shape)}}}},gr={kernelName:ct.$H,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ye.h)(t,(0,ve.W)((0,be.h)(n)))}}},yr={kernelName:ct.Sb,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e,r=(0,fe.d)((0,Ye.z)(n,6),(0,me.N)(n));return{x:()=>(0,fe.d)(t,(0,K.p)(r,"float32"))}}},vr={kernelName:ct.qk,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,fe.d)(t,(0,K.p)((0,me.N)(n),"float32"))}}},xr={kernelName:ct.HZ,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,Te.X)(t,n.shape)}}},br={kernelName:ct._Y,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,i=e=>{const{alignCorners:i}=n;return e.resizeBilinearBackprop(t,r,i)},o={images:r};return{images:()=>u.BV.runKernelFunc(i,o,null,ct.zb,n)}}},wr={kernelName:ct.dp,inputsToSave:["images"],gradFunc:(t,e,n)=>{const[r]=e,i=e=>{const{alignCorners:i}=n;return e.resizeNearestNeighborBackprop(t,r,i)},o={images:r};return{images:()=>u.BV.runKernelFunc(i,o,null,ct.Hm,n)}}};var _r=n(7486);const Sr={kernelName:ct.mK,gradFunc:(t,e,n)=>{const{dims:r}=n,i=(0,m.EC)(r,t.shape);return{x:()=>(0,_r.G)(t,i)}}},Tr={kernelName:ct.e0,gradFunc:t=>({x:()=>(0,Ae.P)(t)})},Er={kernelName:ct.bV,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ve.W)((0,ye.h)(t,(0,fe.d)((0,dr.s)(n,1.5),2)))}}};var Mr=n(8651);const Cr={kernelName:ct.xc,inputsToSave:["condition"],gradFunc:(t,e)=>{const[n]=e;return{condition:()=>(0,K.p)((0,Ae.P)(n),"float32"),t:()=>(0,fe.d)(t,(0,K.p)(n,t.dtype)),e:()=>(0,fe.d)(t,(0,K.p)((0,Mr.h)(n),t.dtype))}}},Ar={kernelName:ct.oF,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>{const e=(0,nr.p)(n,(0,wt.i)(0)),r=(0,wt.i)(Bt),i=(0,wt.i)(Ft),o=(0,fe.d)(t,i),s=(0,fe.d)((0,fe.d)(t,r),(0,Sn.Q)((0,K.p)(n,"float32")));return(0,Ze.a)(e,o,s)}}}},Nr={kernelName:ct.a5,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,fe.d)(t,(0,fe.d)(n,(0,we.l)((0,wt.i)(1),n)))}}},Rr={kernelName:ct.i5,gradFunc:t=>({x:()=>(0,Ae.P)(t)})};var Ir=n(173);const Dr={kernelName:ct.RQ,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,fe.d)((0,Ir.m)((0,K.p)(n,"float32")),t)}}};var Or=n(2699);const Lr={kernelName:ct.w3,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,fe.d)((0,Or.f)((0,K.p)(n,"float32")),t)}}};var kr=n(9682);const Pr={kernelName:ct.p2,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{begin:i,size:o}=n,s=r.shape,[a,u]=(0,gt.parseSliceParams)(r,i,o),c=[];for(let e=0;e<t.rank;e++)c.push([a[e],s[e]-a[e]-u[e]]);return{x:()=>(0,kr.v)(t,c)}}},$r={kernelName:ct.Gc,outputsToSave:[!0],gradFunc:(t,e,n)=>{const[r]=e,{dim:i}=n,o=(0,fe.d)(t,r);return{logits:()=>(0,we.l)(o,(0,fe.d)((0,Ee.S)(o,[i],!0),r))}}};var Br=n(625);const Fr={kernelName:ct.MR,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,fe.d)(t,(0,Br.X)(n))}}};var Ur=n(8441);const zr={kernelName:ct.TQ,gradFunc:(t,e,n)=>{const{blockShape:r,paddings:i}=n;return{x:()=>(0,Ur.E)(t,r,i)}}};var Vr=n(6884);const Wr={kernelName:ct.L8,gradFunc:(t,e,n)=>{const{axis:r}=n;return{x:()=>(0,Vr.z)(t,r)}}},Hr={kernelName:ct.FK,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ye.h)(t,(0,fe.d)((0,xe._)((0,K.p)(n,"float32")),2))}}},Gr={kernelName:ct.bK,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,fe.d)(t,(0,fe.d)((0,K.p)(n,"float32"),2))}}},jr={kernelName:ct._t,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=(0,wt.i)(2);return{a:()=>(0,fe.d)(t,(0,fe.d)(i,(0,we.l)(n,r))),b:()=>(0,fe.d)(t,(0,fe.d)(i,(0,we.l)(r,n)))}}},Xr={kernelName:ct.h8,gradFunc:t=>({x:()=>(0,Ae.P)(t)})},qr={kernelName:ct.Tr,inputsToSave:["a","b"],gradFunc:(t,e)=>{const[n,r]=e,i=Et.$N(n.shape,r.shape);return{a:()=>{let e=t;const r=Et.RR(n.shape,i);return r.length>0&&(e=(0,Ee.S)(e,r)),(0,Te.X)(e,n.shape)},b:()=>{let e=t;const n=Et.RR(r.shape,i);return n.length>0&&(e=(0,Ee.S)(e,n)),(0,Te.X)((0,ve.W)(e),r.shape)}}}};var Yr=n(4917);const Kr={kernelName:ct.GB,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,i=r.shape.slice(),{axis:o}=n;(0,m.EC)(o,r.shape).forEach((t=>{i[t]=1}));const s=(0,Te.X)(t,i),a=(0,fe.d)(s,(0,Yr.i)(r.shape,"float32"));return{x:()=>a}}},Zr={kernelName:ct.sE,inputsToSave:["x"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,ye.h)(t,(0,be.h)((0,Ir.m)(n)))}}},Jr={kernelName:ct.MI,outputsToSave:[!0],gradFunc:(t,e)=>{const[n]=e;return{x:()=>(0,fe.d)((0,we.l)((0,wt.i)(1),(0,be.h)(n)),t)}}},Qr={kernelName:ct.n9,inputsToSave:["x"],gradFunc:(t,e,n)=>{const[r]=e,{reps:i}=n;return{x:()=>{let e=(0,Ae.P)(r);if(1===r.rank)for(let n=0;n<i[0];++n)e=(0,De.I)(e,(0,ue.t)(t,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<i[0];++n)for(let o=0;o<i[1];++o)e=(0,De.I)(e,(0,ue.t)(t,[n*r.shape[0],o*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<i[0];++n)for(let o=0;o<i[1];++o)for(let s=0;s<i[2];++s)e=(0,De.I)(e,(0,ue.t)(t,[n*r.shape[0],o*r.shape[1],s*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<i[0];++n)for(let o=0;o<i[1];++o)for(let s=0;s<i[2];++s)for(let a=0;a<i[3];++a)e=(0,De.I)(e,(0,ue.t)(t,[n*r.shape[0],o*r.shape[1],s*r.shape[2],a*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return e}}}},ti={kernelName:ct.G3,gradFunc:(t,e,n)=>{const r=n,{perm:i}=r,o=Tt.LJ(i);return{x:()=>(0,mn.p)(t,o)}}};var ei=n(2991);const ni={kernelName:ct.To,gradFunc:(t,e,n)=>{const r=n,{axis:i}=r;return{value:()=>(0,ei.k)(t,i)}}};var ri=n(1300),ii=n(4926),oi=n(632);const si=[ge,_e,Se,Me,Ce,Ne,Re,Ie,Oe,Le,ke,Pe,Be,Ue,Ve,He,Ge,je,Xe,Je,tn,sn,rn,cn,hn,dn,gn,xn,bn,wn,_n,Tn,En,Mn,An,Cn,In,On,Pn,$n,Bn,Fn,Un,zn,Vn,Wn,Gn,qn,qn,Kn,Jn,tr,er,rr,ir,sr,ar,ur,cr,lr,hr,hr,fr,mr,gr,yr,vr,xr,br,wr,Sr,Tr,Er,Cr,Ar,Nr,Rr,Dr,Lr,Pr,$r,Fr,zr,zr,Wr,Wr,Hr,jr,Gr,Xr,qr,Kr,Zr,Jr,Qr,ti,ni,{kernelName:ct.Qv,inputsToSave:["segmentIds"],gradFunc:(t,e)=>{const[n]=e;return{x:()=>function(t,e){const n=(0,oi.g)(e,(0,Ae.P)(e)),r=(0,ii.I)(t,n);let i=(0,qe.b)(e,(0,wt.i)(0,"int32"));const o=r.rank-i.rank;for(let t=0;t<o;++t)i=(0,ri.d)(i,t+1);i=(0,Ke.H)(i,(0,Yr.i)(r.shape,"bool"));const s=(0,Ae.P)(r);return(0,Ze.a)(i,r,s)}(t,n)}}},{kernelName:ct.Ru,gradFunc:t=>({x:()=>(0,Ae.P)(t)})}];for(const t of si)(0,lt.Li)(t);var ai=n(6235);J.es.prototype.abs=function(){return this.throwIfDisposed(),(0,ai.W)(this)};var ui=n(7839);J.es.prototype.acos=function(){return this.throwIfDisposed(),(0,ui.K)(this)};var ci=n(1470);J.es.prototype.acosh=function(){return this.throwIfDisposed(),(0,ci._)(this)};var li=n(4513),hi=n(5228),pi=n(5265);const di=(0,ht.op)({addStrict_:function(t,e){(0,bt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,pt._1)(t,"a","addStrict"),r=(0,pt._1)(e,"b","addStrict");return m.k5(n.shape,r.shape,"Error in addStrict: "),(0,De.I)(n,r)}}),fi=(0,ht.op)({divStrict_:function(t,e){(0,bt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,pt._1)(t,"a","div"),r=(0,pt._1)(e,"b","div");return m.k5(n.shape,r.shape,"Error in divideStrict: "),(0,ye.h)(n,r)}}),mi=(0,ht.op)({maximumStrict_:function(t,e){(0,bt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,pt._1)(t,"a","maximumStrict"),r=(0,pt._1)(e,"b","maximumStrict");return m.k5(n.shape,r.shape,"Error in maximumStrict: "),(0,oi.g)(n,r)}}),gi=(0,ht.op)({minimumStrict_:function(t,e){(0,bt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,pt._1)(t,"a","minimumStrict"),r=(0,pt._1)(e,"b","minimumStrict");return m.k5(n.shape,r.shape,"Error in minimumStrict: "),(0,li.L)(n,r)}}),yi=(0,ht.op)({modStrict_:function(t,e){(0,bt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,pt._1)(t,"a","modStrict"),r=(0,pt._1)(e,"b","modStrict");return m.k5(n.shape,r.shape,"Error in modStrict: "),(0,hi.w)(n,r)}}),vi=(0,ht.op)({mulStrict_:function(t,e){(0,bt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,pt._1)(t,"a","mul"),r=(0,pt._1)(e,"b","mul");return m.k5(n.shape,r.shape,"Error in multiplyStrict: "),(0,fe.d)(n,r)}}),xi=(0,ht.op)({powStrict_:function(t,e){return(0,bt.MX)("strict variants of ops have been deprecated and will be removed in future"),m.k5(t.shape,e.shape,"Error in powStrict: "),(0,dr.s)(t,e)}}),bi=(0,ht.op)({squaredDifferenceStrict_:function(t,e){(0,bt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,pt._1)(t,"a","squaredDifferenceStrict"),r=(0,pt._1)(e,"b","squaredDifferenceStrict");return m.k5(n.shape,r.shape,"Error in squaredDifferenceStrict: "),(0,pi.$)(n,r)}}),wi=(0,ht.op)({subStrict_:function(t,e){(0,bt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,pt._1)(t,"a","subStrict"),r=(0,pt._1)(e,"b","subStrict");return m.k5(n.shape,r.shape,"Error in subStrict: "),(0,we.l)(n,r)}});J.es.prototype.addStrict=function(t){return this.throwIfDisposed(),di(this,t)},J.es.prototype.add=function(t){return this.throwIfDisposed(),(0,De.I)(this,t)};var _i=n(781);J.es.prototype.all=function(t,e){return this.throwIfDisposed(),(0,_i.$)(this,t,e)};var Si=n(2998);J.es.prototype.any=function(t,e){return this.throwIfDisposed(),(0,Si.Y)(this,t,e)};var Ti=n(47);J.es.prototype.argMax=function(t){return this.throwIfDisposed(),(0,Ti.N)(this,t)};var Ei=n(7394);J.es.prototype.argMin=function(t){return this.throwIfDisposed(),(0,Ei.v)(this,t)},J.es.prototype.asScalar=function(){return this.throwIfDisposed(),(0,m.hu)(1===this.size,(()=>"The array must have only 1 element.")),(0,Te.X)(this,[])},J.es.prototype.asType=function(t){return this.throwIfDisposed(),(0,K.p)(this,t)},J.es.prototype.as1D=function(){return this.throwIfDisposed(),(0,Te.X)(this,[this.size])},J.es.prototype.as2D=function(t,e){return this.throwIfDisposed(),(0,Te.X)(this,[t,e])},J.es.prototype.as3D=function(t,e,n){return this.throwIfDisposed(),(0,Te.X)(this,[t,e,n])},J.es.prototype.as4D=function(t,e,n,r){return this.throwIfDisposed(),(0,Te.X)(this,[t,e,n,r])},J.es.prototype.as5D=function(t,e,n,r,i){return this.throwIfDisposed(),(0,Te.X)(this,[t,e,n,r,i])};var Mi=n(2421);J.es.prototype.asin=function(){return this.throwIfDisposed(),(0,Mi.Z)(this)};var Ci=n(1891);J.es.prototype.asinh=function(){return this.throwIfDisposed(),(0,Ci.V)(this)};var Ai=n(7037);J.es.prototype.atan=function(){return this.throwIfDisposed(),(0,Ai.z)(this)};var Ni=n(9812);J.es.prototype.atan2=function(t){return this.throwIfDisposed(),(0,Ni.f)(this,t)};var Ri=n(369);J.es.prototype.atanh=function(){return this.throwIfDisposed(),(0,Ri.C)(this)};var Ii=n(5176);J.es.prototype.avgPool=function(t,e,n,r){return this.throwIfDisposed(),(0,Ii.w)(this,t,e,n,r)},J.es.prototype.batchToSpaceND=function(t,e){return this.throwIfDisposed(),(0,Ur.E)(this,t,e)};var Di=n(7505);J.es.prototype.batchNorm=function(t,e,n,r,i){return this.throwIfDisposed(),(0,Di.t)(this,t,e,n,r,i)};var Oi=n(8247);J.es.prototype.broadcastTo=function(t){return this.throwIfDisposed(),(0,Oi.U)(this,t)},J.es.prototype.cast=function(t){return this.throwIfDisposed(),(0,K.p)(this,t)};var Li=n(6825);J.es.prototype.ceil=function(){return this.throwIfDisposed(),(0,Li.m)(this)};var ki=n(2279);J.es.prototype.clipByValue=function(t,e){return this.throwIfDisposed(),(0,ki.i)(this,t,e)},J.es.prototype.concat=function(t,e){return this.throwIfDisposed(),t instanceof J.es&&(t=[t]),(0,Vr.z)([this,...t],e)};var Pi=n(1355);J.es.prototype.conv1d=function(t,e,n,r,i,o){return this.throwIfDisposed(),(0,Pi.P)(this,t,e,n,r,i,o)};var $i=n(1405);J.es.prototype.conv2dTranspose=function(t,e,n,r,i){return this.throwIfDisposed(),(0,$i.b)(this,t,e,n,r,i)},J.es.prototype.conv2d=function(t,e,n,r,i,o){return this.throwIfDisposed(),(0,on.T)(this,t,e,n,r,i,o)},J.es.prototype.cos=function(){return this.throwIfDisposed(),(0,Ir.m)(this)},J.es.prototype.cosh=function(){return this.throwIfDisposed(),(0,Or.f)(this)},J.es.prototype.cumsum=function(t,e,n){return this.throwIfDisposed(),(0,fn.z)(this,t,e,n)};var Bi=n(9112);J.es.prototype.depthToSpace=function(t,e){return this.throwIfDisposed(),(0,Bi.n)(this,t,e)};var Fi=n(4718);J.es.prototype.depthwiseConv2D=function(t,e,n,r,i,o){return(0,bt.MX)("depthwiseConv2D is deprecated, use depthwiseConv2d instead"),this.throwIfDisposed(),(0,Fi.B)(this,t,e,n,r,i,o)},J.es.prototype.depthwiseConv2d=function(t,e,n,r,i,o){return this.throwIfDisposed(),(0,Fi.B)(this,t,e,n,r,i,o)};var Ui=n(557);J.es.prototype.dilation2d=function(t,e,n,r,i){return this.throwIfDisposed(),(0,Ui.W)(this,t,e,n,r,i)};var zi=n(9322);J.es.prototype.divNoNan=function(t){return this.throwIfDisposed(),(0,zi.N)(this,t)},J.es.prototype.divStrict=function(t){return this.throwIfDisposed(),fi(this,t)},J.es.prototype.div=function(t){return this.throwIfDisposed(),(0,ye.h)(this,t)};const Vi=(0,ht.op)({dot_:function(t,e){const n=(0,pt._1)(t,"t1","dot"),r=(0,pt._1)(e,"t2","dot");m.hu(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const i=1===n.rank?n.size:n.shape[1],o=1===r.rank?r.size:r.shape[0];if(m.hu(i===o,(()=>`Error in dot: inner dimensions of inputs must match, but got ${i} and ${o}.`)),1===n.rank&&1===r.rank){const t=(0,Te.X)(n,[1,-1]),e=(0,Te.X)(r,[-1,1]),i=(0,ze.O)(t,e);return(0,Te.X)(i,[])}if(1===n.rank&&2===r.rank){const t=(0,Te.X)(n,[1,-1]),e=(0,Te.X)(r,[r.shape[0],r.shape[1]]),i=(0,ze.O)(t,e);return(0,Te.X)(i,[i.size])}if(2===n.rank&&1===r.rank){const t=(0,Te.X)(r,[-1,1]),e=(0,ze.O)(n,t);return(0,Te.X)(e,[e.size])}{const t=(0,Te.X)(r,[r.shape[0],r.shape[1]]);return(0,ze.O)(n,t)}}});J.es.prototype.dot=function(t){return this.throwIfDisposed(),Vi(this,t)};var Wi=n(3233);J.es.prototype.elu=function(){return this.throwIfDisposed(),(0,Wi.p)(this)};var Hi=n(6500);const Gi=(0,ht.op)({equalStrict_:function(t,e){(0,bt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,pt._1)(t,"a","equalStrict"),r=(0,pt._1)(e,"b","equalStrict");return(0,m.k5)(n.shape,r.shape,"Error in equalStrict: "),(0,jn.D)(n,r)}}),ji=(0,ht.op)({greaterEqualStrict_:function(t,e){(0,bt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,pt._1)(t,"a","greaterEqualStrict"),r=(0,pt._1)(e,"b","greaterEqualStrict");return(0,m.k5)(n.shape,r.shape,"Error in greaterEqualStrict: "),(0,qe.b)(n,r)}}),Xi=(0,ht.op)({greaterStrict_:function(t,e){(0,bt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,pt._1)(t,"a","greaterStrict"),r=(0,pt._1)(e,"b","greaterStrict");return(0,m.k5)(n.shape,r.shape,"Error in greaterStrict: "),(0,nr.p)(n,r)}}),qi=(0,ht.op)({lessEqualStrict_:function(t,e){(0,bt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,pt._1)(t,"a","lessEqualStrict"),r=(0,pt._1)(e,"b","lessEqualStrict");return(0,m.k5)(n.shape,r.shape,"Error in lessEqualStrict: "),(0,Ye.z)(n,r)}}),Yi=(0,ht.op)({lessStrict_:function(t,e){(0,bt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,pt._1)(t,"a","lessStrict"),r=(0,pt._1)(e,"b","lessStrict");return(0,m.k5)(n.shape,r.shape,"Error in lessStrict: "),(0,Yn.d)(n,r)}}),Ki=(0,ht.op)({notEqualStrict_:function(t,e){(0,bt.MX)("strict variants of ops have been deprecated and will be removed in future");const n=(0,pt._1)(t,"a","notEqualStrict"),r=(0,pt._1)(e,"b","notEqualStrict");return(0,m.k5)(n.shape,r.shape,"Error in notEqualStrict: "),(0,Hi.Q)(n,r)}});J.es.prototype.equalStrict=function(t){return this.throwIfDisposed(),Gi(this,t)},J.es.prototype.equal=function(t){return this.throwIfDisposed(),(0,jn.D)(this,t)};var Zi=n(4650);J.es.prototype.erf=function(){return this.throwIfDisposed(),(0,Zi.q)(this)},J.es.prototype.exp=function(){return this.throwIfDisposed(),(0,Sn.Q)(this)},J.es.prototype.expandDims=function(t){return this.throwIfDisposed(),(0,ri.d)(this,t)};var Ji=n(3426);J.es.prototype.expm1=function(){return this.throwIfDisposed(),(0,Ji.t)(this)};var Qi=n(7020);J.es.prototype.fft=function(){return this.throwIfDisposed(),(0,Qi.k)(this)},J.es.prototype.flatten=function(){return this.throwIfDisposed(),(0,Te.X)(this,[this.size])},J.es.prototype.floor=function(){return this.throwIfDisposed(),(0,or.G)(this)};var to=n(9165);J.es.prototype.floorDiv=function(t){return this.throwIfDisposed(),(0,to.q)(this,t)},J.es.prototype.gather=function(t,e){return this.throwIfDisposed(),(0,ii.I)(this,t,e)},J.es.prototype.greaterEqualStrict=function(t){return this.throwIfDisposed(),ji(this,t)},J.es.prototype.greaterEqual=function(t){return this.throwIfDisposed(),(0,qe.b)(this,t)},J.es.prototype.greaterStrict=function(t){return this.throwIfDisposed(),Xi(this,t)},J.es.prototype.greater=function(t){return this.throwIfDisposed(),(0,nr.p)(this,t)};var eo=n(8447);J.es.prototype.ifft=function(){return this.throwIfDisposed(),(0,eo.S)(this)};var no=n(4415);J.es.prototype.irfft=function(){return this.throwIfDisposed(),(0,no.w)(this)};const ro=(0,ht.op)({isFinite_:function(t){const e=(0,pt._1)(t,"x","isFinite"),n={x:e};return u.BV.runKernelFunc((t=>t.isFinite(e)),n,null,ct.av)}});J.es.prototype.isFinite=function(){return this.throwIfDisposed(),ro(this)};const io=(0,ht.op)({isInf_:function(t){const e=(0,pt._1)(t,"x","isInf"),n={x:e};return u.BV.runKernelFunc((t=>t.isInf(e)),n,null,ct.iW)}});J.es.prototype.isInf=function(){return this.throwIfDisposed(),io(this)};const oo=(0,ht.op)({isNaN_:function(t){const e=(0,pt._1)(t,"x","isNaN"),n={x:e};return u.BV.runKernelFunc((t=>t.isNaN(e)),n,null,ct.r7)}});J.es.prototype.isNaN=function(){return this.throwIfDisposed(),oo(this)};var so=n(9133);J.es.prototype.leakyRelu=function(t){return this.throwIfDisposed(),(0,so.h)(this,t)},J.es.prototype.lessEqualStrict=function(t){return this.throwIfDisposed(),qi(this,t)},J.es.prototype.lessEqual=function(t){return this.throwIfDisposed(),(0,Ye.z)(this,t)},J.es.prototype.lessStrict=function(t){return this.throwIfDisposed(),Yi(this,t)},J.es.prototype.less=function(t){return this.throwIfDisposed(),(0,Yn.d)(this,t)};var ao=n(9648);J.es.prototype.localResponseNormalization=function(t,e,n,r){return this.throwIfDisposed(),(0,ao.G)(this,t,e,n,r)};var uo=n(633),co=n(3694);const lo=(0,ht.op)({logSigmoid_:function(t){const e=(0,pt._1)(t,"x","logSigmoid");return(0,uo.cb)((t=>({value:(0,ve.W)((0,co.W)((0,ve.W)(t))),gradFunc:e=>(0,fe.d)(e,(0,Br.X)((0,ve.W)(t)))})))(e)}});J.es.prototype.logSigmoid=function(){return this.throwIfDisposed(),lo(this)};var ho=n(1510);J.es.prototype.logSoftmax=function(t){return this.throwIfDisposed(),(0,ho.C)(this,t)};var po=n(1391);J.es.prototype.logSumExp=function(t,e){return this.throwIfDisposed(),(0,po.l)(this,t,e)},J.es.prototype.log=function(){return this.throwIfDisposed(),(0,pr.c)(this)};var fo=n(7474);J.es.prototype.log1p=function(){return this.throwIfDisposed(),(0,fo.K)(this)},J.es.prototype.logicalAnd=function(t){return this.throwIfDisposed(),(0,Ke.H)(this,t)},J.es.prototype.logicalNot=function(){return this.throwIfDisposed(),(0,Mr.h)(this)};var mo=n(5750);J.es.prototype.logicalOr=function(t){return this.throwIfDisposed(),(0,mo.K)(this,t)};const go=(0,ht.op)({logicalXor_:function(t,e){const n=(0,pt._1)(t,"a","logicalXor","bool"),r=(0,pt._1)(e,"b","logicalXor","bool");return(0,Et.$N)(n.shape,r.shape),(0,Ke.H)((0,mo.K)(t,e),(0,Mr.h)((0,Ke.H)(t,e)))}});J.es.prototype.logicalXor=function(t){return this.throwIfDisposed(),go(this,t)},J.es.prototype.matMul=function(t,e,n){return this.throwIfDisposed(),(0,ze.O)(this,t,e,n)};var yo=n(1174);J.es.prototype.maxPool=function(t,e,n,r){return this.throwIfDisposed(),(0,yo._)(this,t,e,n,r)};var vo=n(3307);J.es.prototype.max=function(t,e){return this.throwIfDisposed(),(0,vo.F)(this,t,e)},J.es.prototype.maximumStrict=function(t){return this.throwIfDisposed(),mi(this,t)},J.es.prototype.maximum=function(t){return this.throwIfDisposed(),(0,oi.g)(this,t)};var xo=n(5130);J.es.prototype.mean=function(t,e){return this.throwIfDisposed(),(0,xo.J)(this,t,e)};var bo=n(5735);J.es.prototype.min=function(t,e){return this.throwIfDisposed(),(0,bo.V)(this,t,e)},J.es.prototype.minimumStrict=function(t){return this.throwIfDisposed(),gi(this,t)},J.es.prototype.minimum=function(t){return this.throwIfDisposed(),(0,li.L)(this,t)};var wo=n(1483);J.es.prototype.mirrorPad=function(t,e){return this.throwIfDisposed(),(0,wo.V)(this,t,e)},J.es.prototype.modStrict=function(t){return this.throwIfDisposed(),yi(this,t)},J.es.prototype.mod=function(t){return this.throwIfDisposed(),(0,hi.w)(this,t)},J.es.prototype.mulStrict=function(t){return this.throwIfDisposed(),vi(this,t)},J.es.prototype.mul=function(t){return this.throwIfDisposed(),(0,fe.d)(this,t)},J.es.prototype.neg=function(){return this.throwIfDisposed(),(0,ve.W)(this)};var _o=n(3561);J.es.prototype.norm=function(t,e,n){return this.throwIfDisposed(),(0,_o.K)(this,t,e,n)},J.es.prototype.notEqualStrict=function(t){return this.throwIfDisposed(),Ki(this,t)},J.es.prototype.notEqual=function(t){return this.throwIfDisposed(),(0,Hi.Q)(this,t)};var So=n(6708);J.es.prototype.oneHot=function(t,e=1,n=0){return this.throwIfDisposed(),(0,So.l)(this,t,e,n)};var To=n(7846);J.es.prototype.onesLike=function(){return this.throwIfDisposed(),(0,To.J)(this)},J.es.prototype.pad=function(t,e){return this.throwIfDisposed(),(0,kr.v)(this,t,e)};const Eo=(0,ht.op)({pool_:function(t,e,n,r,i,o){null==i&&(i=[1,1]),null==o&&(o=1),0===r&&(r="valid");const s=(0,pt._1)(t,"x","maxPool");let a=s,u=!1;3===s.rank&&(u=!0,a=(0,Te.X)(s,[1,s.shape[0],s.shape[1],s.shape[2]])),m.hu(Ct.jT(o,i),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${o} and dilations '${i}'`));const c=Ct.Xw(a.shape,e,o,i,r),l=[c.dilationHeight,c.dilationWidth];let h;h="same"===r?function(t,e){const n=t.map(((t,n)=>t+(t-1)*(e[n]-1))).map((t=>t-1)),r=n.map((t=>Math.floor(t/2))),i=n.map(((t,e)=>t-r[e]));return n.map(((t,e)=>[r[e],i[e]]))}([c.filterHeight,c.filterWidth],l):[[0,0],[0,0]];const p=1===l[0]&&1===l[1],[d,f]=function(t,e,n){const r=n.map((t=>t[0])),i=n.map((t=>t[1])),o=t.concat(r,i),s=e.map(((t,e)=>(t-o[e]%t)%t)),a=i.map(((t,e)=>t+s[e]));return[e.map(((t,e)=>[r[e],a[e]])),e.map(((t,e)=>[0,s[e]]))]}([c.inHeight,c.inWidth],l,h),g=p?r:"valid",y=p?a:(0,We.f)(a,l,d),v=("avg"===n?()=>(0,Ii.w)(y,e,o,g):()=>(0,yo._)(y,e,o,g))(),x=p?v:(0,Ur.E)(v,l,f);return u?(0,Te.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}});J.es.prototype.pool=function(t,e,n,r,i){return this.throwIfDisposed(),Eo(this,t,e,n,r,i)},J.es.prototype.powStrict=function(t){return this.throwIfDisposed(),xi(this,t)},J.es.prototype.pow=function(t){return this.throwIfDisposed(),(0,dr.s)(this,t)};var Mo=n(8151);J.es.prototype.prelu=function(t){return this.throwIfDisposed(),(0,Mo.A)(this,t)};var Co=n(9451);J.es.prototype.prod=function(t,e){return this.throwIfDisposed(),(0,Co.W)(this,t,e)};var Ao=n(9036);J.es.prototype.reciprocal=function(){return this.throwIfDisposed(),(0,Ao.M)(this)};var No=n(7409);J.es.prototype.relu=function(){return this.throwIfDisposed(),(0,No.U)(this)};var Ro=n(3582);J.es.prototype.relu6=function(){return this.throwIfDisposed(),(0,Ro.b)(this)},J.es.prototype.reshapeAs=function(t){return this.throwIfDisposed(),(0,Te.X)(this,t.shape)},J.es.prototype.reshape=function(t){return this.throwIfDisposed(),(0,Te.X)(this,t)};var Io=n(3305);J.es.prototype.resizeBilinear=function(t,e){return this.throwIfDisposed(),(0,Io.I)(this,t,e)};var Do=n(5098);J.es.prototype.resizeNearestNeighbor=function(t,e){return this.throwIfDisposed(),(0,Do.j)(this,t,e)},J.es.prototype.reverse=function(t){return this.throwIfDisposed(),(0,_r.G)(this,t)};var Oo=n(3710);J.es.prototype.rfft=function(){return this.throwIfDisposed(),(0,Oo.Q)(this)};var Lo=n(7809);J.es.prototype.round=function(){return this.throwIfDisposed(),(0,Lo.N)(this)},J.es.prototype.rsqrt=function(){return this.throwIfDisposed(),(0,Nn.b)(this)};var ko=n(5503);J.es.prototype.selu=function(){return this.throwIfDisposed(),(0,ko.U)(this)};const Po=(0,ht.op)({separableConv2d_:function(t,e,n,r,i,o=[1,1],s="NHWC"){const a=(0,pt._1)(t,"x","separableConv2d"),u=(0,pt._1)(e,"depthwiseFilter","separableConv2d"),c=(0,pt._1)(n,"pointwiseFilter","separableConv2d");let l=a,h=!1;if(3===a.rank&&(h=!0,l=(0,Te.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]])),"NCHW"===s)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");m.hu(4===l.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${l.rank}.`)),m.hu(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),m.hu(4===c.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),m.hu(1===c.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${c.shape[0]}.`)),m.hu(1===c.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${c.shape[1]}.`));const p=u.shape[2],d=u.shape[3];m.hu(c.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${c.shape[2]}.`));const f=(0,Fi.B)(l,u,r,i,s,o),g=(0,on.T)(f,c,1,"valid",s);return h?(0,Te.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}});J.es.prototype.separableConv2d=function(t,e,n,r,i,o){return this.throwIfDisposed(),Po(this,t,e,n,r,i,o)},J.es.prototype.sigmoid=function(){return this.throwIfDisposed(),(0,Br.X)(this)};var $o=n(4434);J.es.prototype.sign=function(){return this.throwIfDisposed(),(0,$o.X)(this)},J.es.prototype.sin=function(){return this.throwIfDisposed(),(0,ln.O)(this)},J.es.prototype.sinh=function(){return this.throwIfDisposed(),(0,pn.R)(this)},J.es.prototype.slice=function(t,e){return this.throwIfDisposed(),(0,ue.t)(this,t,e)};var Bo=n(682);J.es.prototype.softmax=function(t){return this.throwIfDisposed(),(0,Bo.X)(this,t)},J.es.prototype.softplus=function(){return this.throwIfDisposed(),(0,co.W)(this)},J.es.prototype.spaceToBatchND=function(t,e){return this.throwIfDisposed(),(0,We.f)(this,t,e)},J.es.prototype.split=function(t,e){return this.throwIfDisposed(),(0,Qe.V)(this,t,e)},J.es.prototype.sqrt=function(){return this.throwIfDisposed(),(0,xe._)(this)},J.es.prototype.square=function(){return this.throwIfDisposed(),(0,be.h)(this)},J.es.prototype.squaredDifference=function(t){return this.throwIfDisposed(),(0,pi.$)(this,t)},J.es.prototype.squaredDifferenceStrict=function(t){return this.throwIfDisposed(),bi(this,t)};var Fo=n(9590);J.es.prototype.squeeze=function(t){return this.throwIfDisposed(),(0,Fo.L)(this,t)},J.es.prototype.stack=function(t,e){this.throwIfDisposed();const n=t instanceof J.es?[this,t]:[this,...t];return(0,ei.k)(n,e)},J.es.prototype.step=function(t){return this.throwIfDisposed(),(0,me.N)(this,t)};var Uo=n(5158);J.es.prototype.stridedSlice=function(t,e,n,r,i,o,s,a){return this.throwIfDisposed(),(0,Uo.N)(this,t,e,n,r,i,o,s,a)},J.es.prototype.subStrict=function(t){return this.throwIfDisposed(),wi(this,t)},J.es.prototype.sub=function(t){return this.throwIfDisposed(),(0,we.l)(this,t)},J.es.prototype.sum=function(t,e){return this.throwIfDisposed(),(0,Ee.S)(this,t,e)};var zo=n(1173);J.es.prototype.tan=function(){return this.throwIfDisposed(),(0,zo.O)(this)};var Vo=n(1869);J.es.prototype.tanh=function(){return this.throwIfDisposed(),(0,Vo.A)(this)},J.es.prototype.tile=function(t){return this.throwIfDisposed(),(0,Rn.G)(this,t)},J.es.prototype.toBool=function(){return this.throwIfDisposed(),(0,K.p)(this,"bool")},J.es.prototype.toFloat=function(){return this.throwIfDisposed(),(0,K.p)(this,"float32")},J.es.prototype.toInt=function(){return this.throwIfDisposed(),(0,K.p)(this,"int32")};var Wo=n(3243);J.es.prototype.topk=function(t,e){return this.throwIfDisposed(),(0,Wo.h)(this,t,e)},J.es.prototype.transpose=function(t){return this.throwIfDisposed(),(0,mn.p)(this,t)};var Ho=n(9608);J.es.prototype.unique=function(t){return this.throwIfDisposed(),(0,Ho.T)(this,t)},J.es.prototype.unsortedSegmentSum=function(t,e){return this.throwIfDisposed(),Dn(this,t,e)};var Go=n(4136);J.es.prototype.unstack=function(t){return this.throwIfDisposed(),(0,Go.H)(this,t)},J.es.prototype.where=function(t,e){return this.throwIfDisposed(),(0,Ze.a)(t,this,e)},J.es.prototype.zerosLike=function(){return this.throwIfDisposed(),(0,Ae.P)(this)}},9121:function(t,e,n){"use strict";n.d(e,{SY:function(){return r},VG:function(){return i},Sp:function(){return o},mm:function(){return s},Xz:function(){return a},oT:function(){return u},IK:function(){return c},sJ:function(){return l},aJ:function(){return h},M2:function(){return p},qw:function(){return d},jM:function(){return f},Oy:function(){return m},QC:function(){return g},Jh:function(){return y},xt:function(){return v},_k:function(){return x},DC:function(){return b},XL:function(){return w},zw:function(){return _},Ly:function(){return S},RF:function(){return T},gJ:function(){return E},xn:function(){return M},Zz:function(){return C},Eh:function(){return A},mh:function(){return N},wU:function(){return R},wm:function(){return I},x1:function(){return D},o2:function(){return O},ik:function(){return L},mc:function(){return k},TR:function(){return P},iH:function(){return $},Vc:function(){return B},T0:function(){return F},ci:function(){return U},sL:function(){return z},y7:function(){return V},p4:function(){return W},ek:function(){return H},Vn:function(){return G},ZC:function(){return j},SX:function(){return X},HE:function(){return q},Om:function(){return Y},hd:function(){return K},NE:function(){return Z},Y0:function(){return J},vw:function(){return Q},de:function(){return tt},Uy:function(){return et},OR:function(){return nt},je:function(){return rt},sH:function(){return it},qi:function(){return ot},q1:function(){return st},iZ:function(){return at},Ac:function(){return ut},iJ:function(){return ct},Qg:function(){return lt},J_:function(){return ht},av:function(){return pt},iW:function(){return dt},r7:function(){return ft},vt:function(){return mt},CA:function(){return gt},e7:function(){return yt},Zb:function(){return vt},kU:function(){return xt},PY:function(){return bt},Vf:function(){return wt},MZ:function(){return _t},qC:function(){return St},eZ:function(){return Tt},vI:function(){return Et},Yo:function(){return Mt},BM:function(){return Ct},mT:function(){return At},Gv:function(){return Nt},OA:function(){return Rt},f:function(){return It},vF:function(){return Dt},q2:function(){return Ot},c1:function(){return Lt},q8:function(){return kt},jQ:function(){return Pt},Vb:function(){return $t},wY:function(){return Bt},L0:function(){return Ft},yQ:function(){return Ut},uv:function(){return zt},cy:function(){return Vt},W0:function(){return Wt},qW:function(){return Ht},we:function(){return Gt},ly:function(){return jt},pe:function(){return Xt},o0:function(){return qt},Dl:function(){return Yt},e6:function(){return Kt},xJ:function(){return Zt},$H:function(){return Jt},qk:function(){return Qt},HZ:function(){return te},dp:function(){return ee},Hm:function(){return ne},_Y:function(){return re},zb:function(){return ie},Sb:function(){return oe},mK:function(){return se},e0:function(){return ae},bV:function(){return ue},xQ:function(){return ce},xc:function(){return le},oF:function(){return he},p2:function(){return pe},RQ:function(){return de},w3:function(){return fe},i5:function(){return me},a5:function(){return ge},MR:function(){return ye},FK:function(){return ve},GB:function(){return xe},TQ:function(){return be},L8:function(){return we},Gc:function(){return _e},_t:function(){return Se},bK:function(){return Te},Tr:function(){return Ee},D2:function(){return Me},m2:function(){return Ce},sE:function(){return Ae},MI:function(){return Ne},n9:function(){return Re},cW:function(){return Ie},G3:function(){return De},kp:function(){return Oe},To:function(){return Le},Qv:function(){return ke},Ru:function(){return Pe},h8:function(){return $e},eB:function(){return Be},b9:function(){return Fe},us:function(){return Ue},_V:function(){return ze},lu:function(){return Ve}});const r="Abs",i="Acos",o="Acosh",s="Add",a="AddN",u="All",c="Any",l="ArgMax",h="ArgMin",p="Asin",d="Asinh",f="Atan",m="Atanh",g="Atan2",y="AvgPool",v="AvgPoolBackprop",x="AvgPool3D",b="AvgPool3DBackprop",w="BatchMatMul",_="BatchToSpaceND",S="BroadcastTo",T="Cast",E="Ceil",M="ClipByValue",C="Complex",A="Concat",N="Conv2D",R="Conv2DBackpropFilter",I="Conv2DBackpropInput",D="Conv3D",O="Conv3DBackpropFilterV2",L="Conv3DBackpropInputV2",k="Cos",P="Cosh",$="Cumsum",B="CropAndResize",F="DepthToSpace",U="DepthwiseConv2dNative",z="DepthwiseConv2dNativeBackpropFilter",V="DepthwiseConv2dNativeBackpropInput",W="Dilation2D",H="Dilation2DBackpropInput",G="Dilation2DBackpropFilter",j="Div",X="Elu",q="EluGrad",Y="Erf",K="Equal",Z="Exp",J="Expm1",Q="FFT",tt="Fill",et="FlipLeftRight",nt="Floor",rt="FloorDiv",it="FusedBatchNorm",ot="GatherV2",st="GatherNd",at="Greater",ut="GreaterEqual",ct="Identity",lt="IFFT",ht="Imag",pt="IsFinite",dt="IsInf",ft="IsNan",mt="Less",gt="LessEqual",yt="LinSpace",vt="Log",xt="Log1p",bt="LogicalAnd",wt="LogicalNot",_t="LogicalOr",St="LogSoftmax",Tt="LRN",Et="LRNBackprop",Mt="Max",Ct="Maximum",At="MaxPool",Nt="MaxPoolBackprop",Rt="MaxPool3D",It="MaxPool3DBackprop",Dt="MaxPoolWithArgmax",Ot="Mean",Lt="Min",kt="Minimum",Pt="MirrorPad",$t="Mod",Bt="Multiply",Ft="Negate",Ut="NotEqual",zt="NonMaxSuppressionV3",Vt="NonMaxSuppressionV4",Wt="NonMaxSuppressionV5",Ht="OnesLike",Gt="OneHot",jt="PadV2",Xt="Pow",qt="Prelu",Yt="Prod",Kt="Range",Zt="Real",Jt="Reciprocal",Qt="Relu",te="Reshape",ee="ResizeNearestNeighbor",ne="ResizeNearestNeighborGrad",re="ResizeBilinear",ie="ResizeBilinearGrad",oe="Relu6",se="Reverse",ae="Round",ue="Rsqrt",ce="ScatterNd",le="SelectV2",he="Selu",pe="Slice",de="Sin",fe="Sinh",me="Sign",ge="Sigmoid",ye="Softplus",ve="Sqrt",xe="Sum",be="SpaceToBatchND",we="SplitV",_e="Softmax",Se="SquaredDifference",Te="Square",Ee="Sub",Me="SparseToDense",Ce="StridedSlice",Ae="Tan",Ne="Tanh",Re="Tile",Ie="TopK",De="Transpose",Oe="Unique",Le="Unpack",ke="UnsortedSegmentSum",Pe="ZerosLike",$e="Step",Be="FromPixels",Fe="RotateWithOffset",Ue="_FusedMatMul",ze="FusedConv2D",Ve="FusedDepthwiseConv2D"},6151:function(t,e,n){"use strict";n.d(e,{pI:function(){return a},uk:function(){return u},tr:function(){return c},wC:function(){return l},Li:function(){return h}});var r=n(2885),i=n(5938);const o=(0,i.R)("kernelRegistry",(()=>new Map)),s=(0,i.R)("gradRegistry",(()=>new Map));function a(t,e){const n=p(t,e);return o.get(n)}function u(t){return s.get(t)}function c(t){const e=o.entries(),n=[];for(;;){const{done:r,value:i}=e.next();if(r)break;const[o,s]=i,[a]=o.split("_");a===t&&n.push(s)}return n}function l(t){const{kernelName:e,backendName:n}=t,r=p(e,n);o.has(r)&&console.warn(`The kernel '${e}' for backend '${n}' is already registered`),o.set(r,t)}function h(t){const{kernelName:e}=t;s.has(e)&&(0,r.OB)().getBool("DEBUG")&&console.warn(`Overriding the gradient for '${e}'`),s.set(e,t)}function p(t,e){return`${e}_${t}`}},6235:function(t,e,n){"use strict";n.d(e,{W:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({abs_:function(t){const e=(0,o._1)(t,"x","abs"),n={x:e};return r.BV.runKernelFunc(((t,n)=>(n([e]),"complex64"===e.dtype?t.complexAbs(e):t.abs(e))),n,null,i.SY)}})},7839:function(t,e,n){"use strict";n.d(e,{K:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({acos_:function(t){const e=(0,o._1)(t,"x","acos"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.acos(e);return n([e]),r}),n,null,i.VG)}})},1470:function(t,e,n){"use strict";n.d(e,{_:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({acosh_:function(t){const e=(0,o._1)(t,"x","acosh"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.acosh(e);return n([e]),r}),n,null,i.Sp)}})},6407:function(t,e,n){"use strict";n.d(e,{I:function(){return a}});var r=n(7097),i=n(9121),o=n(747),s=n(3740);const a=(0,n(2668).op)({add_:function(t,e){let n=(0,s._1)(t,"a","add"),a=(0,s._1)(e,"b","add");[n,a]=(0,o.T_)(n,a);const u={a:n,b:a};return r.BV.runKernelFunc(((t,e)=>{const r=t.add(n,a);return e([n,a]),r}),u,null,i.mm)}})},781:function(t,e,n){"use strict";n.d(e,{$:function(){return h}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(3591),u=n(2668),c=n(4968),l=n(9065);const h=(0,u.op)({all_:function(t,e=null,n=!1){let u=(0,o._1)(t,"x","all","bool");const h={x:u},p={axis:e,keepDims:n};return r.BV.runKernelFunc((t=>{const r=(0,s.EC)(e,u.shape);let i=r;const o=(0,a.Q3)(i,u.rank);null!=o&&(u=(0,l.p)(u,o),i=(0,a.sY)(i.length,u.rank));const h=t.all(u,i);if(n){const t=(0,a.rv)(h.shape,r);return(0,c.X)(h,t)}return h}),h,null,i.oT,p)}})},2998:function(t,e,n){"use strict";n.d(e,{Y:function(){return h}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(3591),u=n(2668),c=n(4968),l=n(9065);const h=(0,u.op)({any_:function(t,e=null,n=!1){let u=(0,o._1)(t,"x","any","bool");const h={x:u},p={axis:e,keepDims:n};return r.BV.runKernelFunc((t=>{const r=(0,s.EC)(e,u.shape);let i=r;const o=(0,a.Q3)(i,u.rank);null!=o&&(u=(0,l.p)(u,o),i=(0,a.sY)(i.length,u.rank));const h=t.any(u,i);if(n){const t=(0,a.rv)(h.shape,r);return(0,c.X)(h,t)}return h}),h,null,i.IK,p)}})},47:function(t,e,n){"use strict";n.d(e,{N:function(){return l}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(3591),u=n(2668),c=n(9065);const l=(0,u.op)({argMax_:function(t,e=0){let n=(0,o._1)(t,"x","argMax");const u={x:n},l={axis:e};return r.BV.runKernelFunc(((t,r)=>{r([n]);let i=s.EC(e,n.shape);const o=a.Q3(i,n.rank);return null!=o&&(n=(0,c.p)(n,o),i=a.sY(i.length,n.rank)),t.argMax(n,i[0])}),u,null,i.sJ,l)}})},7394:function(t,e,n){"use strict";n.d(e,{v:function(){return l}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(3591),u=n(2668),c=n(9065);const l=(0,u.op)({argMin_:function(t,e=0){let n=(0,o._1)(t,"x","argMin");const u={x:n},l={axis:e};return r.BV.runKernelFunc(((t,r)=>{r([n]),null==e&&(e=0);let i=s.EC(e,n.shape);const o=a.Q3(i,n.rank);return null!=o&&(n=(0,c.p)(n,o),i=a.sY(i.length,n.rank)),t.argMin(n,i[0])}),u,null,i.aJ,l)}})},2421:function(t,e,n){"use strict";n.d(e,{Z:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({asin_:function(t){const e=(0,o._1)(t,"x","asin"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.asin(e);return n([e]),r}),n,null,i.M2)}})},1891:function(t,e,n){"use strict";n.d(e,{V:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({asinh_:function(t){const e=(0,o._1)(t,"x","asinh"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.asinh(e);return n([e]),r}),n,null,i.qw)}})},7037:function(t,e,n){"use strict";n.d(e,{z:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({atan_:function(t){const e=(0,o._1)(t,"x","atan"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.atan(e);return n([e]),r}),n,null,i.jM)}})},9812:function(t,e,n){"use strict";n.d(e,{f:function(){return a}});var r=n(7097),i=n(9121),o=n(747),s=n(3740);const a=(0,n(2668).op)({atan2_:function(t,e){let n=(0,s._1)(t,"a","atan2"),a=(0,s._1)(e,"b","atan2");[n,a]=(0,o.T_)(n,a);const u={a:n,b:a};return r.BV.runKernelFunc(((t,e)=>{const r=t.atan2(n,a);return e([n,a]),r}),u,null,i.QC)}})},369:function(t,e,n){"use strict";n.d(e,{C:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({atanh_:function(t){const e=(0,o._1)(t,"x","atanh"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.atanh(e);return n([e]),r}),n,null,i.Oy)}})},5176:function(t,e,n){"use strict";n.d(e,{w:function(){return h}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(2271),u=n(2582),c=n(2668),l=n(4968);const h=(0,c.op)({avgPool_:function(t,e,n,c,h){const p=(0,o._1)(t,"x","avgPool","float32");s.hu(u.jT(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let d=p,f=!1;3===p.rank&&(f=!0,d=(0,l.X)(p,[1,p.shape[0],p.shape[1],p.shape[2]])),s.hu(4===d.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${d.rank}.`)),null!=h&&s.hu(s.GN(c),(()=>`Error in avgPool: pad must be an integer when using, dimRoundingMode ${h} but got pad ${c}.`));const m={x:d},g={filterSize:e,strides:n,pad:c,dimRoundingMode:h};let y=r.BV.runKernelFunc(((t,r)=>{const i=u.Xw(d.shape,e,n,1,c,h);return r([d]),1===i.filterWidth&&1===i.filterHeight&&s.cO(i.inShape,i.outShape)?d.clone():t.avgPool(d,i)}),m,null,i.Jh,g);return y=(0,a.p)(y,p.dtype),f?(0,l.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},3591:function(t,e,n){"use strict";n.d(e,{YB:function(){return i},Vh:function(){return o},kz:function(){return s},rv:function(){return a},lB:function(){return u},Q3:function(){return c},LJ:function(){return l},sY:function(){return h}});var r=n(569);function i(t,e){for(let n=0;n<t.length;++n)if(t[t.length-n-1]!==e-1-n)return!1;return!0}function o(t,e,n){const r=t.length+e.length,i=[];let o=0,s=0;for(let a=0;a<r;a++)-1===n.indexOf(a)?i.push(t[o++]):i.push(e[s++]);return i}function s(t,e){const n=[],r=t.length;for(let i=0;i<r;i++)-1===e.indexOf(i)&&n.push(t[i]);return[n,e.map((e=>t[e]))]}function a(t,e){return o(t,e.map((t=>1)),e)}function u(t,e,n){r.hu(i(e,n),(()=>`${t} supports only inner-most axes for now. Got axes ${e} and rank-${n} input.`))}function c(t,e){if(i(t,e))return null;const n=[];for(let r=0;r<e;++r)-1===t.indexOf(r)&&n.push(r);return t.forEach((t=>n.push(t))),n}function l(t){return t.map(((t,e)=>[e,t])).sort(((t,e)=>t[1]-e[1])).map((t=>t[0]))}function h(t,e){const n=[];for(let r=e-t;r<e;++r)n.push(r);return n}},8441:function(t,e,n){"use strict";n.d(e,{E:function(){return a}});var r=n(7097),i=n(9121),o=n(3740),s=n(569);const a=(0,n(2668).op)({batchToSpaceND_:function(t,e,n){const a=(0,o._1)(t,"x","batchToSpaceND"),u=e.reduce(((t,e)=>t*e));s.hu(a.rank>=1+e.length,(()=>`input rank is ${a.rank} but should be > than blockShape.length ${e.length}`)),s.hu(n.length===e.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${e.length}`)),s.hu(a.shape[0]%u==0,(()=>`input tensor batch is ${a.shape[0]} but is not divisible by the product of the elements of blockShape ${e.join(" * ")} === ${u}`));const c={x:a},l={blockShape:e,crops:n};return r.BV.runKernelFunc((t=>t.batchToSpaceND(a,e,n)),c,null,i.zw,l)}})},7505:function(t,e,n){"use strict";n.d(e,{t:function(){return c}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(4968);function u(t){return null==t?null:0===t.rank?(0,a.X)(t,[t.size]):1===t.rank?t:2===t.rank?(0,a.X)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?(0,a.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t}const c=(0,n(2668).op)({batchNorm_:function(t,e,n,c,l,h){null==h&&(h=.001);const p=(0,o._1)(t,"x","batchNorm"),d=(0,o._1)(e,"mean","batchNorm"),f=(0,o._1)(n,"variance","batchNorm");let m,g;null!=l&&(m=(0,o._1)(l,"scale","batchNorm")),null!=c&&(g=(0,o._1)(c,"offset","batchNorm")),s.hu(d.rank===f.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),s.hu(null==g||d.rank===g.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),s.hu(null==m||d.rank===m.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const y=function(t){let e;return e=0===t.rank||1===t.rank?(0,a.X)(t,[1,1,1,t.size]):2===t.rank?(0,a.X)(t,[1,1,t.shape[0],t.shape[1]]):3===t.rank?(0,a.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]):t,e}(p),v={x:y,scale:m,offset:g,mean:d,variance:f},x={varianceEpsilon:h},b=r.BV.runKernelFunc(((t,e)=>(e([y,d,f,m]),t.batchNorm(y,u(d),u(f),u(g),u(m),h))),v,null,i.sH,x);return(0,a.X)(b,p.shape)}})},8247:function(t,e,n){"use strict";n.d(e,{U:function(){return c}});var r=n(7097),i=n(9121),o=n(3740),s=n(8723),a=n(2668),u=n(4968);const c=(0,a.op)({broadcastTo_:function(t,e){let n=(0,o._1)(t,"broadcastTo","x");const a=n.shape;if(e.some((t=>!(t>0)||t%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${e}].`);if(e.length<n.rank)throw new Error(`broadcastTo(): shape.length=${e.length} < input.rank=${n.rank}.`);if(e.length>n.rank){const t=n.shape.slice();for(;t.length<e.length;)t.unshift(1);n=(0,u.X)(n,t)}const c=n.shape,l=Array.from(e);for(let t=e.length-1;t>=0;t--)if(c[t]===e[t])l[t]=1;else if(1!==n.shape[t])throw new Error(`broadcastTo(): [${a}] cannot be broadcast to [${e}].`);if(0===l.map(((t,e)=>t>1?e:-1)).filter((t=>t>=0)).length)return(0,s.d)(n);const h={x:n},p={shape:e,inputShape:c};return r.BV.runKernelFunc((t=>t.tile(n,l)),h,null,i.Ly,p)}})},2200:function(t,e,n){"use strict";function r(t,e){const n=t.length,r=[];for(let i=0;i<n;i++){const o=n-1-i,s=t[o]||1;(e[e.length-1-i]||1)>1&&1===s&&r.unshift(o)}return r}function i(t,e){const n=[];for(let r=0;r<e.length;r++){const i=t[t.length-r-1],o=e.length-r-1,s=e[o];(null==i||1===i&&s>1)&&n.unshift(o)}return n}function o(t,e){const n=[],r=Math.max(t.length,e.length);for(let i=0;i<r;i++){let r=t[t.length-i-1];null==r&&(r=1);let o=e[e.length-i-1];if(null==o&&(o=1),1===r)n.unshift(o);else if(1===o)n.unshift(r);else{if(r!==o)throw Error(`Operands could not be broadcast together with shapes ${t} and ${e}.`);n.unshift(r)}}return n}n.d(e,{XF:function(){return r},RR:function(){return i},$N:function(){return o}})},2657:function(t,e,n){"use strict";n.d(e,{f:function(){return o}});var r=n(4077),i=n(569);function o(t,e="float32",n){return e=e||"float32",i.Mu(t),new r.YD(t,e,n)}},2271:function(t,e,n){"use strict";n.d(e,{p:function(){return a}});var r=n(7097),i=n(9121),o=n(3740),s=n(569);const a=(0,n(2668).op)({cast_:function(t,e){const n=(0,o._1)(t,"x","cast");if(!s.LP(e))throw new Error(`Failed to cast to unknown dtype ${e}`);if("string"===e&&"string"!==n.dtype||"string"!==e&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const a={x:n},u={dtype:e};return r.BV.runKernelFunc((t=>t.cast(n,e)),a,null,i.RF,u)}})},6825:function(t,e,n){"use strict";n.d(e,{m:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({ceil_:function(t){const e=(0,o._1)(t,"x","ceil"),n={x:e};return r.BV.runKernelFunc((t=>t.ceil(e)),n,null,i.gJ)}})},2279:function(t,e,n){"use strict";n.d(e,{i:function(){return a}});var r=n(7097),i=n(9121),o=n(3740),s=n(569);const a=(0,n(2668).op)({clipByValue_:function(t,e,n){const a=(0,o._1)(t,"x","clipByValue");s.hu(e<=n,(()=>`Error in clip: min (${e}) must be less than or equal to max (${n}).`));const u={x:a},c={clipValueMin:e,clipValueMax:n};return r.BV.runKernelFunc(((t,r)=>{const i=t.clip(a,e,n);return r([a]),i}),u,null,i.xn,c)}})},8723:function(t,e,n){"use strict";n.d(e,{d:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({clone_:function(t){const e=(0,o._1)(t,"x","clone",null),n={x:e};return r.BV.runKernelFunc((()=>r.BV.makeTensorFromDataId(e.dataId,e.shape,e.dtype)),n,null,i.iJ)}})},1661:function(t,e,n){"use strict";n.d(e,{P:function(){return a}});var r=n(7097),i=n(9121),o=n(3740),s=n(569);const a=(0,n(2668).op)({complex_:function(t,e){const n=(0,o._1)(t,"real","complex"),a=(0,o._1)(e,"imag","complex");s.k5(n.shape,a.shape,`real and imag shapes, ${n.shape} and ${a.shape}, must match in call to tf.complex().`);const u={real:n,imag:a};return r.BV.runKernelFunc((t=>t.complex(n,a)),u,null,i.Zz)}})},6884:function(t,e,n){"use strict";n.d(e,{z:function(){return l}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(398),u=n(2668),c=n(701);const l=(0,u.op)({concat_:function(t,e=0){(0,s.hu)(t.length>=1,(()=>"Pass at least one tensor to concat"));let n=(0,o.sI)(t,"tensors","concat");"complex64"===n[0].dtype&&n.forEach((t=>{if("complex64"!==t.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${t.dtype}. `)}));const u=n,l={axis:e};return r.BV.runKernelFunc(((t,r)=>{const i=(0,s.EC)(e,n[0].shape)[0],o=(0,a.N)(n.map((t=>t.shape)),i);if(0===(0,s.NA)(o))return(0,c.X)([],o);if(n=n.filter((t=>t.size>0)),1===n.length)return n[0];const u=n.map((t=>t.shape));(0,a.o)(u,i);const l=t.concat(n,i);return r(n),l}),u,null,i.Eh,l)}})},398:function(t,e,n){"use strict";n.d(e,{o:function(){return i},N:function(){return o}});var r=n(569);function i(t,e){const n=t[0].length;t.forEach(((t,e)=>{r.hu(t.length===n,(()=>`Error in concat${n}D: rank of tensors[${e}] must be the same as the rank of the rest (${n})`))})),r.hu(e>=0&&e<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const i=t[0];t.forEach(((t,o)=>{for(let s=0;s<n;s++)r.hu(s===e||t[s]===i[s],(()=>`Error in concat${n}D: Shape of tensors[${o}] (${t}) does not match the shape of the rest (${i}) along the non-concatenated axis ${o}.`))}))}function o(t,e){const n=t[0].slice();for(let r=1;r<t.length;r++)n[e]+=t[r][e];return n}},1355:function(t,e,n){"use strict";n.d(e,{P:function(){return c}});var r=n(3740),i=n(569),o=n(4794),s=n(2582),a=n(2668),u=n(4968);const c=(0,a.op)({conv1d_:function(t,e,n,a,c="NWC",l=1,h){const p=(0,r._1)(t,"x","conv1d"),d=(0,r._1)(e,"filter","conv1d");let f=p,m=!1;2===p.rank&&(m=!0,f=(0,u.X)(p,[1,p.shape[0],p.shape[1]])),i.hu(3===f.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${f.rank}.`)),i.hu(3===d.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${d.rank}.`)),null!=h&&i.hu(i.GN(a),(()=>`Error in conv1d: pad must be an integer when using, dimRoundingMode ${h} but got pad ${a}.`)),i.hu(f.shape[2]===d.shape[1],(()=>`Error in conv1d: depth of input (${f.shape[2]}) must match input depth for filter ${d.shape[1]}.`)),i.hu(s.jT(n,l),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${l}'`)),i.hu("NWC"===c,(()=>`Error in conv1d: got dataFormat of ${c} but only NWC is currently supported.`));const g=(0,u.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]]),y=(0,u.X)(f,[f.shape[0],1,f.shape[1],f.shape[2]]),v=[1,n],x=[1,l],b=(0,o.T)(y,g,v,a,"NHWC",x,h);return m?(0,u.X)(b,[b.shape[2],b.shape[3]]):(0,u.X)(b,[b.shape[0],b.shape[2],b.shape[3]])}})},4794:function(t,e,n){"use strict";n.d(e,{T:function(){return l}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(2582),u=n(2668),c=n(4968);const l=(0,u.op)({conv2d_:function(t,e,n,u,l="NHWC",h=[1,1],p){const d=(0,o._1)(t,"x","conv2d"),f=(0,o._1)(e,"filter","conv2d");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,c.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),s.hu(4===m.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${m.rank}.`)),s.hu(4===f.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${f.rank}.`)),null!=p&&s.hu(s.GN(u),(()=>`Error in conv2d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${u}.`));const y="NHWC"===l?m.shape[3]:m.shape[1];s.hu(y===f.shape[2],(()=>`Error in conv2d: depth of input (${y}) must match input depth for filter ${f.shape[2]}.`)),s.hu(a.jT(n,h),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`));const v={x:m,filter:f},x={strides:n,pad:u,dataFormat:l,dilations:h,dimRoundingMode:p},b=r.BV.runKernelFunc(((t,e)=>{const r=a.sl(l),i=a.Ix(m.shape,f.shape,n,h,u,p,!1,r),o=t.conv2d(m,f,i);return e([m,f]),o}),v,null,i.mh,x);return g?(0,c.X)(b,[b.shape[1],b.shape[2],b.shape[3]]):b}})},6013:function(t,e,n){"use strict";n.d(e,{p:function(){return c}});var r=n(7097),i=n(9121),o=n(569),s=n(2582),a=n(2668),u=n(4968);const c=(0,a.op)({conv2DBackpropFilter_:function(t,e,n,a,c,l="NHWC",h){let p=t;3===t.rank&&(p=(0,u.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let d=e;3===d.rank&&(d=(0,u.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]])),o.hu(4===p.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${p.shape}.`)),o.hu(4===d.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${d.shape}.`)),o.hu(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const f="NHWC"===l?p.shape[3]:p.shape[1],m="NHWC"===l?d.shape[3]:d.shape[1];o.hu(f===n[2],(()=>`Error in conv2dDerFilter: depth of input ${f}) must match input depth in filter (${n[2]}.`)),o.hu(m===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${m}) must match output depth for filter (${n[3]}).`)),null!=h&&o.hu(o.GN(c),(()=>`Error in conv2dDerFilter: pad must be an integer when using, dimRoundingMode ${h} but got pad ${c}.`));const g={x:p,dy:d},y={strides:a,pad:c,dataFormat:l,dimRoundingMode:h,filterShape:n};return r.BV.runKernelFunc((t=>{const e=s.sl(l),r=s.Ix(p.shape,n,a,1,c,h,!1,e);return t.conv2dDerFilter(p,d,r)}),g,null,i.wU,y)}})},9832:function(t,e,n){"use strict";n.d(e,{_:function(){return c}});var r=n(7097),i=n(9121),o=n(569),s=n(2582),a=n(2668),u=n(4968);const c=(0,a.op)({conv2DBackpropInput_:function(t,e,n,a,c,l="NHWC",h){o.hu(t.length===e.rank,(()=>`Length of inShape (${t.length}) and rank of dy (${e.rank}) must match`));let p=t,d=e,f=!1;3===e.rank&&(f=!0,d=(0,u.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]),p=[1,t[0],t[1],t[2]]),o.hu(4===p.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${p.length}.`)),o.hu(4===d.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${d.rank}`)),o.hu(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const m="NHWC"===l?p[3]:p[1],g="NHWC"===l?d.shape[3]:d.shape[1];o.hu(m===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${m}) must match input depth for filter ${n.shape[2]}.`)),o.hu(g===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${g}) must match output depth for filter ${n.shape[3]}.`)),null!=h&&o.hu(o.GN(c),(()=>`Error in conv2dDerInput: pad must be an integer when using, dimRoundingMode ${h} but got pad ${c}.`));const y={dy:d,filter:n},v={strides:a,pad:c,dataFormat:l,dimRoundingMode:h,inputShape:p},x=r.BV.runKernelFunc(((t,e)=>{const r=s.sl(l),i=s.Ix(p,n.shape,a,1,c,h,!1,r),o=t.conv2dDerInput(d,n,i);return e([d,n]),o}),y,null,i.wm,v);return f?(0,u.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},1405:function(t,e,n){"use strict";n.d(e,{b:function(){return o}});var r=n(3740),i=n(9832);const o=(0,n(2668).op)({conv2dTranspose_:function(t,e,n,o,s,a){const u=(0,r._1)(t,"x","conv2dTranspose"),c=(0,r._1)(e,"filter","conv2dTranspose");return(0,i._)(n,u,c,o,s,"NHWC",a)}})},2582:function(t,e,n){"use strict";n.d(e,{Rf:function(){return i},Xw:function(){return o},pl:function(){return s},Ix:function(){return a},jw:function(){return u},aO:function(){return c},I0:function(){return f},jT:function(){return m},sl:function(){return g}});var r=n(569);function i(t,e,n,r,i="NHWC",o){return a(t,[...e,t[3]],n,o,r,null,null,g(i))}function o(t,e,n,r,i,o,s="channelsLast"){const[u,c]=l(e);let h;if("channelsLast"===s)h=[u,c,t[3],t[3]];else{if("channelsFirst"!==s)throw new Error(`Unknown dataFormat ${s}`);h=[u,c,t[1],t[1]]}return a(t,h,n,r,i,o,!1,s)}function s(t,e,n,r,i,o,s="NDHWC"){const[a,c,l]=h(e);let p,d;if("NDHWC"===s)d="channelsLast",p=[a,c,l,t[4],t[4]];else{if("NCDHW"!==s)throw new Error(`Unknown dataFormat ${s}`);d="channelsFirst",p=[a,c,l,t[1],t[1]]}return u(t,p,n,r,i,!1,d,o)}function a(t,e,n,i,o,s,a=!1,u="channelsLast"){let[h,f,m,g]=[-1,-1,-1,-1];if("channelsLast"===u)[h,f,m,g]=t;else{if("channelsFirst"!==u)throw new Error(`Unknown dataFormat ${u}`);[h,g,f,m]=t}const[y,v,,x]=e,[b,w]=l(n),[_,S]=l(i),T=p(y,_),E=p(v,S),{padInfo:M,outHeight:C,outWidth:A}=function(t,e,n,i,o,s,a,u,l){let h,p,f;if("number"==typeof t){h={top:t,bottom:t,left:t,right:t,type:0===t?"VALID":"NUMBER"};const o=function(t,e,n,i,o){null==i&&(i=c(t,e,n));const s=t[1],a=d((t[0]-e+2*i)/n+1,o);r.hu(r.GN(a),(()=>`The output # of rows (${a}) must be an integer. Change the stride and/or zero pad parameters`));const u=d((s-e+2*i)/n+1,o);return r.hu(r.GN(u),(()=>`The output # of columns (${u}) must be an integer. Change the stride and/or zero pad parameters`)),[a,u]}([e,n],s,i,t,u);p=o[0],f=o[1]}else if("same"===t){p=Math.ceil(e/i),f=Math.ceil(n/o);const t=Math.max(0,(p-1)*i+s-e),r=Math.max(0,(f-1)*o+a-n),u=Math.floor(t/2),c=t-u,l=Math.floor(r/2);h={top:u,bottom:c,left:l,right:r-l,type:"SAME"}}else if("valid"===t)h={top:0,bottom:0,left:0,right:0,type:"VALID"},p=Math.ceil((e-s+1)/i),f=Math.ceil((n-a+1)/o);else{if("object"!=typeof t)throw Error(`Unknown padding parameter: ${t}`);{const r="channelsLast"===l?t[1][0]:t[2][0],c="channelsLast"===l?t[1][1]:t[2][1],m="channelsLast"===l?t[2][0]:t[3][0],g="channelsLast"===l?t[2][1]:t[3][1];h={top:r,bottom:c,left:m,right:g,type:0===r&&0===c&&0===m&&0===g?"VALID":"EXPLICIT"},p=d((e-s+r+c)/i+1,u),f=d((n-a+m+g)/o+1,u)}}return{padInfo:h,outHeight:p,outWidth:f}}(o,f,m,b,w,T,E,s,u),N=a?x*g:x;let R;return"channelsFirst"===u?R=[h,N,C,A]:"channelsLast"===u&&(R=[h,C,A,N]),{batchSize:h,dataFormat:u,inHeight:f,inWidth:m,inChannels:g,outHeight:C,outWidth:A,outChannels:N,padInfo:M,strideHeight:b,strideWidth:w,filterHeight:y,filterWidth:v,effectiveFilterHeight:T,effectiveFilterWidth:E,dilationHeight:_,dilationWidth:S,inShape:t,outShape:R,filterShape:e}}function u(t,e,n,i,o,s=!1,a="channelsLast",u){let[l,f,m,g,y]=[-1,-1,-1,-1,-1];if("channelsLast"===a)[l,f,m,g,y]=t;else{if("channelsFirst"!==a)throw new Error(`Unknown dataFormat ${a}`);[l,y,f,m,g]=t}const[v,x,b,,w]=e,[_,S,T]=h(n),[E,M,C]=h(i),A=p(v,E),N=p(x,M),R=p(b,C),{padInfo:I,outDepth:D,outHeight:O,outWidth:L}=function(t,e,n,i,o,s,a,u,l,h,p){let f,m,g,y;if("number"==typeof t){f={top:t,bottom:t,left:t,right:t,front:t,back:t,type:0===t?"VALID":"NUMBER"};const s=function(t,e,n,i,o,s){null==o&&(o=c(t,e,i));const a=t[1],u=t[2],l=d((t[0]-e+2*o)/i+1,s);r.hu(r.GN(l),(()=>`The output # of depths (${l}) must be an integer. Change the stride and/or zero pad parameters`));const h=d((a-e+2*o)/i+1,s);r.hu(r.GN(h),(()=>`The output # of rows (${h}) must be an integer. Change the stride and/or zero pad parameters`));const p=d((u-e+2*o)/i+1,s);return r.hu(r.GN(p),(()=>`The output # of columns (${p}) must be an integer. Change the stride and/or zero pad parameters`)),[l,h,p,1]}([e,n,i,1],u,0,o,t,p);m=s[0],g=s[1],y=s[2]}else if("same"===t){m=Math.ceil(e/o),g=Math.ceil(n/s),y=Math.ceil(i/a);const t=(m-1)*o+u-e,r=(g-1)*s+l-n,c=(y-1)*a+h-i,p=Math.floor(t/2),d=t-p,v=Math.floor(r/2),x=r-v,b=Math.floor(c/2);f={top:v,bottom:x,left:b,right:c-b,front:p,back:d,type:"SAME"}}else{if("valid"!==t)throw Error(`Unknown padding parameter: ${t}`);f={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},m=Math.ceil((e-u+1)/o),g=Math.ceil((n-l+1)/s),y=Math.ceil((i-h+1)/a)}return{padInfo:f,outDepth:m,outHeight:g,outWidth:y}}(o,f,m,g,_,S,T,A,N,R,u),k=s?w*y:w;let P;return"channelsFirst"===a?P=[l,k,D,O,L]:"channelsLast"===a&&(P=[l,D,O,L,k]),{batchSize:l,dataFormat:a,inDepth:f,inHeight:m,inWidth:g,inChannels:y,outDepth:D,outHeight:O,outWidth:L,outChannels:k,padInfo:I,strideDepth:_,strideHeight:S,strideWidth:T,filterDepth:v,filterHeight:x,filterWidth:b,effectiveFilterDepth:A,effectiveFilterHeight:N,effectiveFilterWidth:R,dilationDepth:E,dilationHeight:M,dilationWidth:C,inShape:t,outShape:P,filterShape:e}}function c(t,e,n,r=1){const i=p(e,r);return Math.floor((t[0]*(n-1)-n+i)/2)}function l(t){return"number"==typeof t?[t,t,t]:2===t.length?[t[0],t[1],1]:t}function h(t){return"number"==typeof t?[t,t,t]:t}function p(t,e){return e<=1?t:t+(t-1)*(e-1)}function d(t,e){if(!e)return t;switch(e){case"round":return Math.round(t);case"ceil":return Math.ceil(t);case"floor":return Math.floor(t);default:throw new Error(`Unknown roundingMode ${e}`)}}function f(t){const[e,n,r]=l(t);return 1===e&&1===n&&1===r}function m(t,e){return f(t)||f(e)}function g(t){if("NHWC"===t)return"channelsLast";if("NCHW"===t)return"channelsFirst";throw new Error(`Unknown dataFormat ${t}`)}},173:function(t,e,n){"use strict";n.d(e,{m:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({cos_:function(t){const e=(0,o._1)(t,"x","cos"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.cos(e);return n([e]),r}),n,null,i.mc)}})},2699:function(t,e,n){"use strict";n.d(e,{f:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({cosh_:function(t){const e=(0,o._1)(t,"x","cosh"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.cosh(e);return n([e]),r}),n,null,i.TR)}})},7405:function(t,e,n){"use strict";n.d(e,{z:function(){return c}});var r=n(7097),i=n(9121),o=n(3740),s=n(3591),a=n(2668),u=n(9065);const c=(0,a.op)({cumsum_:function(t,e=0,n=!1,a=!1){const c=(0,o._1)(t,"x","cumsum"),l={x:c},h={axis:e,exclusive:n,reverse:a};return r.BV.runKernelFunc(((t,r)=>{const i=(0,s.Q3)([e],c.rank);let o=c;null!=i&&(o=(0,u.p)(c,i));const l=(0,s.sY)(1,c.rank)[0];let h=t.cumsum(o,l,n,a);if(r([c]),null!=i){const t=(0,s.LJ)(i);h=(0,u.p)(h,t)}return h}),l,null,i.iH,h)}})},9112:function(t,e,n){"use strict";n.d(e,{n:function(){return a}});var r=n(7097),i=n(9121),o=n(3740),s=n(569);const a=(0,n(2668).op)({depthToSpace_:function(t,e,n="NHWC"){const a=(0,o._1)(t,"x","depthToSpace"),u="NHWC"===n?a.shape[1]:a.shape[2],c="NHWC"===n?a.shape[2]:a.shape[3],l="NHWC"===n?a.shape[3]:a.shape[1];s.hu(u*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${u} and ${e}  for depthToSpace with input shape\n    ${a.shape}`)),s.hu(c*e>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${c} and ${e} for depthToSpace with input shape\n        ${a.shape}`)),s.hu(l%(e*e)==0,(()=>`Dimension size must be evenly divisible by ${e*e} but is ${l} for depthToSpace with input shape ${a.shape}`));const h={x:a},p={blockSize:e,dataFormat:n};return r.BV.runKernelFunc((t=>t.depthToSpace(a,e,n)),h,null,i.T0,p)}})},4718:function(t,e,n){"use strict";n.d(e,{B:function(){return l}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(2582),u=n(2668),c=n(4968);const l=(0,u.op)({depthwiseConv2d_:function(t,e,n,u,l="NHWC",h=[1,1],p){const d=(0,o._1)(t,"x","depthwiseConv2d"),f=(0,o._1)(e,"filter","depthwiseConv2d");let m=d,g=!1;3===d.rank&&(g=!0,m=(0,c.X)(d,[1,d.shape[0],d.shape[1],d.shape[2]])),s.hu(4===m.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${m.rank}.`)),s.hu(4===f.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${f.rank}.`)),s.hu(m.shape[3]===f.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${m.shape[3]}) must match the inChannels dimension in filter ${f.shape[2]}.`)),null!=p&&s.hu(s.GN(u),(()=>`Error in depthwiseConv2d: pad must be an integer when using, dimRoundingMode ${p} but got pad ${u}.`));const y={x:m,filter:f},v={strides:n,pad:u,dataFormat:l,dilations:h,dimRoundingMode:p},x=r.BV.runKernelFunc(((t,e)=>{null==h&&(h=[1,1]),s.hu(a.jT(n,h),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${h}'`));const r=a.Ix(m.shape,f.shape,n,h,u,p,!0),i=t.depthwiseConv2D(m,f,r);return e([m,f]),i}),y,null,i.ci,v);return g?(0,c.X)(x,[x.shape[1],x.shape[2],x.shape[3]]):x}})},8098:function(t,e,n){"use strict";n.d(e,{z:function(){return u}});var r=n(7097),i=n(9121),o=n(2582),s=n(2668),a=n(4968);const u=(0,s.op)({depthwiseConv2dNativeBackpropFilter_:function(t,e,n,s,u,c=[1,1],l){let h=t;3===t.rank&&(h=(0,a.X)(t,[1,t.shape[0],t.shape[1],t.shape[2]]));let p=e;3===p.rank&&(p=(0,a.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const d={x:h,dy:p},f={strides:s,pad:u,dimRoundingMode:l,dilations:c,filterShape:n};return r.BV.runKernelFunc((e=>{const r=o.Ix(t.shape,n,s,c,u,l,!0);return e.depthwiseConv2DDerFilter(h,p,r)}),d,null,i.sL,f)}})},4375:function(t,e,n){"use strict";n.d(e,{v:function(){return u}});var r=n(7097),i=n(9121),o=n(2582),s=n(2668),a=n(4968);const u=(0,s.op)({depthwiseConv2dNativeBackpropInput_:function(t,e,n,s,u,c=[1,1],l){let h=e,p=!1;3===e.rank&&(p=!0,h=(0,a.X)(e,[1,e.shape[0],e.shape[1],e.shape[2]]));const d={dy:h,filter:n},f={strides:s,pad:u,dimRoundingMode:l,dilations:c,inputShape:t},m=r.BV.runKernelFunc((e=>{const r=o.Ix(t,n.shape,s,c,u,l,!0);return e.depthwiseConv2DDerInput(h,n,r)}),d,null,i.y7,f);return p?(0,a.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},557:function(t,e,n){"use strict";n.d(e,{W:function(){return c}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(2668),u=n(4968);const c=(0,a.op)({dilation2d_:function(t,e,n,a,c=[1,1],l="NHWC"){const h=(0,o._1)(t,"x","dilation2d"),p=(0,o._1)(e,"filter","dilation2d");s.hu(3===h.rank||4===h.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${h.rank}.`)),s.hu(3===p.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${p.rank}.`)),s.hu("NHWC"===l,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${l}`));let d=h,f=!1;3===h.rank&&(d=(0,u.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]]),f=!0);const m={x:d,filter:p},g={strides:n,pad:a,dilations:c},y=r.BV.runKernel(i.p4,m,g);return f?(0,u.X)(y,[y.shape[1],y.shape[2],y.shape[3]]):y}})},1274:function(t,e,n){"use strict";n.d(e,{h:function(){return u}});var r=n(7097),i=n(9121),o=n(747),s=n(3740),a=n(9165);const u=(0,n(2668).op)({div_:function(t,e){let n=(0,s._1)(t,"a","div"),u=(0,s._1)(e,"b","div");if([n,u]=(0,o.T_)(n,u),"int32"===n.dtype&&"int32"===u.dtype)return(0,a.q)(n,u);const c={a:n,b:u};return r.BV.runKernelFunc(((t,e)=>{const r=t.realDivide(n,u);return e([n,u]),r}),c,null,i.ZC,{})}})},9322:function(t,e,n){"use strict";n.d(e,{N:function(){return l}});var r=n(747),i=n(3740),o=n(1274),s=n(6477),a=n(2668),u=n(5912),c=n(6577);const l=(0,a.op)({divNoNan_:function(t,e){let n=(0,i._1)(t,"a","div"),a=(0,i._1)(e,"b","div");[n,a]=(0,r.T_)(n,a);const l=(0,o.h)(n,a),h=(0,c.P)(l),p=(0,s.D)(a,h);return(0,u.a)(p,h,l)}})},3233:function(t,e,n){"use strict";n.d(e,{p:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({elu_:function(t){const e=(0,o._1)(t,"x","elu"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.elu(e);return n([r]),r}),n,null,i.SX)}})},6477:function(t,e,n){"use strict";n.d(e,{D:function(){return u}});var r=n(7097),i=n(9121),o=n(747),s=n(3740),a=n(2200);const u=(0,n(2668).op)({equal_:function(t,e){let n=(0,s._1)(t,"a","equal"),u=(0,s._1)(e,"b","equal");[n,u]=(0,o.T_)(n,u),(0,a.$N)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernelFunc((t=>t.equal(n,u)),c,null,i.hd)}})},4650:function(t,e,n){"use strict";n.d(e,{q:function(){return u}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(2271);const u=(0,n(2668).op)({erf_:function(t){let e=(0,o._1)(t,"x","erf");s.hu("int32"===e.dtype||"float32"===e.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===e.dtype&&(e=(0,a.p)(e,"float32"));const n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.erf(e);return n([e]),r}),n,null,i.Om)}})},4842:function(t,e,n){"use strict";n.d(e,{Q:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({exp_:function(t){const e=(0,o._1)(t,"x","exp"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.exp(e);return n([r]),r}),n,null,i.NE)}})},1300:function(t,e,n){"use strict";n.d(e,{d:function(){return a}});var r=n(3740),i=n(569),o=n(2668),s=n(4968);const a=(0,o.op)({expandDims_:function(t,e=0){const n=(0,r._1)(t,"x","expandDims",null);i.hu(e<=n.rank,(()=>"Axis must be <= rank of the tensor"));const o=n.shape.slice();return e<0&&(i.hu(-(n.rank+1)<=e,(()=>`Axis must be in the interval [${-(n.rank+1)}, ${n.rank}]`)),e=n.rank+e+1),o.splice(e,0,1),(0,s.X)(n,o)}})},3426:function(t,e,n){"use strict";n.d(e,{t:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({expm1_:function(t){const e=(0,o._1)(t,"x","expm1"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.expm1(e);return n([e]),r}),n,null,i.Y0)}})},4006:function(t,e,n){"use strict";n.d(e,{h:function(){return o}});var r=n(7097),i=n(9121);function o(t,e,n){const o={shape:t,value:e,dtype:n};return r.BV.runKernelFunc((r=>r.fill(t,e,n)),{},null,i.de,o)}},6943:function(t,e,n){"use strict";n.d(e,{G:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({floor_:function(t){const e=(0,o._1)(t,"x","floor"),n={x:e};return r.BV.runKernelFunc((t=>t.floor(e)),n,null,i.OR)}})},9165:function(t,e,n){"use strict";n.d(e,{q:function(){return a}});var r=n(7097),i=n(9121),o=n(747),s=n(3740);const a=(0,n(2668).op)({floorDiv_:function(t,e){let n=(0,s._1)(t,"a","floorDiv"),a=(0,s._1)(e,"b","floorDiv");[n,a]=(0,o.T_)(n,a);const u={a:n,b:a};return r.BV.runKernelFunc(((t,e)=>{const r=t.floorDiv(n,a);return e([n,a]),r}),u,null,i.je)}})},9323:function(t,e,n){"use strict";n.d(e,{Fr:function(){return p},pf:function(){return d},QH:function(){return f},uy:function(){return m}});var r=n(2200),i=n(3233),o=n(4841),s=n(8151),a=n(7409),u=n(3582),c=n(4968),l=n(1901),h=n(5475);function p(t,e,n){if(null==n||"linear"===n)return t;if("relu"===n)return(0,o.d)(t,(0,l.N)(e));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function d(t,e){let n=e;const i=r.RR(t.shape,e.shape);return i.length>0&&(n=(0,h.S)(n,i)),(0,c.X)(n,t.shape)}function f(t,e,n){if("linear"===e)return t;if("relu"===e)return(0,a.U)(t);if("elu"===e)return(0,i.p)(t);if("relu6"===e)return(0,u.b)(t);if("prelu"===e)return(0,s.A)(t,n);throw new Error(`Unknown fused activation ${e}.`)}const m=(t,e)=>!(t>0)||"linear"===e},4926:function(t,e,n){"use strict";n.d(e,{I:function(){return l}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(2668),u=n(4968),c=n(4931);const l=(0,a.op)({gather_:function(t,e,n=0){const a=(0,o._1)(t,"x","gather"),l=(0,o._1)(e,"indices","gather","int32"),h={x:a,indices:l},p={axis:n};return r.BV.runKernelFunc(((t,e)=>{const r=(0,s.EC)(n,a.shape)[0],i=(0,c.collectGatherOpShapeInfo)(a,l,r),o=t.gather(a,(0,u.X)(l,[l.size]),r);return e([a,l]),(0,u.X)(o,i.outputShape)}),h,null,i.qi,p)}})},636:function(t,e,n){"use strict";n.d(e,{p:function(){return u}});var r=n(7097),i=n(9121),o=n(747),s=n(3740),a=n(2200);const u=(0,n(2668).op)({greater_:function(t,e){let n=(0,s._1)(t,"a","greater"),u=(0,s._1)(e,"b","greater");[n,u]=(0,o.T_)(n,u),(0,a.$N)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernelFunc((t=>t.greater(n,u)),c,null,i.iZ)}})},7630:function(t,e,n){"use strict";n.d(e,{b:function(){return u}});var r=n(7097),i=n(9121),o=n(747),s=n(3740),a=n(2200);const u=(0,n(2668).op)({greaterEqual_:function(t,e){let n=(0,s._1)(t,"a","greaterEqual"),u=(0,s._1)(e,"b","greaterEqual");[n,u]=(0,o.T_)(n,u),(0,a.$N)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernelFunc(((t,e)=>{const r=t.greaterEqual(n,u);return e([n,u]),r}),c,null,i.Ac)}})},4386:function(t,e,n){"use strict";n.d(e,{a:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({imag_:function(t){const e=(0,o._1)(t,"input","imag"),n={input:e};return r.BV.runKernelFunc((t=>t.imag(e)),n,null,i.J_)}})},3305:function(t,e,n){"use strict";n.d(e,{I:function(){return c}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(2668),u=n(4968);const c=(0,a.op)({resizeBilinear_:function(t,e,n=!1){const a=(0,o._1)(t,"images","resizeBilinear");s.hu(3===a.rank||4===a.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${a.rank}.`)),s.hu(2===e.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${e}.`));let c=a,l=!1;3===a.rank&&(l=!0,c=(0,u.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[h,p]=e,d={images:c},f={alignCorners:n,size:e},m=r.BV.runKernelFunc(((t,e)=>(e([c]),t.resizeBilinear(c,h,p,n))),d,null,i._Y,f);return l?(0,u.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},5098:function(t,e,n){"use strict";n.d(e,{j:function(){return c}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(2668),u=n(4968);const c=(0,a.op)({resizeNearestNeighbor_:function(t,e,n=!1){const a=(0,o._1)(t,"images","resizeNearestNeighbor");s.hu(3===a.rank||4===a.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${a.rank}.`)),s.hu(2===e.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${e}.`)),s.hu("float32"===a.dtype||"int32"===a.dtype,(()=>"`images` must have `int32` or `float32` as dtype"));let c=a,l=!1;3===a.rank&&(l=!0,c=(0,u.X)(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const[h,p]=e,d={images:c},f={alignCorners:n,size:e},m=r.BV.runKernelFunc(((t,e)=>(e([c]),t.resizeNearestNeighbor(c,h,p,n))),d,null,i.dp,f);return l?(0,u.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},9133:function(t,e,n){"use strict";n.d(e,{h:function(){return u}});var r=n(3740),i=n(632),o=n(4841),s=n(2668),a=n(9494);const u=(0,s.op)({leakyRelu_:function(t,e=.2){const n=(0,r._1)(t,"x","leakyRelu");return(0,i.g)((0,o.d)((0,a.i)(e),n),n)}})},6573:function(t,e,n){"use strict";n.d(e,{d:function(){return u}});var r=n(7097),i=n(9121),o=n(747),s=n(3740),a=n(2200);const u=(0,n(2668).op)({less_:function(t,e){let n=(0,s._1)(t,"a","less"),u=(0,s._1)(e,"b","less");[n,u]=(0,o.T_)(n,u),(0,a.$N)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernelFunc((t=>t.less(n,u)),c,null,i.vt)}})},624:function(t,e,n){"use strict";n.d(e,{z:function(){return u}});var r=n(7097),i=n(9121),o=n(747),s=n(3740),a=n(2200);const u=(0,n(2668).op)({lessEqual_:function(t,e){let n=(0,s._1)(t,"a","lessEqual"),u=(0,s._1)(e,"b","lessEqual");[n,u]=(0,o.T_)(n,u),(0,a.$N)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernelFunc(((t,e)=>{const r=t.lessEqual(n,u);return e([n,u]),r}),c,null,i.CA)}})},9648:function(t,e,n){"use strict";n.d(e,{G:function(){return c}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(2668),u=n(4968);const c=(0,a.op)({localResponseNormalization_:function(t,e=5,n=1,a=1,c=.5){const l=(0,o._1)(t,"x","localResponseNormalization");s.hu(4===l.rank||3===l.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${l.rank}.`)),s.hu(s.GN(e),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${e}.`));let h=l,p=!1;3===l.rank&&(p=!0,h=(0,u.X)(l,[1,l.shape[0],l.shape[1],l.shape[2]]));const d={x:h},f={depthRadius:e,bias:n,alpha:a,beta:c},m=r.BV.runKernelFunc(((t,r)=>{const i=t.localResponseNormalization4D(h,e,n,a,c);return r([h,i]),i}),d,null,i.eZ,f);return p?(0,u.X)(m,[m.shape[1],m.shape[2],m.shape[3]]):m}})},2597:function(t,e,n){"use strict";n.d(e,{c:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({log_:function(t){const e=(0,o._1)(t,"x","log"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.log(e);return n([e]),r}),n,null,i.Zb)}})},7474:function(t,e,n){"use strict";n.d(e,{K:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({log1p_:function(t){const e=(0,o._1)(t,"x","log1p"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.log1p(e);return n([e]),r}),n,null,i.kU)}})},1510:function(t,e,n){"use strict";n.d(e,{C:function(){return d}});var r=n(7097),i=n(9121),o=n(3740),s=n(2271),a=n(4842),u=n(2597),c=n(3307),l=n(2668),h=n(827),p=n(5475);const d=(0,l.op)({logSoftmax_:function(t,e=-1){const n=(0,o._1)(t,"logits","logSoftmax");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${e}`);const l={logits:n},d={axis:e};return r.BV.runKernelFunc(((n,r)=>{const i=(0,c.F)(t,e,!0),o=(0,h.l)(t,i),l=(0,h.l)((0,s.p)(o,"float32"),(0,u.c)((0,p.S)((0,a.Q)(o),e,!0)));return r([l]),l}),l,null,i.qC,d)}})},1391:function(t,e,n){"use strict";n.d(e,{l:function(){return f}});var r=n(3740),i=n(569),o=n(6407),s=n(3591),a=n(4842),u=n(2597),c=n(3307),l=n(2668),h=n(4968),p=n(827),d=n(5475);const f=(0,l.op)({logSumExp_:function(t,e=null,n=!1){const l=(0,r._1)(t,"x","logSumExp"),f=(0,i.EC)(e,l.shape),m=(0,c.F)(l,f,!0),g=(0,p.l)(l,m),y=(0,a.Q)(g),v=(0,d.S)(y,f),x=(0,u.c)(v),b=(0,o.I)((0,h.X)(m,x.shape),x);if(n){const t=(0,s.rv)(b.shape,f);return(0,h.X)(b,t)}return b}})},2856:function(t,e,n){"use strict";n.d(e,{H:function(){return a}});var r=n(7097),i=n(9121),o=n(3740),s=n(2200);const a=(0,n(2668).op)({logicalAnd_:function(t,e){const n=(0,o._1)(t,"a","logicalAnd","bool"),a=(0,o._1)(e,"b","logicalAnd","bool");(0,s.$N)(n.shape,a.shape);const u={a:n,b:a};return r.BV.runKernelFunc((t=>t.logicalAnd(n,a)),u,null,i.PY)}})},8651:function(t,e,n){"use strict";n.d(e,{h:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({logicalNot_:function(t){const e=(0,o._1)(t,"x","logicalNot","bool"),n={x:e};return r.BV.runKernelFunc((t=>t.logicalNot(e)),n,null,i.Vf)}})},5750:function(t,e,n){"use strict";n.d(e,{K:function(){return a}});var r=n(7097),i=n(9121),o=n(3740),s=n(2200);const a=(0,n(2668).op)({logicalOr_:function(t,e){const n=(0,o._1)(t,"a","logicalOr","bool"),a=(0,o._1)(e,"b","logicalOr","bool");(0,s.$N)(n.shape,a.shape);const u={a:n,b:a};return r.BV.runKernelFunc((t=>t.logicalOr(n,a)),u,null,i.MZ)}})},8687:function(t,e,n){"use strict";n.d(e,{O:function(){return l}});var r=n(7097),i=n(9121),o=n(747),s=n(3740),a=n(569),u=n(2668),c=n(4968);const l=(0,u.op)({matMul_:function(t,e,n=!1,u=!1){let l=(0,s._1)(t,"a","matMul"),h=(0,s._1)(e,"b","matMul");[l,h]=(0,o.T_)(l,h);const p={a:l,b:h},d={transposeA:n,transposeB:u};return r.BV.runKernelFunc(((t,e)=>{e([l,h]);const r=n?l.shape[l.rank-2]:l.shape[l.rank-1],i=u?h.shape[h.rank-1]:h.shape[h.rank-2],o=n?l.shape[l.rank-1]:l.shape[l.rank-2],s=u?h.shape[h.rank-2]:h.shape[h.rank-1],p=l.shape.slice(0,-2),d=h.shape.slice(0,-2),f=a.NA(p),m=a.NA(d),g=f===m||1===f||1===m;a.hu(l.rank>=2&&h.rank>=2&&g,(()=>`Error in matMul: the input batch dimensions must either be the same or at least one input batch dimension must be 1. Got input batch dimensions of (${p}) and (${d}).`)),a.hu(r===i,(()=>`Error in matMul: inner shapes (${r}) and (${i}) of Tensors with shapes ${l.shape} and ${h.shape} and transposeA=${n} and transposeB=${u} must match.`));const y=(f>m?p:d).concat([o,s]),v=n?(0,c.X)(l,[f,r,o]):(0,c.X)(l,[f,o,r]),x=u?(0,c.X)(h,[m,s,i]):(0,c.X)(h,[m,i,s]),b=t.batchMatMul(v,x,n,u);return(0,c.X)(b,y)}),p,null,i.XL,d)}})},3307:function(t,e,n){"use strict";n.d(e,{F:function(){return h}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(3591),u=n(2668),c=n(4968),l=n(9065);const h=(0,u.op)({max_:function(t,e=null,n=!1){const u=(0,o._1)(t,"x","max"),h={x:u},p={reductionIndices:e,keepDims:n};return r.BV.runKernelFunc(((t,r)=>{let i=s.EC(e,u.shape);const o=a.Q3(i,u.rank);let h=u;null!=o&&(h=(0,l.p)(u,o),i=a.sY(i.length,h.rank));const p=t.max(h,i);null!=o&&h.dispose();let d=p;if(n){const t=a.rv(d.shape,s.EC(e,u.shape));d=(0,c.X)(d,t),p.dispose()}return r([u,d]),d}),h,null,i.Yo,p)}})},1174:function(t,e,n){"use strict";n.d(e,{_:function(){return l}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(2582),u=n(2668),c=n(4968);const l=(0,u.op)({maxPool_:function(t,e,n,u,l){const h=(0,o._1)(t,"x","maxPool");let p=h,d=!1;3===h.rank&&(d=!0,p=(0,c.X)(h,[1,h.shape[0],h.shape[1],h.shape[2]])),s.hu(4===p.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${p.rank}.`)),s.hu(a.jT(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),null!=l&&s.hu(s.GN(u),(()=>`Error in maxPool: pad must be an integer when using, dimRoundingMode ${l} but got pad ${u}.`));const f={x:p},m={filterSize:e,strides:n,pad:u,dimRoundingMode:l},g=r.BV.runKernelFunc(((t,r)=>{const i=a.Xw(p.shape,e,n,1,u,l);let o;return o=1===i.filterWidth&&1===i.filterHeight&&s.cO(i.inShape,i.outShape)?p.clone():t.maxPool(p,i),r([p,o]),o}),f,null,i.mT,m);return d?(0,c.X)(g,[g.shape[1],g.shape[2],g.shape[3]]):g}})},632:function(t,e,n){"use strict";n.d(e,{g:function(){return c}});var r=n(7097),i=n(9121),o=n(747),s=n(3740),a=n(2200),u=n(2271);const c=(0,n(2668).op)({maximum_:function(t,e){let n=(0,s._1)(t,"a","maximum"),c=(0,s._1)(e,"b","maximum");[n,c]=(0,o.T_)(n,c),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),c=(0,u.p)(c,"int32")),(0,a.$N)(n.shape,c.shape);const l={a:n,b:c};return r.BV.runKernelFunc(((t,e)=>{const r=t.maximum(n,c);return e([n,c]),r}),l,null,i.BM)}})},5130:function(t,e,n){"use strict";n.d(e,{J:function(){return y}});var r=n(7097),i=n(633),o=n(9121),s=n(3740),a=n(569),u=n(3591),c=n(2271),l=n(1274),h=n(4841),p=n(4917),d=n(2668),f=n(4968),m=n(9494),g=n(5475);const y=(0,d.op)({mean_:function(t,e=null,n=!1){const d=(0,s._1)(t,"x","mean"),y=(0,a.EC)(e,d.shape),v=(0,u.kz)(d.shape,y)[1],x=(0,a.NA)(v),b={x:d},w={axis:e,keepDims:n},_=()=>{const t=(0,m.i)(x),r=t.dtype===d.dtype?d:(0,c.p)(d,t.dtype),i=(0,l.h)(r,t);return(0,g.S)(i,e,n)};return(0,i.cb)((t=>({value:r.BV.runKernelFunc(_,b,null,o.q2,w),gradFunc:e=>{const n=t.shape.slice();y.forEach((t=>{n[t]=1}));const r=(0,f.X)(e,n);return(0,l.h)((0,h.d)(r,(0,p.i)(t.shape,"float32")),x)}})))(d)}})},5735:function(t,e,n){"use strict";n.d(e,{V:function(){return h}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(3591),u=n(2668),c=n(4968),l=n(9065);const h=(0,u.op)({min_:function(t,e=null,n=!1){const u=(0,o._1)(t,"x","min"),h={x:u},p={axis:e,keepDims:n};return r.BV.runKernelFunc(((t,r)=>{const i=(0,s.EC)(e,u.shape);let o=i;const h=a.Q3(o,u.rank);let p=u;null!=h&&(p=(0,l.p)(u,h),o=a.sY(o.length,u.rank));const d=t.min(p,o);null!=h&&p.dispose();let f=d;if(n){const t=a.rv(f.shape,i);f=(0,c.X)(d,t),d.dispose()}return r([u,f]),f}),h,null,i.c1,p)}})},4513:function(t,e,n){"use strict";n.d(e,{L:function(){return c}});var r=n(7097),i=n(9121),o=n(747),s=n(3740),a=n(2200),u=n(2271);const c=(0,n(2668).op)({minimum_:function(t,e){let n=(0,s._1)(t,"a","minimum"),c=(0,s._1)(e,"b","minimum");[n,c]=(0,o.T_)(n,c),"bool"===n.dtype&&(n=(0,u.p)(n,"int32"),c=(0,u.p)(c,"int32")),(0,a.$N)(n.shape,c.shape);const l={a:n,b:c};return r.BV.runKernelFunc(((t,e)=>{const r=t.minimum(n,c);return e([n,c]),r}),l,null,i.q8)}})},1483:function(t,e,n){"use strict";n.d(e,{V:function(){return a}});var r=n(7097),i=n(9121),o=n(3740),s=n(569);const a=(0,n(2668).op)({mirrorPad_:function(t,e,n){s.hu("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const a=(0,o._1)(t,"x","mirrorPad");if(0===a.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");s.hu(e.length===a.rank,(()=>`Padding doesn't match input. Must be ${a.rank}. Got ${e.length}.`));const u="reflect"===n?1:0;for(let t=0;t<a.rank;t++)s.hu(2===e[t].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),s.hu(e[t][0]>=0&&e[t][0]<=a.shape[t]-u&&e[t][1]>=0&&e[t][1]<=a.shape[t]-u,(()=>`Padding in dimension ${t} cannot be greater than or equal to ${a.shape[t]-u} or less than 0 for input of shape ${a.shape}`));const c={paddings:e,mode:n},l={x:a};return r.BV.runKernel(i.jQ,l,c)}})},5228:function(t,e,n){"use strict";n.d(e,{w:function(){return a}});var r=n(7097),i=n(9121),o=n(747),s=n(3740);const a=(0,n(2668).op)({mod_:function(t,e){let n=(0,s._1)(t,"a","mod"),a=(0,s._1)(e,"b","mod");[n,a]=(0,o.T_)(n,a);const u={a:n,b:a};return r.BV.runKernelFunc(((t,e)=>{const r=t.mod(n,a);return e([n,a]),r}),u,null,i.Vb)}})},4841:function(t,e,n){"use strict";n.d(e,{d:function(){return a}});var r=n(7097),i=n(9121),o=n(747),s=n(3740);const a=(0,n(2668).op)({mul_:function(t,e){let n=(0,s._1)(t,"a","mul"),a=(0,s._1)(e,"b","mul");[n,a]=(0,o.T_)(n,a);const u={a:n,b:a};return r.BV.runKernelFunc(((t,e)=>{const r=t.multiply(n,a);return e([n,a]),r}),u,null,i.wY)}})},7370:function(t,e,n){"use strict";n.d(e,{W:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({neg_:function(t){const e=(0,o._1)(t,"x","neg"),n={x:e};return r.BV.runKernelFunc((t=>t.neg(e)),n,null,i.L0)}})},3561:function(t,e,n){"use strict";n.d(e,{K:function(){return y}});var r=n(3740),i=n(569),o=n(6235),s=n(3591),a=n(3307),u=n(5735),c=n(2668),l=n(3453),h=n(4968),p=n(9494),d=n(3261),f=n(248),m=n(5475);function g(t,e,n=null){if(0===t.rank)return(0,o.W)(t);if(1!==t.rank&&null===n)return g((0,h.X)(t,[-1]),e,n);if(1===t.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===e)return(0,m.S)((0,o.W)(t),n);if(e===1/0)return(0,a.F)((0,o.W)(t),n);if(e===-1/0)return(0,u.V)((0,o.W)(t),n);if("euclidean"===e||2===e)return(0,d._)((0,m.S)((0,l.s)((0,o.W)(t),(0,p.i)(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}if(Array.isArray(n)&&2===n.length){if(1===e)return(0,a.F)((0,m.S)((0,o.W)(t),n[0]),n[1]-1);if(e===1/0)return(0,a.F)((0,m.S)((0,o.W)(t),n[1]),n[0]);if(e===-1/0)return(0,u.V)((0,m.S)((0,o.W)(t),n[1]),n[0]);if("fro"===e||"euclidean"===e)return(0,d._)((0,m.S)((0,f.h)(t),n));throw new Error(`Error in norm: invalid ord value: ${e}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const y=(0,c.op)({norm_:function(t,e="euclidean",n=null,o=!1){const a=g(t=(0,r._1)(t,"x","norm"),e,n);let u=a.shape;if(o){const e=(0,i.EC)(n,t.shape);u=s.rv(a.shape,e)}return(0,h.X)(a,u)}})},6500:function(t,e,n){"use strict";n.d(e,{Q:function(){return u}});var r=n(7097),i=n(9121),o=n(747),s=n(3740),a=n(2200);const u=(0,n(2668).op)({notEqual_:function(t,e){let n=(0,s._1)(t,"a","notEqual"),u=(0,s._1)(e,"b","notEqual");[n,u]=(0,o.T_)(n,u),(0,a.$N)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernelFunc((t=>t.notEqual(n,u)),c,null,i.yQ)}})},6708:function(t,e,n){"use strict";n.d(e,{l:function(){return u}});var r=n(7097),i=n(9121),o=n(3740),s=n(2668),a=n(4968);const u=(0,s.op)({oneHot_:function(t,e,n=1,s=0){if(e<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${e}`);const u=(0,o._1)(t,"indices","oneHot","int32"),c=[...u.shape,e],l={indices:u},h={depth:e,onValue:n,offValue:s};return r.BV.runKernelFunc(((t,r)=>(r([u]),(0,a.X)(t.oneHot((0,a.X)(u,[u.size]),e,n,s),c))),l,null,i.we,h)}})},4917:function(t,e,n){"use strict";n.d(e,{i:function(){return a}});var r=n(7097),i=n(569),o=n(1661),s=n(9640);function a(t,e="float32"){if("complex64"===e){const e=a(t,"float32"),n=(0,s.l)(t,"float32");return(0,o.P)(e,n)}const n=(0,i.p8)((0,i.NA)(t),e);return r.BV.makeTensor(n,t,e)}},7846:function(t,e,n){"use strict";n.d(e,{J:function(){return h}});var r=n(7097),i=n(9121),o=n(3740),s=n(1661),a=n(4386),u=n(2668),c=n(766),l=n(6577);const h=(0,u.op)({onesLike_:function(t){const e=(0,o._1)(t,"x","onesLike"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{if("complex64"===e.dtype){const t=h((0,c.k)(e)),n=(0,l.P)((0,a.a)(e));return(0,s.P)(t,n)}return t.onesLike(e)}),n,null,i.qW)}})},2668:function(t,e,n){"use strict";n.d(e,{op:function(){return o}});var r=n(7097),i=n(569);function o(t){const e=Object.keys(t);if(1!==e.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${e.length} keys.`);let n=e[0];const o=t[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+="__op";const s=(...t)=>{r.BV.startScope(n);try{const e=o(...t);return(0,i.tI)(e)&&console.error("Cannot return a Promise inside of tidy."),r.BV.endScope(e),e}catch(t){throw r.BV.endScope(null),t}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}},5410:function(t,e,n){"use strict";n.d(e,{IHx:function(){return r.I},f3b:function(){return i.f},d9v:function(){return o.d},zoF:function(){return s.z},Izb:function(){return u},hiC:function(){return c.h},BHj:function(){return At},Fp7:function(){return l.F},dC7:function(){return h.d},w6H:function(){return p.w},XLQ:function(){return d.X},iD$:function(){return f.i},XD2:function(){return m.X},tPi:function(){return g.t},XAC:function(){return y.X},knu:function(){return v.k},luU:function(){return x.l},XeE:function(){return b.X},RRF:function(){return w.R},odF:function(){return E},p4s:function(){return A.p},HHK:function(){return M.H},lls:function(){return C.l}});var r=n(6407),i=n(2657),o=n(8723),s=n(6884),a=n(2668);const u=(0,a.op)({concat2d_:function(t,e){return(0,s.z)(t,e)}});var c=n(1274),l=n(3307),h=n(4841),p=n(7245),d=n(4968),f=n(9494),m=n(625),g=n(2676),y=n(682),v=n(2991),x=n(827),b=n(701),w=n(6092),_=n(3740),S=n(569),T=n(7852);function E(t,e,n){if((0,S.Cq)(t),null!=e&&2!==e.length)throw new Error("tensor2d() requires shape to have two numbers");const r=(0,_.C)(t,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==e)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return(0,T.H)(t,e,r,n)}var M=n(4136),C=n(9640),A=n(9065),N=n(3710),R=n(7020),I=n(8447),D=n(4415);function O(t,e,n){const r=1-t%2,i=new Float32Array(t);for(let o=0;o<t;++o){const s=2*Math.PI*o/(t+r-1);i[o]=e-n*Math.cos(s)}return(0,w.R)(i,"float32")}(0,a.op)({hammingWindow_:function(t){return O(t,.54,.46)}});const L=(0,a.op)({hannWindow_:function(t){return O(t,.5,.5)}});var k=n(4006);const P=(0,a.op)({frame_:function(t,e,n,r=!1,i=0){let o=0;const a=[];for(;o+e<=t.size;)a.push((0,g.t)(t,o,e)),o+=n;if(r)for(;o<t.size;){const r=o+e-t.size,u=(0,s.z)([(0,g.t)(t,o,e-r),(0,k.h)([r],i)]);a.push(u),o+=n}return 0===a.length?E([],[0,e]):(0,d.X)((0,s.z)(a),[a.length,e])}});(0,a.op)({stft_:function(t,e,n,r,i=L){var o;null==r&&(o=e,r=Math.floor(Math.pow(2,Math.ceil(Math.log(o)/Math.log(2)))));const a=P(t,e,n),u=(0,h.d)(a,i(e)),c=[];for(let t=0;t<a.shape[0];t++)c.push((0,N.Q)((0,g.t)(u,[t,0],[1,e]),r));return(0,s.z)(c)}});var $=n(7097),B=n(9121);const F=(0,a.op)({cropAndResize_:function(t,e,n,r,i,o){const s=(0,_._1)(t,"image","cropAndResize"),a=(0,_._1)(e,"boxes","cropAndResize","float32"),u=(0,_._1)(n,"boxInd","cropAndResize","int32");i=i||"bilinear",o=o||0;const c=a.shape[0];S.hu(4===s.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${s.rank}.`)),S.hu(2===a.rank&&4===a.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${c},4] but had shape ${a.shape}.`)),S.hu(1===u.rank&&u.shape[0]===c,(()=>`Error in cropAndResize: boxInd must be have size [${c}] but had shape ${a.shape}.`)),S.hu(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),S.hu(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),S.hu("bilinear"===i||"nearest"===i,(()=>`method must be bilinear or nearest, but was ${i}`));const l={image:s,boxes:a,boxInd:u},h={method:i,extrapolationValue:o,cropSize:r};return $.BV.runKernelFunc((t=>t.cropAndResize(s,a,u,r,i,o)),l,null,B.Vc,h)}}),U=(0,a.op)({flipLeftRight_:function(t){const e=(0,_._1)(t,"image","flipLeftRight","float32");S.hu(4===e.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${e.rank}.`));const n={image:e};return $.BV.runKernel(B.Uy,n,{})}}),z=(0,a.op)({rotateWithOffset_:function(t,e,n=0,r=.5){const i=(0,_._1)(t,"image","rotateWithOffset","float32");S.hu(4===i.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${i.rank}.`));const o={image:i},s={radians:e,fillValue:n,center:r};return $.BV.runKernel(B.b9,o,s)}});function V(t,e,n,r,i,o){null==r&&(r=.5),null==i&&(i=Number.NEGATIVE_INFINITY),null==o&&(o=0);const s=t.shape[0];return n=Math.min(n,s),S.hu(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),S.hu(2===t.rank,(()=>`boxes must be a 2D tensor, but was of rank '${t.rank}'`)),S.hu(4===t.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${t.shape[1]}`)),S.hu(1===e.rank,(()=>"scores must be a 1D tensor")),S.hu(e.shape[0]===s,(()=>`scores has incompatible shape with boxes. Expected ${s}, but was ${e.shape[0]}`)),S.hu(0<=o&&o<=1,(()=>`softNmsSigma must be in [0, 1], but was '${o}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:i,softNmsSigma:o}}const W=(0,a.op)({nonMaxSuppression_:function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY){const o=(0,_._1)(t,"boxes","nonMaxSuppression"),s=(0,_._1)(e,"scores","nonMaxSuppression"),a=V(o,s,n,r,i);n=a.maxOutputSize,r=a.iouThreshold,i=a.scoreThreshold;const u={maxOutputSize:n,iouThreshold:r,scoreThreshold:i};return $.BV.runKernelFunc((t=>t.nonMaxSuppression(o,s,n,r,i)),{boxes:o,scores:s},null,B.uv,u)}});var H=n(2055);const G=(0,a.op)({nonMaxSuppressionWithScore_:function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY,o=0){const s=(0,_._1)(t,"boxes","nonMaxSuppression"),a=(0,_._1)(e,"scores","nonMaxSuppression"),u=V(s,a,n,r,i,o),c={boxes:s,scores:a},l={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:i=u.scoreThreshold,softNmsSigma:o=u.softNmsSigma},h=$.BV.runKernel(B.W0,c,l);return{selectedIndices:h[0],selectedScores:h[1]}}}),j=(0,a.op)({nonMaxSuppressionPadded_:function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY,o=!1){const s=(0,_._1)(t,"boxes","nonMaxSuppression"),a=(0,_._1)(e,"scores","nonMaxSuppression"),u=V(s,a,n,r,i,null),c={boxes:s,scores:a},l={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:o},h=$.BV.runKernel(B.cy,c,l);return{selectedIndices:h[0],validOutputs:h[1]}}});var X=n(3305),q=n(5098),Y=n(7630),K=n(624),Z=n(2856),J=n(5912);(0,a.op)({bandPart_:function(t,e,n){(0,S.hu)(e%1==0,(()=>`bandPart(): numLower must be an integer, got ${e}.`)),(0,S.hu)(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=(0,_._1)(t,"a","bandPart");(0,S.hu)(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const i=r.shape,[o,s]=r.shape.slice(-2);if(!(e<=o))throw new Error(`bandPart(): numLower (${e}) must not be greater than the number of rows (${o}).`);if(!(n<=s))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${s}).`);e<0&&(e=o),n<0&&(n=s);const a=(0,d.X)((0,p.w)(0,o,1,"int32"),[-1,1]),u=(0,p.w)(0,s,1,"int32"),c=(0,x.l)(a,u),l=(0,Z.H)((0,K.z)(c,(0,f.i)(+e,"int32")),(0,Y.b)(c,(0,f.i)(-n,"int32"))),h=(0,C.l)([o,s],r.dtype);return(0,d.X)((0,v.k)((0,M.H)((0,d.X)(r,[-1,o,s])).map((t=>(0,J.a)(l,t,h)))),i)}});var Q=n(3561),tt=n(8644),et=n(9590),nt=n(5475);(0,a.op)({gramSchmidt_:function(t){let e;if(Array.isArray(t)){e=!1,(0,S.hu)(null!=t&&t.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=t[0].shape[0];for(let e=1;e<t.length;++e)(0,S.hu)(t[e].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${t[e].shape[0]} vs. ${n})`))}else e=!0,t=(0,tt.V)(t,t.shape[0],0).map((t=>(0,et.L)(t,[0])));(0,S.hu)(t.length<=t[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${t.length}) exceeds number of dimensions (${t[0].shape[0]}).`));const n=[],r=t;for(let e=0;e<t.length;++e)n.push($.BV.tidy((()=>{let t=r[e];if(e>0)for(let r=0;r<e;++r){const e=(0,h.d)((0,nt.S)((0,h.d)(n[r],t)),n[r]);t=(0,x.l)(t,e)}return(0,c.h)(t,(0,Q.K)(t,"euclidean"))})));return e?(0,v.k)(n,0):n}});var rt=n(4368),it=n(1300),ot=n(7501);const st=(0,a.op)({eye_:function(t,e,n,r="float32"){null==e&&(e=t);const o=(0,i.f)([t,e],r),s=t<=e?t:e;for(let t=0;t<s;++t)o.set(1,t,t);const a=(0,d.X)(o.toTensor(),[t,e]);if(null==n)return a;if(1===n.length)return(0,ot.G)((0,it.d)(a,0),[n[0],1,1]);if(2===n.length)return(0,ot.G)((0,it.d)((0,it.d)(a,0),0),[n[0],n[1],1,1]);if(3===n.length)return(0,ot.G)((0,it.d)((0,it.d)((0,it.d)(a,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}});var at=n(636),ut=n(8687),ct=n(7370);function lt(t,e=!1){return $.BV.tidy((()=>{(0,S.hu)(2===t.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${t.shape.length}D Tensor.`));const n=t.shape[0],r=t.shape[1];let i=st(n),a=(0,o.d)(t);const u=E([[1]],[1,1]);let l=(0,o.d)(u);const p=n>=r?r:n;for(let t=0;t<p;++t){const e=a,p=l,d=i;[l,a,i]=$.BV.tidy((()=>{const e=(0,g.t)(a,[t,t],[n-t,1]),p=(0,Q.K)(e),d=(0,g.t)(a,[t,t],[1,1]),f=(0,J.a)((0,at.p)(d,0),E([[-1]]),E([[1]])),m=(0,x.l)(d,(0,h.d)(f,p)),y=(0,c.h)(e,m);l=1===y.shape[0]?(0,o.d)(u):(0,s.z)([u,(0,g.t)(y,[1,0],[y.shape[0]-1,y.shape[1]])],0);const v=(0,ct.W)((0,c.h)((0,ut.O)(f,m),p)),b=(0,g.t)(a,[t,0],[n-t,r]),w=(0,h.d)(v,l),_=(0,A.p)(l);if(0===t)a=(0,x.l)(b,(0,ut.O)(w,(0,ut.O)(_,b)));else{const e=(0,x.l)(b,(0,ut.O)(w,(0,ut.O)(_,b)));a=(0,s.z)([(0,g.t)(a,[0,0],[t,r]),e],0)}const S=(0,A.p)(w),T=(0,g.t)(i,[0,t],[n,i.shape[1]-t]);if(0===t)i=(0,x.l)(T,(0,ut.O)((0,ut.O)(T,l),S));else{const e=(0,x.l)(T,(0,ut.O)((0,ut.O)(T,l),S));i=(0,s.z)([(0,g.t)(i,[0,0],[n,t]),e],1)}return[l,a,i]})),(0,rt.B9)([e,p,d])}return!e&&n>r&&(i=(0,g.t)(i,[0,0],[n,r]),a=(0,g.t)(a,[0,0],[r,r])),[i,a]}))}(0,a.op)({qr_:function(t,e=!1){if((0,S.hu)(t.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${t.rank}`)),2===t.rank)return lt(t,e);{const n=t.shape.slice(0,t.shape.length-2).reduce(((t,e)=>t*e)),r=(0,M.H)((0,d.X)(t,[n,t.shape[t.shape.length-2],t.shape[t.shape.length-1]]),0),i=[],o=[];return r.forEach((t=>{const[n,r]=lt(t,e);i.push(n),o.push(r)})),[(0,d.X)((0,v.k)(i,0),t.shape),(0,d.X)((0,v.k)(o,0),t.shape)]}}});var ht,pt=n(6235);!function(t){t[t.NONE=0]="NONE",t[t.MEAN=1]="MEAN",t[t.SUM=2]="SUM",t[t.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ht||(ht={}));var dt=n(2271),ft=n(5130),mt=n(6500),gt=n(4917);const yt=(0,a.op)({computeWeightedLoss_:function(t,e,n=ht.SUM_BY_NONZERO_WEIGHTS){const r=(0,_._1)(t,"losses","computeWeightedLoss");let i=null;null!=e&&(i=(0,_._1)(e,"weights","computeWeightedLoss"));const o=null==i?r:(0,h.d)(r,i);if(n===ht.NONE)return o;if(n===ht.SUM)return(0,nt.S)(o);if(n===ht.MEAN){if(null==i)return(0,ft.J)(o);{const t=r.size/i.size,e=(0,c.h)((0,nt.S)(o),(0,nt.S)(i));return t>1?(0,c.h)(e,(0,f.i)(t)):e}}if(n===ht.SUM_BY_NONZERO_WEIGHTS){if(null==i)return(0,c.h)((0,nt.S)(o),(0,f.i)(r.size));{const t=(0,h.d)(i,(0,gt.i)(r.shape)),e=(0,dt.p)((0,nt.S)((0,mt.Q)(t,(0,f.i)(0))),"float32");return(0,c.h)((0,nt.S)(o),e)}}throw Error(`Unknown reduction: ${n}`)}});(0,a.op)({absoluteDifference_:function(t,e,n,r=ht.SUM_BY_NONZERO_WEIGHTS){const i=(0,_._1)(t,"labels","absoluteDifference"),o=(0,_._1)(e,"predictions","absoluteDifference");let s=null;null!=n&&(s=(0,_._1)(n,"weights","absoluteDifference")),(0,S.k5)(i.shape,o.shape,"Error in absoluteDifference: ");const a=(0,pt.W)((0,x.l)(i,o));return yt(a,s,r)}}),(0,a.op)({cosineDistance_:function(t,e,n,r,i=ht.SUM_BY_NONZERO_WEIGHTS){const o=(0,_._1)(t,"labels","cosineDistance"),s=(0,_._1)(e,"predictions","cosineDistance");let a=null;null!=r&&(a=(0,_._1)(r,"weights","cosineDistance")),(0,S.k5)(o.shape,s.shape,"Error in cosineDistance: ");const u=(0,f.i)(1),c=(0,x.l)(u,(0,nt.S)((0,h.d)(o,s),n,!0));return yt(c,a,i)}});var vt=n(7409);(0,a.op)({hingeLoss_:function(t,e,n,r=ht.SUM_BY_NONZERO_WEIGHTS){let i=(0,_._1)(t,"labels","hingeLoss");const o=(0,_._1)(e,"predictions","hingeLoss");let s=null;null!=n&&(s=(0,_._1)(n,"weights","hingeLoss")),(0,S.k5)(i.shape,o.shape,"Error in hingeLoss: ");const a=(0,f.i)(1);i=(0,x.l)((0,h.d)((0,f.i)(2),i),a);const u=(0,vt.U)((0,x.l)(a,(0,h.d)(i,o)));return yt(u,s,r)}});var xt=n(4513),bt=n(248);(0,a.op)({huberLoss_:function(t,e,n,i=1,o=ht.SUM_BY_NONZERO_WEIGHTS){const s=(0,_._1)(t,"labels","huberLoss"),a=(0,_._1)(e,"predictions","huberLoss");let u=null;null!=n&&(u=(0,_._1)(n,"weights","huberLoss")),(0,S.k5)(s.shape,a.shape,"Error in huberLoss: ");const c=(0,f.i)(i),l=(0,pt.W)((0,x.l)(a,s)),p=(0,xt.L)(l,c),d=(0,x.l)(l,p),m=(0,r.I)((0,h.d)((0,f.i)(.5),(0,bt.h)(p)),(0,h.d)(c,d));return yt(m,u,o)}});var wt=n(2597);(0,a.op)({logLoss_:function(t,e,n,i=1e-7,o=ht.SUM_BY_NONZERO_WEIGHTS){const s=(0,_._1)(t,"labels","logLoss"),a=(0,_._1)(e,"predictions","logLoss");let u=null;null!=n&&(u=(0,_._1)(n,"weights","logLoss")),(0,S.k5)(s.shape,a.shape,"Error in logLoss: ");const c=(0,f.i)(1),l=(0,f.i)(i),p=(0,ct.W)((0,h.d)(s,(0,wt.c)((0,r.I)(a,l)))),d=(0,h.d)((0,x.l)(c,s),(0,wt.c)((0,r.I)((0,x.l)(c,a),l))),m=(0,x.l)(p,d);return yt(m,u,o)}});var _t=n(5265);(0,a.op)({meanSquaredError_:function(t,e,n,r=ht.SUM_BY_NONZERO_WEIGHTS){const i=(0,_._1)(t,"labels","meanSquaredError"),o=(0,_._1)(e,"predictions","meanSquaredError");let s=null;null!=n&&(s=(0,_._1)(n,"weights","meanSquaredError")),(0,S.k5)(i.shape,o.shape,"Error in meanSquaredError: ");const a=(0,_t.$)(i,o);return yt(a,s,r)}});var St=n(4842),Tt=n(7474);(0,a.op)({sigmoidCrossEntropy_:function(t,e,n,i=0,o=ht.SUM_BY_NONZERO_WEIGHTS){let s=(0,_._1)(t,"multiClassLabels","sigmoidCrossEntropy");const a=(0,_._1)(e,"logits","sigmoidCrossEntropy");let u=null;if(null!=n&&(u=(0,_._1)(n,"weights","sigmoidCrossEntropy")),(0,S.k5)(s.shape,a.shape,"Error in sigmoidCrossEntropy: "),i>0){const t=(0,f.i)(i),e=(0,f.i)(1),n=(0,f.i)(.5);s=(0,r.I)((0,h.d)(s,(0,x.l)(e,t)),(0,h.d)(n,t))}const c=function(t,e){const n=(0,_._1)(t,"labels","sigmoidCrossEntropyWithLogits"),i=(0,_._1)(e,"logits","sigmoidCrossEntropyWithLogits");(0,S.k5)(n.shape,i.shape,"Error in sigmoidCrossEntropyWithLogits: ");const o=(0,vt.U)(i),s=(0,h.d)(i,n),a=(0,Tt.K)((0,St.Q)((0,ct.W)((0,pt.W)(i))));return(0,r.I)((0,x.l)(o,s),a)}(s,a);return yt(c,u,o)}});var Et=n(633),Mt=n(3591),Ct=n(1391);(0,a.op)({softmaxCrossEntropy_:function(t,e,n,i=0,o=ht.SUM_BY_NONZERO_WEIGHTS){let s=(0,_._1)(t,"onehotLabels","softmaxCrossEntropy");const a=(0,_._1)(e,"logits","softmaxCrossEntropy");let u=null;if(null!=n&&(u=(0,_._1)(n,"weights","softmaxCrossEntropy")),(0,S.k5)(s.shape,a.shape,"Error in softmaxCrossEntropy: "),i>0){const t=(0,f.i)(i),e=(0,f.i)(1),n=(0,f.i)(s.shape[1]);s=(0,r.I)((0,h.d)(s,(0,x.l)(e,t)),(0,c.h)(t,n))}const l=function(t,e,n=-1){if(-1===n&&(n=e.rank-1),n!==e.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${e.rank} and dim was ${n}`);return(0,Et.cb)(((t,e,r)=>{const i=(0,Ct.l)(e,[n],!0),o=(0,x.l)((0,dt.p)(e,"float32"),i);r([t,o]);const s=(0,ct.W)((0,h.d)(o,t));return{value:(0,nt.S)(s,[n]),gradFunc:(t,e)=>{const[r,i]=e,o=(0,Mt.rv)(t.shape,[n]);return[(0,h.d)((0,d.X)(t,o),(0,x.l)((0,dt.p)(r,"float32"),(0,St.Q)(i))),(0,h.d)((0,d.X)(t,o),(0,x.l)((0,St.Q)(i),(0,dt.p)(r,"float32")))]}}}))(t,e)}(s,a);return yt(l,u,o)}}),R.k,I.S,N.Q,D.w;const At={flipLeftRight:U,resizeNearestNeighbor:q.j,resizeBilinear:X.I,rotateWithOffset:z,cropAndResize:F,nonMaxSuppression:W,nonMaxSuppressionAsync:async function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY){const o=(0,_._1)(t,"boxes","nonMaxSuppressionAsync"),s=(0,_._1)(e,"scores","nonMaxSuppressionAsync"),a=V(o,s,n,r,i);n=a.maxOutputSize,r=a.iouThreshold,i=a.scoreThreshold;const u=await Promise.all([o.data(),s.data()]),c=u[0],l=u[1],h=(0,H.GP)(c,l,n,r,i);return o!==t&&o.dispose(),s!==e&&s.dispose(),h},nonMaxSuppressionWithScore:G,nonMaxSuppressionWithScoreAsync:async function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY,o=0){const s=(0,_._1)(t,"boxes","nonMaxSuppressionAsync"),a=(0,_._1)(e,"scores","nonMaxSuppressionAsync"),u=V(s,a,n,r,i,o);n=u.maxOutputSize,r=u.iouThreshold,i=u.scoreThreshold,o=u.softNmsSigma;const c=await Promise.all([s.data(),a.data()]),l=c[0],h=c[1],p=(0,H.pA)(l,h,n,r,i,o);return s!==t&&s.dispose(),a!==e&&a.dispose(),p},nonMaxSuppressionPadded:j,nonMaxSuppressionPaddedAsync:async function(t,e,n,r=.5,i=Number.NEGATIVE_INFINITY,o=!1){const s=(0,_._1)(t,"boxes","nonMaxSuppressionAsync"),a=(0,_._1)(e,"scores","nonMaxSuppressionAsync"),u=V(s,a,n,r,i,null),c=u.maxOutputSize,l=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([s.data(),a.data()]),f=(0,H.qP)(p,d,c,l,h,o);return s!==t&&s.dispose(),a!==e&&a.dispose(),f}}},9682:function(t,e,n){"use strict";n.d(e,{v:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({pad_:function(t,e,n=0){const s=(0,o._1)(t,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const a={paddings:e,constantValue:n},u={x:s};return r.BV.runKernelFunc(((t,r)=>(r([s]),t.pad(s,e,n))),u,null,i.ly,a)}})},3453:function(t,e,n){"use strict";n.d(e,{s:function(){return a}});var r=n(7097),i=n(9121),o=n(747),s=n(3740);const a=(0,n(2668).op)({pow_:function(t,e){let n=(0,s._1)(t,"base","pow"),a=(0,s._1)(e,"exp","pow");[n,a]=(0,o.T_)(n,a);const u={a:n,b:a};return r.BV.runKernelFunc(((t,e)=>{const r=t.pow(n,a);return e([n,a,r]),r}),u,null,i.pe)}})},8151:function(t,e,n){"use strict";n.d(e,{A:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({prelu_:function(t,e){const n=(0,o._1)(t,"x","prelu"),s=(0,o._1)(e,"alpha","prelu"),a={x:n,alpha:s};return r.BV.runKernelFunc(((t,e)=>{const r=t.prelu(n,s);return e([n,s]),r}),a,null,i.o0)}})},9451:function(t,e,n){"use strict";n.d(e,{W:function(){return p}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(3591),u=n(2271),c=n(2668),l=n(4968),h=n(9065);const p=(0,c.op)({prod_:function(t,e=null,n=!1){let c=(0,o._1)(t,"x","prod");"bool"===c.dtype&&(c=(0,u.p)(c,"int32"));const p={x:c},d={axis:e,keepDims:n};return r.BV.runKernelFunc((t=>{const r=(0,s.EC)(e,c.shape),i=(0,a.Q3)(r,c.rank);let o=r,u=c;null!=i&&(u=(0,h.p)(c,i),o=(0,a.sY)(o.length,c.rank));let p=t.prod(u,o);if(n){const t=(0,a.rv)(p.shape,r);p=(0,l.X)(p,t)}return p}),p,null,i.Dl,d)}})},7245:function(t,e,n){"use strict";n.d(e,{w:function(){return u}});var r=n(7097),i=n(9121),o=n(569),s=n(6092),a=n(9640);function u(t,e,n=1,u="float32"){if(0===n)throw new Error("Cannot have a step of zero");const c={start:t,stop:e,step:n,dtype:u};return r.BV.runKernelFunc((()=>{if(t===e||t<e&&n<0||e<t&&n>1)return(0,a.l)([0],u);const r=Math.abs(Math.ceil((e-t)/n)),i=(0,o.wT)(r,u);e<t&&1===n&&(n=-1),i[0]=t;for(let t=1;t<i.length;t++)i[t]=i[t-1]+n;return(0,s.R)(i,u)}),{},null,i.e6,c)}},766:function(t,e,n){"use strict";n.d(e,{k:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({real_:function(t){const e=(0,o._1)(t,"input","real"),n={input:e};return r.BV.runKernelFunc((t=>t.real(e)),n,null,i.xJ)}})},9036:function(t,e,n){"use strict";n.d(e,{M:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({reciprocal_:function(t){const e=(0,o._1)(t,"x","reciprocal"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.reciprocal(e);return n([e]),r}),n,null,i.$H)}})},5466:function(t,e,n){"use strict";n.d(e,{g:function(){return i},A:function(){return o}});var r=n(569);const i=30;function o(t){return t<=i?t:(0,r.jP)(t,Math.floor(Math.sqrt(t)))}},7409:function(t,e,n){"use strict";n.d(e,{U:function(){return u}});var r=n(7097),i=n(9121),o=n(3740),s=n(2668),a=n(2271);const u=(0,s.op)({relu_:function(t){const e=(0,o._1)(t,"x","relu"),n={x:e};return r.BV.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?(0,a.p)(e,"int32"):t.relu(e))),n,null,i.qk)}})},3582:function(t,e,n){"use strict";n.d(e,{b:function(){return a}});var r=n(7097),i=n(9121),o=n(3740),s=n(2271);const a=(0,n(2668).op)({relu6_:function(t){const e=(0,o._1)(t,"x","relu6"),n={x:e};return r.BV.runKernelFunc(((t,n)=>(n([e]),"bool"===e.dtype?(0,s.p)(e,"int32"):t.relu6(e))),n,null,i.Sb)}})},4968:function(t,e,n){"use strict";n.d(e,{X:function(){return a}});var r=n(7097),i=n(9121),o=n(3740),s=n(569);const a=(0,n(2668).op)({reshape_:function(t,e){const n=(0,o._1)(t,"x","reshape",null),a={x:n},u={shape:e};return r.BV.runKernelFunc(((t,r)=>(e=s.JZ(e,n.size),s.hu(n.size===s.NA(e),(()=>"new shape and old shape must have the same number of elements.")),r([n]),t.reshape(n,e))),a,null,i.HZ,u)}})},7486:function(t,e,n){"use strict";n.d(e,{G:function(){return l}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(8723),u=n(2668),c=n(4968);const l=(0,u.op)({reverse_:function(t,e){const n=(0,o._1)(t,"x","reverse"),u={x:n},l={dims:e};return r.BV.runKernelFunc((t=>{const r=(0,s.EC)(e,n.shape);if(0===n.rank)return(0,a.d)(n);const i=t.reverse(n,r);return(0,c.X)(i,n.shape)}),u,null,i.mK,l)}})},7809:function(t,e,n){"use strict";n.d(e,{N:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({round_:function(t){const e=(0,o._1)(t,"x","round"),n={x:e};return r.BV.runKernelFunc((t=>t.round(e)),n,null,i.e0)}})},2634:function(t,e,n){"use strict";n.d(e,{b:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({rsqrt_:function(t){const e=(0,o._1)(t,"x","rsqrt"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.rsqrt(e);return n([e]),r}),n,null,i.bV)}})},9494:function(t,e,n){"use strict";n.d(e,{i:function(){return o}});var r=n(569),i=n(7852);function o(t,e){if(((0,r.fU)(t)&&"string"!==e||Array.isArray(t))&&"complex64"!==e)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===e&&(0,r.fU)(t)&&!(t instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return(0,i.H)(t,[],[],e)}},3028:function(t,e,n){"use strict";n.d(e,{l5:function(){return i},b0:function(){return o},SU:function(){return s}});var r=n(569);function i(t,e,n){const r=e.rank>1?e.shape[e.rank-1]:1,i=e.rank>1?e.rank-1:1,o=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${e.shape}, shape: ${t}, sliceDim: ${r}, and batchDim: ${i}.`;if(n.rank<i)throw new Error(o+` update.rank < ${i}. `);if(t.length<r+(n.rank-i))throw new Error(o+` Output shape length < ${r+(n.rank-i)}`);if(n.rank!==i+t.length-r)throw new Error(o+" update.rank != "+(i+t.length-r));for(let t=0;t<i;++t)if(n.shape[t]!==e.shape[t])throw new Error(o+` updates.shape[${t}] (${n.shape[t]}) != indices.shape[${t}] (${e.shape[t]}).`);for(let e=0;e<n.rank-i;++e)if(n.shape[e+i]!==t[e+r])throw new Error(o+` updates.shape[${e+i}] (${n.shape[e+i]}) != shape[${e+i}] (${t[e+i]})`)}function o(t,e,n){if(e.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${e.rank}.`);if(t.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${t.rank}.`);if("int32"!==e.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${e.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===e.size)throw new Error(`Indices specified for empty output. indices shape: ${e.shape}`);if(0===t.size)throw new Error(`Updates specified for empty output. updates shape: ${t.shape}`)}i(n,e,t)}function s(t,e,n){const i=e.shape.length,o=i>1?e.shape[i-1]:1,s=n.length;let a=1;for(let t=o;t<s;++t)a*=n[t];const u=o<1?1:o;return{sliceRank:o,numUpdates:(0,r.NA)(e.shape)/u,sliceSize:a,strides:[...(0,r.e3)(n.slice(0,o)),1],outputSize:(0,r.NA)(n)}}},4931:function(t,e,n){"use strict";n.r(e),n.d(e,{segOpComputeOptimalWindowSize:function(){return o},computeOutShape:function(){return s},collectGatherOpShapeInfo:function(){return a}});var r=n(569),i=n(5466);function o(t,e){let n,o=!1;for(t<=i.g?(n=t,o=!0):n=(0,r.jP)(t,Math.floor(Math.sqrt(t)));!o;)n>e||n===t?o=!0:n=(0,r.jP)(t,n+1);return n}function s(t,e,n){const r=[],i=t.length;for(let o=0;o<i;o++)o!==e?r.push(t[o]):r.push(n);return r}function a(t,e,n){const r=t.shape[n],i=[];let o=1,s=1;for(let e=0;e<n;e++)i.push(t.shape[e]),o*=t.shape[e];for(let t=0;t<e.rank;t++)i.push(e.shape[t]);for(let e=n+1;e<t.rank;e++)i.push(t.shape[e]),s*=t.shape[e];return{batchSize:o,sliceSize:s,dimSize:r,outputShape:i}}},5503:function(t,e,n){"use strict";n.d(e,{U:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({selu_:function(t){const e=(0,o._1)(t,"x","selu"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.selu(e);return n([e]),r}),n,null,i.oF)}})},625:function(t,e,n){"use strict";n.d(e,{X:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({sigmoid_:function(t){const e=(0,o._1)(t,"x","sigmoid"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.sigmoid(e);return n([r]),r}),n,null,i.a5)}})},4434:function(t,e,n){"use strict";n.d(e,{X:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({sign_:function(t){const e=(0,o._1)(t,"x","sign"),n={x:e};return r.BV.runKernelFunc((t=>t.sign(e)),n,null,i.i5)}})},9331:function(t,e,n){"use strict";n.d(e,{O:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({sin_:function(t){const e=(0,o._1)(t,"x","sin"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.sin(e);return n([e]),r}),n,null,i.RQ)}})},3254:function(t,e,n){"use strict";n.d(e,{R:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({sinh_:function(t){const e=(0,o._1)(t,"x","sinh"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.sinh(e);return n([e]),r}),n,null,i.w3)}})},2676:function(t,e,n){"use strict";n.d(e,{t:function(){return u}});var r=n(7097),i=n(9121),o=n(3740),s=n(2668),a=n(7650);const u=(0,s.op)({slice_:function(t,e,n){const s=(0,o._1)(t,"x","slice");if(0===s.rank)throw new Error("Slicing scalar is not possible");const u={x:s},c={begin:e,size:n};return r.BV.runKernelFunc(((t,r)=>{const[i,o]=a.parseSliceParams(s,e,n);return a.assertParamsValid(s,i,o),r([s]),t.slice(s,i,o)}),u,null,i.p2,c)}})},7650:function(t,e,n){"use strict";n.r(e),n.d(e,{assertParamsValid:function(){return i},maskToAxes:function(){return o},computeOutShape:function(){return s},stridesWithElidedDims:function(){return a},getNormalizedAxes:function(){return l},startIndicesWithElidedDims:function(){return h},stopIndicesWithElidedDims:function(){return p},stridesForAxis:function(){return d},startForAxis:function(){return f},stopForAxis:function(){return m},isSliceContinous:function(){return g},computeFlatOffset:function(){return y},parseSliceParams:function(){return v}});var r=n(569);function i(t,e,n){const i=t.shape.length;r.hu(i===e.length,(()=>`Error in slice${i}D: Length of begin ${e} must match the rank of the array (${i}).`)),r.hu(i===n.length,(()=>`Error in slice${i}D: Length of size ${n} must match the rank of the array (${i}).`));for(let o=0;o<i;++o)r.hu(e[o]+n[o]<=t.shape[o],(()=>`Error in slice${i}D: begin[${o}] + size[${o}] (${e[o]+n[o]}) would overflow input.shape[${o}] (${t.shape[o]})`))}function o(t){const e=[];let n=0;for(;t>0;)1&t&&e.push(n),t/=2,n++;return e}function s(t,e,n){const r=[];for(let i=0;i<t.length;i++)r[i]=Math.ceil((e[i]-t[i])/n[i]);return r}function a(t,e,n,r){const i=[...t];for(let t=i.length;t<r.length;t++)i.push(1);for(let t=0;t<n;t++)0===t?i[e]=1:(i.splice(e,0,1),i.pop());return i}function u(t,e,n){return n<=t?n:n-(e-1)}function c(t,e){const n=[];for(let r=0;r<t;r++)n.push(e+r);return n}function l(t,e,n,r,i,o,s,u,c){const l=t.length;let g=new Array(l),y=new Array(l),v=new Array(l);if(e.length&&n>0){const c=e[0],l=n+1;g=h(s,c,l,r,t),y=p(u,c,l,i,t),v=a(o,c,l,t)}else for(let e=0;e<l;e++)g[e]=f(s,r,o,t,e,c),y[e]=m(u,i,o,t,e,c),v[e]=d(o,e,c);return{begin:g,end:y,strides:v}}function h(t,e,n,r,i){const o=[...i],s=c(n,e);for(let i=0;i<o.length;i++)if(s.indexOf(i)>-1)o[i]=0;else{const s=u(e,n,i);let a=r[s];t&1<<s&&(a=0),o[i]=a}return o}function p(t,e,n,i,o){const s=[...o],a=c(n,e);for(let r=0;r<s.length;r++)if(a.indexOf(r)>-1)s[r]=Number.MAX_SAFE_INTEGER;else{const o=u(e,n,r);let a=i[o];t&1<<o&&(a=Number.MAX_SAFE_INTEGER),s[r]=a}for(let t=0;t<s.length;t++){const e=o[t];s[t]<0&&(s[t]+=e),s[t]=r.uZ(0,s[t],o[t])}return s}function d(t,e,n){let r=t[e];return(n&1<<e||null==r)&&(r=1),r}function f(t,e,n,i,o,s){let a=e[o];const u=n[o]||1;(t&1<<o||s&1<<o||null==a)&&(a=u>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const c=i[o];return a<0&&(a+=c),a=r.uZ(0,a,c-1),a}function m(t,e,n,i,o,s){let a=e[o];const u=n[o]||1;(t&1<<o||s&1<<o||null==a)&&(a=u>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const c=i[o];return a<0&&(a+=c),a=u>0?r.uZ(0,a,c):r.uZ(-1,a,c-1),a}function g(t,e,n){let r=n.length;for(let t=0;t<n.length;t++)if(n[t]>1){r=t;break}for(let i=r+1;i<n.length;i++)if(e[i]>0||n[i]!==t[i])return!1;return!0}function y(t,e){let n=t.length>0?t[t.length-1]:1;for(let r=0;r<t.length-1;r++)n+=t[r]*e[r];return n}function v(t,e,n){let i;const o=t.shape.length;let s;return i="number"==typeof e?[e,...new Array(o-1).fill(0)]:e.length<o?e.concat(new Array(o-e.length).fill(0)):e.slice(),i.forEach((t=>{r.hu(-1!==t,(()=>"slice() does not support negative begin indexing."))})),s=null==n?new Array(o).fill(-1):"number"==typeof n?[n,...new Array(o-1).fill(-1)]:n.length<o?n.concat(new Array(o-n.length).fill(-1)):n,s=s.map(((e,n)=>e>=0?e:(r.hu(-1===e,(()=>`Negative size values should be exactly -1 but got ${e} for the slice() size at index ${n}.`)),t.shape[n]-i[n]))),[i,s]}},682:function(t,e,n){"use strict";n.d(e,{X:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({softmax_:function(t,e=-1){const n=(0,o._1)(t,"logits","softmax","float32");if(-1===e&&(e=n.rank-1),e!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${e}`);const s={logits:n},a={dim:e};return r.BV.runKernelFunc(((t,r)=>{const i=t.softmax(n,e);return r([i]),i}),s,null,i.Gc,a)}})},3694:function(t,e,n){"use strict";n.d(e,{W:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({softplus_:function(t){const e=(0,o._1)(t,"x","softplus"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.softplus(e);return n([e]),r}),n,null,i.MR)}})},7918:function(t,e,n){"use strict";n.d(e,{f:function(){return a}});var r=n(7097),i=n(9121),o=n(3740),s=n(569);const a=(0,n(2668).op)({spaceToBatchND_:function(t,e,n){const a=(0,o._1)(t,"x","spaceToBatchND");s.hu(a.rank>=1+e.length,(()=>`input rank ${a.rank} should be > than [blockShape] ${e.length}`)),s.hu(n.length===e.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${e.length}`)),s.hu(a.shape.reduce(((t,r,i)=>i>0&&i<=e.length?t&&(r+n[i-1][0]+n[i-1][1])%e[i-1]==0:t),!0),(()=>`input spatial dimensions ${a.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${e.toString()}`));const u={x:a},c={blockShape:e,paddings:n};return r.BV.runKernelFunc((t=>t.spaceToBatchND(a,e,n)),u,null,i.TQ,c)}})},7020:function(t,e,n){"use strict";n.d(e,{k:function(){return s}});var r=n(7097),i=n(9121),o=n(569);const s=(0,n(2668).op)({fft_:function(t){(0,o.hu)("complex64"===t.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${t.dtype}.`));const e={input:t};return r.BV.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,i=t.as2D(r,n);return e.fft(i).reshape(t.shape)}),e,null,i.vw)}})},8447:function(t,e,n){"use strict";n.d(e,{S:function(){return u}});var r=n(7097),i=n(9121),o=n(569),s=n(2668),a=n(4968);const u=(0,s.op)({ifft_:function(t){(0,o.hu)("complex64"===t.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${t.dtype}.`));const e={input:t};return r.BV.runKernelFunc((e=>{const n=t.shape[t.shape.length-1],r=t.size/n,i=(0,a.X)(t,[r,n]),o=e.ifft(i);return(0,a.X)(o,t.shape)}),e,null,i.Qg)}})},4415:function(t,e,n){"use strict";n.d(e,{w:function(){return f}});var r=n(1661),i=n(6884),o=n(4386),s=n(4841),a=n(2668),u=n(766),c=n(4968),l=n(7486),h=n(9494),p=n(2676),d=n(8447);const f=(0,a.op)({irfft_:function(t){const e=t.shape[t.shape.length-1],n=t.size/e;let a;if(e<=2){const r=(0,c.X)(t,[n,e]);a=(0,d.S)(r)}else{const f=[n,2*(e-1)],m=(0,c.X)((0,u.k)(t),[n,e]),g=(0,c.X)((0,o.a)(t),[n,e]),y=(0,l.G)((0,p.t)(m,[0,1],[n,e-2]),1),v=(0,s.d)((0,l.G)((0,p.t)(g,[0,1],[n,e-2]),1),(0,h.i)(-1)),x=(0,i.z)([m,y],1),b=(0,i.z)([g,v],1),w=(0,c.X)((0,r.P)(x,b),[f[0],f[1]]);a=(0,d.S)(w)}if(a=(0,u.k)(a),3===t.rank&&0!==t.shape[0]){const e=a,n=t.shape[0];a=(0,c.X)(a,[n,a.shape[0]/n,a.shape[1]]),e.dispose()}return a}})},3710:function(t,e,n){"use strict";n.d(e,{Q:function(){return m}});var r=n(569),i=n(1661),o=n(6884),s=n(4386),a=n(2668),u=n(766),c=n(4968),l=n(2676),h=n(8644),p=n(9640),d=n(6577),f=n(7020);const m=(0,a.op)({rfft_:function(t,e){(0,r.hu)("float32"===t.dtype,(()=>`The dtype for rfft() must be real value but got ${t.dtype}`));let n=t.shape[t.shape.length-1];const a=t.size/n;let m;if(null!=e&&e<n){const r=t.shape.map((t=>0)),i=t.shape.map((t=>t));i[t.shape.length-1]=e,m=(0,l.t)(t,r,i),n=e}else if(null!=e&&e>n){const r=t.shape.map((t=>t));r[t.shape.length-1]=e-n,m=(0,o.z)([t,(0,p.l)(r)],t.shape.length-1),n=e}else m=t;const g=(0,d.P)(m),y=(0,c.X)((0,i.P)(m,g),[a,n]),v=(0,f.k)(y),x=Math.floor(n/2)+1,b=(0,u.k)(v),w=(0,s.a)(v),_=(0,h.V)(b,[x,n-x],b.shape.length-1),S=(0,h.V)(w,[x,n-x],w.shape.length-1),T=m.shape.slice();return T[m.shape.length-1]=x,(0,c.X)((0,i.P)(_[0],S[0]),T)}})},8644:function(t,e,n){"use strict";n.d(e,{V:function(){return c}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(2668),u=n(4099);const c=(0,a.op)({split_:function(t,e,n=0){const a=(0,o._1)(t,"x","split"),c={x:a},l={numOrSizeSplits:e,axis:n};return r.BV.runKernelFunc(((t,r)=>{const i=(0,s.EC)(n,a.shape)[0],o=(0,u.O)(a,e,i);return t.split(a,o,i)}),c,null,i.L8,l)}})},4099:function(t,e,n){"use strict";n.d(e,{O:function(){return i}});var r=n(569);function i(t,e,n=0){let i=[];if("number"==typeof e)(0,r.hu)(t.shape[n]%e==0,(()=>"Number of splits must evenly divide the axis.")),i=new Array(e).fill(t.shape[n]/e);else{const o=e.reduce(((t,e)=>(-1===e&&(t+=1),t)),0);(0,r.hu)(o<=1,(()=>"There should be only one negative value in split array."));const s=e.indexOf(-1);if(-1!==s){const r=e.reduce(((t,e)=>e>0?t+e:t));e[s]=t.shape[n]-r}(0,r.hu)(t.shape[n]===e.reduce(((t,e)=>t+e)),(()=>"The sum of sizes must match the size of the axis dimension.")),i=e}return i}},3261:function(t,e,n){"use strict";n.d(e,{_:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({sqrt_:function(t){const e=(0,o._1)(t,"x","sqrt"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.sqrt(e);return n([e]),r}),n,null,i.FK)}})},248:function(t,e,n){"use strict";n.d(e,{h:function(){return o}});var r=n(7097),i=n(3740);const o=(0,n(2668).op)({square_:function(t){const e=(0,i._1)(t,"x","square"),n=[e];return r.BV.runKernelFunc(((t,n)=>(n([e]),t.square(e))),{x:e},null,"Square",{},n,[])}})},5265:function(t,e,n){"use strict";n.d(e,{$:function(){return u}});var r=n(7097),i=n(9121),o=n(747),s=n(3740),a=n(2200);const u=(0,n(2668).op)({squaredDifference_:function(t,e){let n=(0,s._1)(t,"a","squaredDifference"),u=(0,s._1)(e,"b","squaredDifference");[n,u]=(0,o.T_)(n,u),(0,a.$N)(n.shape,u.shape);const c={a:n,b:u};return r.BV.runKernelFunc(((t,e)=>{const r=t.squaredDifference(n,u);return e([n,u]),r}),c,null,i._t,{})}})},9590:function(t,e,n){"use strict";n.d(e,{L:function(){return a}});var r=n(3740),i=n(569),o=n(2668),s=n(4968);const a=(0,o.op)({squeeze_:function(t,e){const n=(0,r._1)(t,"x","squeeze");return(0,s.X)(n,(0,i.bp)(n.shape,e).newShape)}})},2991:function(t,e,n){"use strict";n.d(e,{k:function(){return a}});var r=n(3740),i=n(569),o=n(6884),s=n(1300);const a=(0,n(2668).op)({stack_:function(t,e=0){const n=(0,r.sI)(t,"tensors","stack");if(i.hu(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),1===n.length)return(0,s.d)(n[0],e);const a=n[0].rank,u=n[0].shape,c=n[0].dtype;i.hu(e<=a,(()=>"Axis must be <= rank of the tensor")),n.forEach((t=>{i.k5(u,t.shape,"All tensors passed to stack must have matching shapes"),i.hu(c===t.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const l=n.map((t=>(0,s.d)(t,e)));return(0,o.z)(l,e)}})},1901:function(t,e,n){"use strict";n.d(e,{N:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({step_:function(t,e=0){const n=(0,o._1)(t,"x","step"),s={x:n},a={alpha:e};return r.BV.runKernelFunc((t=>t.step(n,e)),s,null,i.h8,a)}})},5158:function(t,e,n){"use strict";n.d(e,{N:function(){return l}});var r=n(7097),i=n(9121),o=n(3740),s=n(2668),a=n(4968),u=n(2676),c=n(7650);const l=(0,s.op)({stridedSlice_:function(t,e,n,s,l=0,h=0,p=0,d=0,f=0){let m=(0,o._1)(t,"x","stridedSlice");const g={x:m},y={begin:e,end:n,strides:s,beginMask:l,endMask:h,ellipsisMask:p,newAxisMask:d,shrinkAxisMask:f};return r.BV.runKernelFunc((t=>{null==s&&(s=new Array(e.length));const r=(0,c.maskToAxes)(p);if(r.length>1)throw new Error("Multiple ellipses in slice is not allowed.");if(0!==p&&0!==d)throw new Error("Using both ellipsisMask and newAxisMask is not yet supported.");if(0!==p&&0!==f)throw new Error("Using both ellipsisMask and shrinkAxisMask is not yet supported.");const i=m.rank-e.length,o=(0,c.maskToAxes)(d),g=m.shape.slice();o.forEach((t=>{e[t]=0,n[t]=1,g.splice(t,0,1)})),m=(0,a.X)(m,g);const{begin:y,end:v,strides:x}=(0,c.getNormalizedAxes)(m.shape,r,i,e,n,s,l,h,p);e=y,n=v,s=x;const b=(0,c.maskToAxes)(f);b.forEach((t=>{n[t]=e[t]+1,s[t]=1}));const w=(0,c.computeOutShape)(e,n,s),_=w.filter(((t,e)=>-1===b.indexOf(e)));if(s.every((t=>1===t)))return(0,a.X)((0,u.t)(m,e,w),_);const S=t.stridedSlice(m,e,n,s);return(0,a.X)(S,_)}),g,null,i.m2,y)}})},827:function(t,e,n){"use strict";n.d(e,{l:function(){return a}});var r=n(7097),i=n(9121),o=n(747),s=n(3740);const a=(0,n(2668).op)({sub_:function(t,e){let n=(0,s._1)(t,"a","sub"),a=(0,s._1)(e,"b","sub");[n,a]=(0,o.T_)(n,a);const u={a:n,b:a};return r.BV.runKernelFunc(((t,e)=>{const r=t.subtract(n,a);return e([n,a]),r}),u,null,i.Tr)}})},5475:function(t,e,n){"use strict";n.d(e,{S:function(){return p}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(3591),u=n(2271),c=n(2668),l=n(4968),h=n(9065);const p=(0,c.op)({sum_:function(t,e=null,n=!1){let c=(0,o._1)(t,"x","sum");"bool"===c.dtype&&(c=(0,u.p)(c,"int32"));const p={x:c},d={axis:e,keepDims:n};return r.BV.runKernelFunc(((t,r)=>{r([c]);const i=(0,s.EC)(e,c.shape),o=(0,a.Q3)(i,c.rank);let u=i,p=c;null!=o&&(p=(0,h.p)(c,o),u=(0,a.sY)(u.length,c.rank));let d=t.sum(p,u);if(n){const t=(0,a.rv)(d.shape,i);d=(0,l.X)(d,t)}return d}),p,null,i.GB,d)}})},1173:function(t,e,n){"use strict";n.d(e,{O:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({tan_:function(t){const e=(0,o._1)(t,"x","tan"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.tan(e);return n([e]),r}),n,null,i.sE)}})},1869:function(t,e,n){"use strict";n.d(e,{A:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({tanh_:function(t){const e=(0,o._1)(t,"x","tanh"),n={x:e};return r.BV.runKernelFunc(((t,n)=>{const r=t.tanh(e);return n([r]),r}),n,null,i.MI)}})},701:function(t,e,n){"use strict";n.d(e,{X:function(){return o}});var r=n(3740),i=n(7852);function o(t,e,n){const o=(0,r.C)(t,n);return(0,i.H)(t,e,o,n)}},6092:function(t,e,n){"use strict";n.d(e,{R:function(){return s}});var r=n(3740),i=n(569),o=n(7852);function s(t,e){(0,i.Cq)(t);const n=(0,r.C)(t,e);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return(0,o.H)(t,null,n,e)}},7852:function(t,e,n){"use strict";n.d(e,{H:function(){return s}});var r=n(7097),i=n(569),o=n(9155);function s(t,e,n,s){if(null==s&&(s=(0,i.D2)(t)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!(0,i.fU)(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=e){(0,i.Mu)(e);const t=(0,i.NA)(e),r=(0,i.NA)(n);(0,i.hu)(t===r,(()=>`Based on the provided shape, [${e}], the tensor should have ${t} values but has ${r}`));for(let t=0;t<n.length;++t){const r=n[t],o=t!==n.length-1||r!==(0,i.NA)(e.slice(t));(0,i.hu)(n[t]===e[t]||!o,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${e}). `))}}return(0,i.fU)(t)||Array.isArray(t)||(t=[t]),e=e||n,t="string"!==s?(0,o.Os)(t,s):(0,i.xH)(t,[],!0),r.BV.makeTensor(t,e,s)}},7501:function(t,e,n){"use strict";n.d(e,{G:function(){return a}});var r=n(7097),i=n(9121),o=n(3740),s=n(569);const a=(0,n(2668).op)({tile_:function(t,e){const n=(0,o._1)(t,"x","tile",null);s.hu(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${e}.`));const a=[n],u={x:n},c={reps:e};return r.BV.runKernelFunc(((t,r)=>{const i=t.tile(n,e);return r([n]),i}),u,null,i.n9,c,a)}})},3243:function(t,e,n){"use strict";n.d(e,{h:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({topk_:function(t,e=1,n=!0){const s=(0,o._1)(t,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const a=s.shape[s.shape.length-1];if(e>a)throw new Error(`'k' passed to topk() must be <= the last dimension (${a}) but got ${e}`);const u={x:s},c={k:e,sorted:n},[l,h]=r.BV.runKernelFunc((t=>t.topk(s,e,n)),u,null,i.cW,c);return{values:l,indices:h}}})},9065:function(t,e,n){"use strict";n.d(e,{p:function(){return a}});var r=n(7097),i=n(9121),o=n(3740),s=n(569);const a=(0,n(2668).op)({transpose_:function(t,e){const n=(0,o._1)(t,"x","transpose");if(null==e&&(e=n.shape.map(((t,e)=>e)).reverse()),s.hu(n.rank===e.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${e}.`)),e.forEach((t=>{s.hu(t>=0&&t<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${e}`))})),n.rank<=1)return n.clone();const a={x:n},u={perm:e};return r.BV.runKernelFunc((t=>t.transpose(n,e)),a,null,i.G3,u)}})},9608:function(t,e,n){"use strict";n.d(e,{T:function(){return a}});var r=n(7097),i=n(9121),o=n(3740),s=n(569);const a=(0,n(2668).op)({unique_:function(t,e=0){const n=(0,o._1)(t,"x","unique",null);(0,s.hu)(n.rank>0,(()=>"The input tensor must be at least 1D"));const a={x:n},u={axis:e},[c,l]=r.BV.runKernel(i.kp,a,u);return{values:c,indices:l}}})},4136:function(t,e,n){"use strict";n.d(e,{H:function(){return a}});var r=n(7097),i=n(9121),o=n(3740),s=n(569);const a=(0,n(2668).op)({unstack_:function(t,e=0){const n=(0,o._1)(t,"x","unstack");s.hu(e>=-n.shape.length&&e<n.shape.length,(()=>`Axis = ${e} is not in [-${n.shape.length}, ${n.shape.length})`)),e<0&&(e+=n.shape.length);const a={value:n},u={axis:e};return r.BV.runKernelFunc((t=>t.unstack(n,e)),a,null,i.To,u)}})},5912:function(t,e,n){"use strict";n.d(e,{a:function(){return c}});var r=n(7097),i=n(9121),o=n(3740),s=n(569),a=n(8247),u=n(2200);const c=(0,n(2668).op)({where_:function(t,e,n){const c=(0,o._1)(e,"a","where"),l=(0,o._1)(n,"b","where"),h=(0,o._1)(t,"condition","where","bool"),p=(0,u.$N)(c.shape,l.shape),d=(0,a.U)(c,p),f=(0,a.U)(l,p);1===h.rank&&(0,s.hu)(h.shape[0]===c.shape[0],(()=>"The first dimension of `a` must match the size of `condition`.")),1!==h.rank&&(0,s.k5)(h.shape,f.shape,"Error in where: ");const m={condition:h,t:d,e:f};return r.BV.runKernelFunc(((t,e)=>{const n=t.select(h,d,f);return e([h]),n}),m,null,i.xc)}})},9640:function(t,e,n){"use strict";n.d(e,{l:function(){return s}});var r=n(7097),i=n(569),o=n(1661);function s(t,e="float32"){if("complex64"===e){const e=s(t,"float32"),n=s(t,"float32");return(0,o.P)(e,n)}const n=(0,i.wT)((0,i.NA)(t),e);return r.BV.makeTensor(n,t,e)}},6577:function(t,e,n){"use strict";n.d(e,{P:function(){return s}});var r=n(7097),i=n(9121),o=n(3740);const s=(0,n(2668).op)({zerosLike_:function(t){const e=(0,o._1)(t,"x","zerosLike"),n={x:e};return r.BV.runKernelFunc((t=>t.zerosLike(e)),n,null,i.Ru)}})},4077:function(t,e,n){"use strict";n.d(e,{es:function(){return y},YD:function(){return l},_w:function(){return v},FZ:function(){return g},Vp:function(){return m},Vi:function(){return f}});var r=n(569);function i(t,e,n,i){const s=(0,r.e3)(e),c=function(t,e,n,i){const s=(0,r.NA)(e),a=i[i.length-1],c=new Array(a).fill(0),l=e.length,h="complex64"===n?u(t):t;if(l>1)for(let t=0;t<s/a;t++){const e=t*a;for(let t=0;t<a;t++)c[t]=Math.max(c[t],o(h[e+t],0,n).length)}return c}(t,e,n,s),l=e.length,h=a(t,e,n,s,c),p=["Tensor"];return i&&(p.push(`  dtype: ${n}`),p.push(`  rank: ${l}`),p.push(`  shape: [${e}]`),p.push("  values:")),p.push(h.map((t=>"    "+t)).join("\n")),p.join("\n")}function o(t,e,n){let i;return i=Array.isArray(t)?`${parseFloat(t[0].toFixed(7))} + ${parseFloat(t[1].toFixed(7))}j`:(0,r.HD)(t)?`'${t}'`:"bool"===n?s(t):parseFloat(t.toFixed(7)).toString(),(0,r.oj)(i,e)}function s(t){return 0===t?"false":"true"}function a(t,e,n,r,i,c=!0){const l="complex64"===n?2:1,h=e[0],p=e.length;if(0===p)return"complex64"===n?[o(u(t)[0],0,n)]:"bool"===n?[s(t[0])]:[t[0].toString()];if(1===p){if(h>20){const e=3*l;let r=Array.from(t.slice(0,e)),s=Array.from(t.slice((h-3)*l,h*l));return"complex64"===n&&(r=u(r),s=u(s)),["["+r.map(((t,e)=>o(t,i[e],n))).join(", ")+", ..., "+s.map(((t,e)=>o(t,i[h-3+e],n))).join(", ")+"]"]}return["["+("complex64"===n?u(t):Array.from(t)).map(((t,e)=>o(t,i[e],n))).join(", ")+"]"]}const d=e.slice(1),f=r.slice(1),m=r[0]*l,g=[];if(h>20){for(let e=0;e<3;e++){const r=e*m,o=r+m;g.push(...a(t.slice(r,o),d,n,f,i,!1))}g.push("...");for(let e=h-3;e<h;e++){const r=e*m,o=r+m;g.push(...a(t.slice(r,o),d,n,f,i,e===h-1))}}else for(let e=0;e<h;e++){const r=e*m,o=r+m;g.push(...a(t.slice(r,o),d,n,f,i,e===h-1))}const y=2===p?",":"";g[0]="["+g[0]+y;for(let t=1;t<g.length-1;t++)g[t]=" "+g[t]+y;let v=",\n";for(let t=2;t<p;t++)v+="\n";return g[g.length-1]=" "+g[g.length-1]+"]"+(c?"":v),g}function u(t){const e=[];for(let n=0;n<t.length;n+=2)e.push([t[n],t[n+1]]);return e}var c=n(9155);class l{constructor(t,e,n){if(this.dtype=e,this.shape=t.slice(),this.size=r.NA(t),null!=n){const t=n.length;r.hu(t===this.size,(()=>`Length of values '${t}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===e)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||r.rQ(e,this.size),this.strides=(0,r.e3)(t)}set(t,...e){0===e.length&&(e=[0]),r.hu(e.length===this.rank,(()=>`The number of provided coordinates (${e.length}) must match the rank (${this.rank})`));const n=this.locToIndex(e);this.values[n]=t}get(...t){0===t.length&&(t=[0]);let e=0;for(const n of t){if(n<0||n>=this.shape[e]){const e=`Requested out of range element at ${t}.   Buffer shape=${this.shape}`;throw new Error(e)}e++}let n=t[t.length-1];for(let e=0;e<t.length-1;++e)n+=this.strides[e]*t[e];return this.values[n]}locToIndex(t){if(0===this.rank)return 0;if(1===this.rank)return t[0];let e=t[t.length-1];for(let n=0;n<t.length-1;++n)e+=this.strides[n]*t[n];return e}indexToLoc(t){if(0===this.rank)return[];if(1===this.rank)return[t];const e=new Array(this.shape.length);for(let n=0;n<e.length-1;++n)e[n]=Math.floor(t/this.strides[n]),t-=e[n]*this.strides[n];return e[e.length-1]=t,e}get rank(){return this.shape.length}toTensor(){return h().makeTensor(this.values,this.shape,this.dtype)}}let h=null,p=null,d=null;function f(t){h=t}function m(t){p=t}function g(t){d=t}class y{constructor(t,e,n,i){this.kept=!1,this.isDisposedInternal=!1,this.shape=t.slice(),this.dtype=e||"float32",this.size=r.NA(t),this.strides=(0,r.e3)(t),this.dataId=n,this.id=i,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const t=await this.data();return p.buffer(this.shape,this.dtype,t)}bufferSync(){return p.buffer(this.shape,this.dtype,this.dataSync())}async array(){const t=await this.data();return(0,r.GX)(this.shape,t)}arraySync(){return(0,r.GX)(this.shape,this.dataSync())}async data(){this.throwIfDisposed();const t=h().read(this.dataId);if("string"===this.dtype){const e=await t;try{return e.map((t=>c.v5(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return t}dataSync(){this.throwIfDisposed();const t=h().readSync(this.dataId);if("string"===this.dtype)try{return t.map((t=>c.v5(t)))}catch(t){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return t}async bytes(){this.throwIfDisposed();const t=await h().read(this.dataId);return"string"===this.dtype?t:new Uint8Array(t.buffer)}dispose(){this.isDisposed||(h().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(t=!1){return p.print(this,t)}clone(){return this.throwIfDisposed(),p.clone(this)}toString(t=!1){return i(this.dataSync(),this.shape,this.dtype,t)}cast(t){return this.throwIfDisposed(),p.cast(this,t)}variable(t=!0,e,n){return this.throwIfDisposed(),h().makeVariable(this,t,e,n)}}Object.defineProperty(y,Symbol.hasInstance,{value:t=>!!t&&null!=t.data&&null!=t.dataSync&&null!=t.throwIfDisposed});class v extends y{constructor(t,e,n,r){super(t.shape,t.dtype,t.dataId,r),this.trainable=e,this.name=n}assign(t){if(t.dtype!==this.dtype)throw new Error(`dtype of the new value (${t.dtype}) and previous value (${this.dtype}) must match`);if(!r.cO(t.shape,this.shape))throw new Error(`shape of the new value (${t.shape}) and previous value (${this.shape}) must match`);h().disposeTensor(this),this.dataId=t.dataId,h().incRef(this,null)}dispose(){h().disposeVariable(this),this.isDisposedInternal=!0}}Object.defineProperty(v,Symbol.hasInstance,{value:t=>t instanceof y&&null!=t.assign&&t.assign instanceof Function})},747:function(t,e,n){"use strict";n.d(e,{T_:function(){return o},Vu:function(){return s}});var r=n(4077),i=n(1221);function o(t,e){if(t.dtype===e.dtype)return[t,e];const n=(0,i.x8)(t.dtype,e.dtype);return[t.cast(n),e.cast(n)]}function s(t){const e=[];return a(t,e,new Set),e}function a(t,e,n){if(null==t)return;if(t instanceof r.es)return void e.push(t);if(i=t,!Array.isArray(i)&&"object"!=typeof i)return;var i;const o=t;for(const t in o){const r=o[t];n.has(r)||(n.add(r),a(r,e,n))}}},3740:function(t,e,n){"use strict";n.d(e,{C:function(){return u},_1:function(){return h},sI:function(){return p}});var r=n(7097),i=n(2885),o=n(4077),s=n(569),a=n(9155);function u(t,e){let n=t;if((0,s.fU)(t))return"string"===e?[]:[t.length];if(!Array.isArray(t))return[];const r=[];for(;Array.isArray(n)||(0,s.fU)(n)&&"string"!==e;)r.push(n.length),n=n[0];return Array.isArray(t)&&(0,i.OB)().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&c(t,r,[]),r}function c(t,e,n){if(n=n||[],!Array.isArray(t)&&!(0,s.fU)(t))return void(0,s.hu)(0===e.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${e[0]} elements`));(0,s.hu)(e.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${t.length} elements`)),(0,s.hu)(t.length===e[0],(()=>`Element arr[${n.join("][")}] should have ${e[0]} elements, but has ${t.length} elements`));const r=e.slice(1);for(let e=0;e<t.length;++e)c(t[e],r,n.concat(e))}function l(t,e,n,r){if(null!=t&&("numeric"!==t&&t!==e||"numeric"===t&&"string"===e))throw new Error(`Argument '${n}' passed to '${r}' must be ${t} tensor, but got ${e} tensor`)}function h(t,e,n,i="numeric"){if(t instanceof o.es)return l(i,t.dtype,e,n),t;let c=(0,s.D2)(t);if("string"!==c&&["bool","int32","float32"].indexOf(i)>=0&&(c=i),l(i,c,e,n),null==t||!(0,s.fU)(t)&&!Array.isArray(t)&&"number"!=typeof t&&"boolean"!=typeof t&&"string"!=typeof t){const r=null==t?"null":t.constructor.name;throw new Error(`Argument '${e}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const h=u(t,c);(0,s.fU)(t)||Array.isArray(t)||(t=[t]);const p="string"!==c?(0,a.Os)(t,c):(0,s.xH)(t,[],!0);return r.BV.makeTensor(p,h,c)}function p(t,e,n,r="numeric"){if(!Array.isArray(t))throw new Error(`Argument ${e} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return t.map(((t,r)=>h(t,`${e}[${r}]`,n)),r)}},1221:function(t,e,n){"use strict";var r,i,o,s,a;n.d(e,{x8:function(){return c},z4:function(){return l}}),function(t){t.R0="R0",t.R1="R1",t.R2="R2",t.R3="R3",t.R4="R4",t.R5="R5",t.R6="R6"}(r||(r={})),function(t){t.float32="float32",t.int32="int32",t.bool="int32",t.complex64="complex64"}(i||(i={})),function(t){t.float32="float32",t.int32="int32",t.bool="bool",t.complex64="complex64"}(o||(o={})),function(t){t.float32="float32",t.int32="float32",t.bool="float32",t.complex64="complex64"}(s||(s={})),function(t){t.float32="complex64",t.int32="complex64",t.bool="complex64",t.complex64="complex64"}(a||(a={}));const u={float32:s,int32:i,bool:o,complex64:a};function c(t,e){if("string"===t||"string"===e){if("string"===t&&"string"===e)return"string";throw new Error(`Can not upcast ${t} with ${e}`)}return u[t][e]}function l(t){return c(t,"int32")}},9155:function(t,e,n){"use strict";n.d(e,{cO:function(){return i.cO},hu:function(){return i.hu},bT:function(){return i.bT},e3:function(){return i.e3},xH:function(){return i.xH},rQ:function(){return i.rQ},WP:function(){return i.WP},QB:function(){return i.QB},NE:function(){return i.NE},D2:function(){return i.D2},JZ:function(){return i.JZ},GN:function(){return i.GN},tI:function(){return i.tI},qy:function(){return i.qy},nY:function(){return i.nY},EC:function(){return i.EC},WD:function(){return i.WD},oj:function(){return i.oj},NA:function(){return i.NA},YP:function(){return i.YP},bp:function(){return i.bp},Sm:function(){return i.Sm},GX:function(){return i.GX},Os:function(){return o},zO:function(){return s},he:function(){return a},YW:function(){return u},v5:function(){return c}});var r=n(2885),i=n(569);function o(t,e){if("string"===e)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(t)&&(t=i.xH(t)),(0,r.OB)().getBool("DEBUG")&&i.D5(t,e),function(t,e){return t instanceof Float32Array&&"float32"===e||t instanceof Int32Array&&"int32"===e||t instanceof Uint8Array&&"bool"===e}(t,e))return t;if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e){const e=new Uint8Array(t.length);for(let n=0;n<e.length;++n)0!==Math.round(t[n])&&(e[n]=1);return e}throw new Error(`Unknown data type ${e}`)}function s(){return(0,r.OB)().platform.now()}function a(t,e){return(0,r.OB)().platform.fetch(t,e)}function u(t,e="utf-8"){return e=e||"utf-8",(0,r.OB)().platform.encode(t,e)}function c(t,e="utf-8"){return e=e||"utf-8",(0,r.OB)().platform.decode(t,e)}},569:function(t,e,n){"use strict";function r(t,e,n){return Math.max(t,Math.min(e,n))}function i(t){return t%2==0?t:t+1}function o(t){let e=0;for(let n=0;n<t.length;n++)e+=t[n];return e}function s(t,e){if(!t)throw new Error("string"==typeof e?e:e())}function a(t,e,n=""){s(h(t,e),(()=>n+` Shapes ${t} and ${e} must match`))}function u(t){s(null!=t,(()=>"The input to the tensor constructor must be a non-null value."))}function c(t,e=[],n=!1){if(null==e&&(e=[]),Array.isArray(t)||T(t)&&!n)for(let r=0;r<t.length;++r)c(t[r],e,n);else e.push(t);return e}function l(t){if(0===t.length)return 1;let e=t[0];for(let n=1;n<t.length;n++)e*=t[n];return e}function h(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!==e.length)return!1;for(let n=0;n<t.length;n++)if(t[n]!==e[n])return!1;return!0}function p(t){return t%1==0}function d(t){const e=Math.ceil(Math.sqrt(t));return[e,Math.ceil(t/e)]}function f(t,e){return e<=t.length?t:t+" ".repeat(e-t.length)}function m(t,e=(t=>0),n){return new Promise(((r,i)=>{let o=0;const s=()=>{if(t())return void r();o++;const a=e(o);null!=n&&o>=n?i():setTimeout(s,a)};s()}))}function g(t,e){let n=1,r=-1;for(let e=0;e<t.length;++e)if(t[e]>=0)n*=t[e];else if(-1===t[e]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${e}`);r=e}else if(t[e]<0)throw Error(`Shapes can not be < 0. Found ${t[e]} at dim ${e}`);if(-1===r){if(e>0&&e!==n)throw Error(`Size(${e}) must match the product of shape ${t}`);return t}if(0===n)throw Error(`Cannot infer the missing size in [${t}] when there are 0 elements`);if(e%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${e} / ${n}`);const i=t.slice();return i[r]=e/n,i}function y(t,e){const n=e.length;return s((t=null==t?e.map(((t,e)=>e)):[].concat(t)).every((t=>t>=-n&&t<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${t}`)),s(t.every((t=>p(t))),(()=>`All values in axis param must be integers but got axis ${t}`)),t.map((t=>t<0?n+t:t))}function v(t,e){const n=[],r=[],i=null!=e&&Array.isArray(e)&&0===e.length,o=null==e||i?null:y(e,t).sort();let s=0;for(let e=0;e<t.length;++e){if(null!=o){if(o[s]===e&&1!==t[e])throw new Error(`Can't squeeze axis ${e} since its dim '${t[e]}' is not 1`);(null==o[s]||o[s]>e)&&1===t[e]&&(n.push(t[e]),r.push(e)),o[s]<=e&&s++}1!==t[e]&&(n.push(t[e]),r.push(e))}return{newShape:n,keptDims:r}}function x(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else{if("bool"!==t)throw new Error(`Unknown data type ${t}`);n=new Uint8Array(e)}return n}function b(t,e){let n=null;if(null==t||"float32"===t)n=new Float32Array(e);else if("int32"===t)n=new Int32Array(e);else if("bool"===t)n=new Uint8Array(e);else{if("string"!==t)throw new Error(`Unknown data type ${t}`);n=new Array(e)}return n}function w(t,e){for(let n=0;n<t.length;n++){const r=t[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${e} being uploaded contains ${r}.`)}}function _(t){return"bool"===t||"complex64"===t||"float32"===t||"int32"===t||"string"===t}function S(t,e){return!("complex64"===e||"float32"===e&&"complex64"!==t||"int32"===e&&"float32"!==t&&"complex64"!==t||"bool"===e&&"bool"===t)}function T(t){return t instanceof Float32Array||t instanceof Int32Array||t instanceof Uint8Array}function E(t){if("float32"===t||"int32"===t)return 4;if("complex64"===t)return 8;if("bool"===t)return 1;throw new Error(`Unknown dtype ${t}`)}function M(t){if(null==t)return 0;let e=0;return t.forEach((t=>e+=t.length)),e}function C(t){return"string"==typeof t||t instanceof String}function A(t){return Array.isArray(t)?A(t[0]):t instanceof Float32Array?"float32":t instanceof Int32Array||t instanceof Uint8Array?"int32":"number"==typeof t?"float32":C(t)?"string":"boolean"==typeof t?"bool":"float32"}function N(t){return!!(t&&t.constructor&&t.call&&t.apply)}function R(t,e){for(let n=e;n<t;++n)if(t%n==0)return n;return t}function I(t){const e=t.length;if(e<2)return[];const n=new Array(e-1);n[e-2]=t[e-1];for(let r=e-3;r>=0;--r)n[r]=n[r+1]*t[r+1];return n}function D(t,e,n){const r=new Array;if(1===e.length){const i=e[0];for(let e=0;e<i;e++)r[e]=n[t+e]}else{const i=e[0],o=e.slice(1),s=o.reduce(((t,e)=>t*e));for(let e=0;e<i;e++)r[e]=D(t+e*s,o,n)}return r}function O(t,e){if(0===t.length)return e[0];const n=t.reduce(((t,e)=>t*e));if(0===n)return[];if(n!==e.length)throw new Error(`[${t}] does not match the input size ${e.length}.`);return D(0,t,e)}function L(t,e){const n=k(t,e);for(let t=0;t<n.length;t++)n[t]=1;return n}function k(t,e){if(null==e||"float32"===e||"complex64"===e)return new Float32Array(t);if("int32"===e)return new Int32Array(t);if("bool"===e)return new Uint8Array(t);throw new Error(`Unknown data type ${e}`)}function P(t){t.forEach((e=>{s(Number.isInteger(e)&&e>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${t}].`))}))}function $(t,e,n){if(0===e)return 0;if(1===e)return t[0];let r=t[t.length-1];for(let e=0;e<t.length-1;++e)r+=n[e]*t[e];return r}function B(t,e,n){if(0===e)return[];if(1===e)return[t];const r=new Array(e);for(let e=0;e<r.length-1;++e)r[e]=Math.floor(t/n[e]),t-=r[e]*n[e];return r[r.length-1]=t,r}function F(t){return t&&t.then&&"function"==typeof t.then}n.d(e,{uZ:function(){return r},nY:function(){return i},Sm:function(){return o},hu:function(){return s},k5:function(){return a},Cq:function(){return u},xH:function(){return c},NA:function(){return l},cO:function(){return h},GN:function(){return p},YP:function(){return d},oj:function(){return f},WD:function(){return m},JZ:function(){return g},EC:function(){return y},bp:function(){return v},WP:function(){return x},rQ:function(){return b},D5:function(){return w},LP:function(){return _},QB:function(){return S},fU:function(){return T},bT:function(){return E},Ub:function(){return M},HD:function(){return C},D2:function(){return A},mf:function(){return N},jP:function(){return R},e3:function(){return I},GX:function(){return O},p8:function(){return L},wT:function(){return k},Mu:function(){return P},qy:function(){return $},NE:function(){return B},tI:function(){return F}})},6377:function(t,e,n){var r=n(4832),i=n(8652),o=n(801),s=n(2030),a=n(3618),u=n(9049),c=n(1971);c.alea=r,c.xor128=i,c.xorwow=o,c.xorshift7=s,c.xor4096=a,c.tychei=u,t.exports=c},4832:function(t,e,n){var r;!function(t,i,o){function s(t){var e,n=this,r=(e=4022871197,function(t){t=t.toString();for(var n=0;n<t.length;n++){var r=.02519603282416938*(e+=t.charCodeAt(n));r-=e=r>>>0,e=(r*=e)>>>0,e+=4294967296*(r-=e)}return 2.3283064365386963e-10*(e>>>0)});n.next=function(){var t=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=t-(n.c=0|t)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(t),n.s0<0&&(n.s0+=1),n.s1-=r(t),n.s1<0&&(n.s1+=1),n.s2-=r(t),n.s2<0&&(n.s2+=1),r=null}function a(t,e){return e.c=t.c,e.s0=t.s0,e.s1=t.s1,e.s2=t.s2,e}function u(t,e){var n=new s(t),r=e&&e.state,i=n.next;return i.int32=function(){return 4294967296*n.next()|0},i.double=function(){return i()+11102230246251565e-32*(2097152*i()|0)},i.quick=i,r&&("object"==typeof r&&a(r,n),i.state=function(){return a(n,{})}),i}i&&i.exports?i.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,i))||(i.exports=r):this.alea=u}(0,t=n.nmd(t),n.amdD)},9049:function(t,e,n){var r;!function(t,i,o){function s(t){var e=this,n="";e.next=function(){var t=e.b,n=e.c,r=e.d,i=e.a;return t=t<<25^t>>>7^n,n=n-r|0,r=r<<24^r>>>8^i,i=i-t|0,e.b=t=t<<20^t>>>12^n,e.c=n=n-r|0,e.d=r<<16^n>>>16^i,e.a=i-t|0},e.a=0,e.b=0,e.c=-1640531527,e.d=1367130551,t===Math.floor(t)?(e.a=t/4294967296|0,e.b=0|t):n+=t;for(var r=0;r<n.length+20;r++)e.b^=0|n.charCodeAt(r),e.next()}function a(t,e){return e.a=t.a,e.b=t.b,e.c=t.c,e.d=t.d,e}function u(t,e){var n=new s(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&a(r,n),i.state=function(){return a(n,{})}),i}i&&i.exports?i.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,i))||(i.exports=r):this.tychei=u}(0,t=n.nmd(t),n.amdD)},8652:function(t,e,n){var r;!function(t,i,o){function s(t){var e=this,n="";e.x=0,e.y=0,e.z=0,e.w=0,e.next=function(){var t=e.x^e.x<<11;return e.x=e.y,e.y=e.z,e.z=e.w,e.w^=e.w>>>19^t^t>>>8},t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),e.next()}function a(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e}function u(t,e){var n=new s(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&a(r,n),i.state=function(){return a(n,{})}),i}i&&i.exports?i.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,i))||(i.exports=r):this.xor128=u}(0,t=n.nmd(t),n.amdD)},3618:function(t,e,n){var r;!function(t,i,o){function s(t){var e=this;e.next=function(){var t,n,r=e.w,i=e.X,o=e.i;return e.w=r=r+1640531527|0,n=i[o+34&127],t=i[o=o+1&127],n^=n<<13,t^=t<<17,n^=n>>>15,t^=t>>>12,n=i[o]=n^t,e.i=o,n+(r^r>>>16)|0},function(t,e){var n,r,i,o,s,a=[],u=128;for(e===(0|e)?(r=e,e=null):(e+="\0",r=0,u=Math.max(u,e.length)),i=0,o=-32;o<u;++o)e&&(r^=e.charCodeAt((o+32)%e.length)),0===o&&(s=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,o>=0&&(s=s+1640531527|0,i=0==(n=a[127&o]^=r+s)?i+1:0);for(i>=128&&(a[127&(e&&e.length||0)]=-1),i=127,o=512;o>0;--o)r=a[i+34&127],n=a[i=i+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,a[i]=r^n;t.w=s,t.X=a,t.i=i}(e,t)}function a(t,e){return e.i=t.i,e.w=t.w,e.X=t.X.slice(),e}function u(t,e){null==t&&(t=+new Date);var n=new s(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&(r.X&&a(r,n),i.state=function(){return a(n,{})}),i}i&&i.exports?i.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,i))||(i.exports=r):this.xor4096=u}(0,t=n.nmd(t),n.amdD)},2030:function(t,e,n){var r;!function(t,i,o){function s(t){var e=this;e.next=function(){var t,n,r=e.x,i=e.i;return t=r[i],n=(t^=t>>>7)^t<<24,n^=(t=r[i+1&7])^t>>>10,n^=(t=r[i+3&7])^t>>>3,n^=(t=r[i+4&7])^t<<7,t=r[i+7&7],n^=(t^=t<<13)^t<<9,r[i]=n,e.i=i+1&7,n},function(t,e){var n,r=[];if(e===(0|e))r[0]=e;else for(e=""+e,n=0;n<e.length;++n)r[7&n]=r[7&n]<<15^e.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],t.x=r,t.i=0,n=256;n>0;--n)t.next()}(e,t)}function a(t,e){return e.x=t.x.slice(),e.i=t.i,e}function u(t,e){null==t&&(t=+new Date);var n=new s(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&(r.x&&a(r,n),i.state=function(){return a(n,{})}),i}i&&i.exports?i.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,i))||(i.exports=r):this.xorshift7=u}(0,t=n.nmd(t),n.amdD)},801:function(t,e,n){var r;!function(t,i,o){function s(t){var e=this,n="";e.next=function(){var t=e.x^e.x>>>2;return e.x=e.y,e.y=e.z,e.z=e.w,e.w=e.v,(e.d=e.d+362437|0)+(e.v=e.v^e.v<<4^t^t<<1)|0},e.x=0,e.y=0,e.z=0,e.w=0,e.v=0,t===(0|t)?e.x=t:n+=t;for(var r=0;r<n.length+64;r++)e.x^=0|n.charCodeAt(r),r==n.length&&(e.d=e.x<<10^e.x>>>4),e.next()}function a(t,e){return e.x=t.x,e.y=t.y,e.z=t.z,e.w=t.w,e.v=t.v,e.d=t.d,e}function u(t,e){var n=new s(t),r=e&&e.state,i=function(){return(n.next()>>>0)/4294967296};return i.double=function(){do{var t=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===t);return t},i.int32=n.next,i.quick=i,r&&("object"==typeof r&&a(r,n),i.state=function(){return a(n,{})}),i}i&&i.exports?i.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(e,n,e,i))||(i.exports=r):this.xorwow=u}(0,t=n.nmd(t),n.amdD)},1971:function(t,e,n){var r;!function(i,o){var s,a=this,u=256,c=o.pow(u,6),l=o.pow(2,52),h=2*l,p=255;function d(t,e,n){var r=[],p=y(g((e=1==e?{entropy:!0}:e||{}).entropy?[t,v(i)]:null==t?function(){try{var t;return s&&(t=s.randomBytes)?t=t(u):(t=new Uint8Array(u),(a.crypto||a.msCrypto).getRandomValues(t)),v(t)}catch(t){var e=a.navigator,n=e&&e.plugins;return[+new Date,a,n,a.screen,v(i)]}}():t,3),r),d=new f(r),x=function(){for(var t=d.g(6),e=c,n=0;t<l;)t=(t+n)*u,e*=u,n=d.g(1);for(;t>=h;)t/=2,e/=2,n>>>=1;return(t+n)/e};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(v(d.S),i),(e.pass||n||function(t,e,n,r){return r&&(r.S&&m(r,d),t.state=function(){return m(d,{})}),n?(o.random=t,e):t})(x,p,"global"in e?e.global:this==o,e.state)}function f(t){var e,n=t.length,r=this,i=0,o=r.i=r.j=0,s=r.S=[];for(n||(t=[n++]);i<u;)s[i]=i++;for(i=0;i<u;i++)s[i]=s[o=p&o+t[i%n]+(e=s[i])],s[o]=e;(r.g=function(t){for(var e,n=0,i=r.i,o=r.j,s=r.S;t--;)e=s[i=p&i+1],n=n*u+s[p&(s[i]=s[o=p&o+e])+(s[o]=e)];return r.i=i,r.j=o,n})(u)}function m(t,e){return e.i=t.i,e.j=t.j,e.S=t.S.slice(),e}function g(t,e){var n,r=[],i=typeof t;if(e&&"object"==i)for(n in t)try{r.push(g(t[n],e-1))}catch(t){}return r.length?r:"string"==i?t:t+"\0"}function y(t,e){for(var n,r=t+"",i=0;i<r.length;)e[p&i]=p&(n^=19*e[p&i])+r.charCodeAt(i++);return v(e)}function v(t){return String.fromCharCode.apply(0,t)}if(o.seedrandom=d,y(o.random(),i),t.exports){t.exports=d;try{s=n(3906)}catch(t){}}else void 0===(r=function(){return d}.call(e,n,e,t))||(t.exports=r)}([],Math)},3906:function(){},8352:function(){},1758:function(){}},e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={id:r,loaded:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.d=function(t,e){for(var r in e)n.o(e,r)&&!n.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:e[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},n.nmd=function(t){return t.paths=[],t.children||(t.children=[]),t},function(){"use strict";var t={};n.r(t),n.d(t,{addImpl:function(){return G},ceilImpl:function(){return Y},expImpl:function(){return K},expm1Impl:function(){return Z},floorImpl:function(){return J},logImpl:function(){return Q},maxImpl:function(){return tt},multiplyImpl:function(){return et},notEqualImpl:function(){return rt},rsqrtImpl:function(){return it},simpleAbsImpl:function(){return $},sliceImpl:function(){return ot},squaredDifferenceImpl:function(){return st},subImpl:function(){return at},transposeImpl:function(){return ct},uniqueImpl:function(){return lt}});var e=function(t){return e=void 0,n=void 0,i=function(){var e,n;return function(t,e){var n,r,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=e.call(t,s)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}}(this,(function(r){switch(r.label){case 0:return(e=document.createElement("video")).setAttribute("playsinline","true"),e.style.transform="scaleX(-1)",t.appendChild(e),[4,navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"user"}})];case 1:return n=r.sent(),e.srcObject=n,[2,new Promise((function(t){e.onloadedmetadata=function(){e.play(),t(e)}}))]}}))},new((r=void 0)||(r=Promise))((function(t,o){function s(t){try{u(i.next(t))}catch(t){o(t)}}function a(t){try{u(i.throw(t))}catch(t){o(t)}}function u(e){var n;e.done?t(e.value):(n=e.value,n instanceof r?n:new r((function(t){t(n)}))).then(s,a)}u((i=i.apply(e,n||[])).next())}));var e,n,r,i},r=n(6743);const i={},o={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function s(t){if(!(t in i)){const e=function(t){if(1!==t&&2!==t)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const e=function(t){if("undefined"!=typeof OffscreenCanvas&&2===t)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(t);return e.addEventListener("webglcontextlost",(e=>{e.preventDefault(),delete i[t]}),!1),1===t?e.getContext("webgl",o)||e.getContext("experimental-webgl",o):e.getContext("webgl2",o)}(t);if(null===e)return console.log("Could not get context for WebGL version",t),null;i[t]=e}const e=i[t];return e.isContextLost()?(delete i[t],s(t)):(e.disable(e.DEPTH_TEST),e.disable(e.STENCIL_TEST),e.disable(e.BLEND),e.disable(e.DITHER),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SAMPLE_COVERAGE),e.enable(e.SCISSOR_TEST),e.enable(e.CULL_FACE),e.cullFace(e.BACK),i[t])}var a,u,c;function l(t,e){return[e,t]}function h(t){const e=r.D5U.NA(t),n=Math.ceil(e/4);return r.D5U.YP(n)}function p(t,e){return[Math.max(1,Math.ceil(e/2)),Math.max(1,Math.ceil(t/2))]}function d(t,e){const n=t;let i,o,s,a,u,c,l,h,p,d;return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?(i=n.R32F,o=n.R16F,s=n.RGBA16F,a=n.RGBA32F,u=n.RED,l=4,h=1,p=n.HALF_FLOAT,d=n.FLOAT):(i=t.RGBA,o=t.RGBA,s=t.RGBA,a=n.RGBA,u=t.RGBA,l=4,h=4,p=null!=e?e.HALF_FLOAT_OES:null,d=t.FLOAT),c=t.RGBA,{internalFormatFloat:i,internalFormatHalfFloat:o,internalFormatPackedHalfFloat:s,internalFormatPackedFloat:a,textureFormatFloat:u,downloadTextureFormat:c,downloadUnpackNumChannels:l,defaultNumChannels:h,textureTypeHalfFloat:p,textureTypeFloat:d}}function f(t,e){const n=e();return(0,r.OBj)().getBool("DEBUG")&&function(t){const e=t.getError();if(e!==t.NO_ERROR)throw new Error("WebGL Error: "+function(t,e){switch(e){case t.NO_ERROR:return"NO_ERROR";case t.INVALID_ENUM:return"INVALID_ENUM";case t.INVALID_VALUE:return"INVALID_VALUE";case t.INVALID_OPERATION:return"INVALID_OPERATION";case t.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case t.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case t.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${e}`}}(t,e))}(t),n}function m(t){return!!((0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===t||5.96e-8<Math.abs(t)&&Math.abs(t)<65504)}function g(t,e){return T(t,(()=>t.getExtension(e)),'Extension "'+e+'" not supported on this browser.')}!function(t){t[t.DENSE=0]="DENSE",t[t.SHARED_BATCH=1]="SHARED_BATCH"}(a||(a={})),function(t){t[t.RENDER=0]="RENDER",t[t.UPLOAD=1]="UPLOAD",t[t.PIXELS=2]="PIXELS",t[t.DOWNLOAD=3]="DOWNLOAD"}(u||(u={})),function(t){t[t.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",t[t.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",t[t.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",t[t.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",t[t.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(c||(c={}));const y=/ERROR: [0-9]+:([0-9]+):/g;function v(t,e){if(f(t,(()=>t.validateProgram(e))),!1===t.getProgramParameter(e,t.VALIDATE_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Shader program validation failed.")}function x(t,e,n,r,i,o,s){const a=t.getAttribLocation(e,n);return-1!==a&&(f(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,r))),f(t,(()=>t.vertexAttribPointer(a,i,t.FLOAT,!1,o,s))),f(t,(()=>t.enableVertexAttribArray(a))),!0)}function b(t,e,n,r){f(t,(()=>function(t,e,n){(function(t,e){const n=t.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=e+t.TEXTURE0;if(r<t.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(t,n),f(t,(()=>t.activeTexture(t.TEXTURE0+n))),f(t,(()=>t.bindTexture(t.TEXTURE_2D,e)))}(t,e,r))),f(t,(()=>t.uniform1i(n,r)))}function w(t,e,n){f(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,n))),f(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,e,0)))}function _(t,e){f(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,e))),f(t,(()=>t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,null,0)))}function S(t){const e=t.checkFramebufferStatus(t.FRAMEBUFFER);if(e!==t.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(t,e){switch(e){case t.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case t.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case t.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${e}`}}(t,e))}function T(t,e,n){const r=f(t,(()=>e()));if(null==r)throw new Error(n);return r}function E(t,e=2){return r.D5U.NA(t.slice(0,t.length-e))}function M(t){if(0===t.length)throw Error("Cannot get rows and columns of an empty shape array.");return[t.length>1?t[t.length-2]:1,t[t.length-1]]}function C(t){let e=[1,1,1];return 0===t.length||1===t.length&&1===t[0]||(e=[E(t),...M(t)]),e}function A(t){return t%2==0}function N(t,e){if(t=t.slice(-2),e=e.slice(-2),r.D5U.cO(t,e))return!0;if(!t.length||!e.length)return!0;if(0===t[0]||0===t[1]||0===e[0]||0===e[1])return!0;if(t.length!==e.length){const n=t.slice(-1)[0],r=e.slice(-1)[0];if(n===r)return!0;if(A(n)&&A(r)&&(1===t[0]||1===e[0]))return!0}return t[1]===e[1]&&A(t[0])&&A(e[0])}let R,I;function D(t,e){return null!=t.getExtension(e)}function O(t){try{if(null!=s(t))return!0}catch(t){return console.log("Error when getting WebGL context: ",t),!1}return!1}function L(t){const e=d(t),n=t.createTexture();t.bindTexture(t.TEXTURE_2D,n),t.texImage2D(t.TEXTURE_2D,0,e.internalFormatFloat,1,1,0,e.textureFormatFloat,e.textureTypeFloat,null);const r=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,r),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,n,0);const i=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(n),t.deleteFramebuffer(r),i}function k(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&r.D5U.hu("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the WebGL backend.`))}))}const P=(0,r.OBj)();function $(t){const e=new Float32Array(t.length);for(let n=0;n<t.length;++n)e[n]=Math.abs(t[n]);return e}function B(t){return(e,n,i,o,s)=>{const a=r.Wap.assertAndGetBroadcastShape(e,n),u=a.length,c=r.D5U.e3(a),l=r.D5U.NA(a),h=r.D5U.WP(s,l),p=e.length,d=n.length,f=r.D5U.e3(e),m=r.D5U.e3(n),g=r.Wap.getBroadcastDims(e,a),y=r.Wap.getBroadcastDims(n,a);if(g.length+y.length===0)for(let e=0;e<h.length;++e)h[e]=t(i[e%i.length],o[e%o.length]);else for(let e=0;e<h.length;++e){const n=r.D5U.NE(e,u,c),s=n.slice(-p);g.forEach((t=>s[t]=0));const a=r.D5U.qy(s,p,f),l=n.slice(-d);y.forEach((t=>l[t]=0));const v=r.D5U.qy(l,d,m);h[e]=t(i[a],o[v])}return[h,a]}}function F(t,e){Array.isArray(t)||(t=[t]),t.forEach((t=>{null!=t&&r.D5U.hu("complex64"!==t.dtype,(()=>`${e} does not support complex64 tensors in the CPU backend.`))}))}function U(t){const{inputs:e,backend:n}=t,{real:r,imag:i}=e,o=n.data.get(r.dataId).values,s=n.data.get(i.dataId).values,a=n.makeTensorInfo(r.shape,"complex64");return n.data.get(a.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",o),imag:n.makeTensorInfo(i.shape,"float32",s)},a}function z(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}function V(t){const{inputs:e,backend:n,attrs:i}=t,{x:o}=e,{dtype:s}=i;if("complex64"===s){if("complex64"===o.dtype)return z({inputs:{x:o},backend:n});const t=r.lls(o.shape),e=V({inputs:{x:o},backend:n,attrs:{dtype:"float32"}}),i=U({inputs:{real:e,imag:t},backend:n});return t.dispose(),n.disposeIntermediateTensorInfo(e),i}if("complex64"===o.dtype){const t=function(t){const{inputs:e,backend:n}=t,{input:r}=e,i=n.data.get(r.dataId).complexTensorInfos.real,o=n.data.get(i.dataId).values;return n.makeTensorInfo(i.shape,i.dtype,o)}({inputs:{input:o},backend:n}),e=V({inputs:{x:t},backend:n,attrs:{dtype:s}});return n.disposeIntermediateTensorInfo(t),e}if(!r.D5U.QB(o.dtype,s)){const t=z({inputs:{x:o},backend:n});return{dataId:t.dataId,shape:t.shape,dtype:s}}if("int32"===s){const t=n.data.get(o.dataId).values,e=Int32Array.from(t);return n.makeTensorInfo(o.shape,"int32",e)}if("bool"===s){const t=n.data.get(o.dataId).values,e=r.D5U.Os([0],o.dtype),[i,s]=B(((t,e)=>t!==e?1:0))(o.shape,[],t,e,"bool");return n.makeTensorInfo(s,"bool",i)}throw new Error(`Error in Cast: failed to cast ${o.dtype} to ${s}`)}function W(t,e,n,r){return null==n?({inputs:n,backend:i})=>{const{a:o,b:s}=n,a=i;F([o,s],t);const u=a.data.get(o.dataId).values,c=a.data.get(s.dataId).values,l=r||o.dtype,[h,p]=e(o.shape,s.shape,u,c,l);return a.makeTensorInfo(p,l,h)}:({inputs:t,backend:i})=>{const{a:o,b:s}=t,a=i;if("complex64"===o.dtype||"complex64"===s.dtype){const t=V({inputs:{x:o},backend:a,attrs:{dtype:"complex64"}}),e=a.data.get(t.dataId),r=e.complexTensorInfos.real,i=e.complexTensorInfos.imag,u=a.data.get(r.dataId).values,c=a.data.get(i.dataId).values,l=V({inputs:{x:s},backend:a,attrs:{dtype:"complex64"}}),h=a.data.get(l.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=a.data.get(p.dataId).values,m=a.data.get(d.dataId).values,[g,y,v]=n(o.shape,s.shape,u,c,f,m),x=a.makeTensorInfo(v,"float32",g),b=a.makeTensorInfo(v,"float32",y),w=U({inputs:{real:x,imag:b},backend:a});return a.disposeIntermediateTensorInfo(t),a.disposeIntermediateTensorInfo(l),a.disposeIntermediateTensorInfo(x),a.disposeIntermediateTensorInfo(b),w}{const t=a.data.get(o.dataId).values,n=a.data.get(s.dataId).values,i=r||o.dtype,[u,c]=e(o.shape,s.shape,t,n,i);return a.makeTensorInfo(c,i,u)}}}function H(t){return(e,n,i,o,s,a)=>{const u=r.Wap.assertAndGetBroadcastShape(e,n),c=r.D5U.NA(u),l=u.length,h=r.D5U.e3(u),p=r.D5U.WP("float32",c),d=r.D5U.WP("float32",c),f=r.Wap.getBroadcastDims(e,u),m=r.Wap.getBroadcastDims(n,u),g=r.Wap.mergeRealAndImagArrays(i,o),y=r.Wap.mergeRealAndImagArrays(s,a),v=e.length,x=r.D5U.e3(e),b=n.length,w=r.D5U.e3(n);if(f.length+m.length===0)for(let e=0;e<p.length;e++){const n=e%g.length,r=e%y.length,i=t(g[2*n],g[2*n+1],y[2*r],y[2*r+1]);p[e]=i.real,d[e]=i.imag}else for(let e=0;e<p.length;e++){const n=r.D5U.NE(e,l,h),i=n.slice(-v);f.forEach((t=>i[t]=0));const o=r.D5U.qy(i,v,x),s=n.slice(-b);m.forEach((t=>s[t]=0));const a=r.D5U.qy(s,b,w),u=t(g[2*o],g[2*o+1],y[2*a],y[2*a+1]);p[e]=u.real,d[e]=u.imag}return[p,d,u]}}P.registerFlag("HAS_WEBGL",(()=>P.getNumber("WEBGL_VERSION")>0)),P.registerFlag("WEBGL_VERSION",(()=>O(2)?2:O(1)?1:0)),P.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),P.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===P.get("WEBGL_VERSION"))),P.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),P.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),P.registerFlag("WEBGL_PACK",(()=>P.getBool("HAS_WEBGL"))),P.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_PACK_CLIP",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>!1)),P.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_PACK_REDUCE",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_LAZILY_UNPACK",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_CONV_IM2COL",(()=>P.getBool("WEBGL_PACK"))),P.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(t){if(null==R){const e=s(t);R=e.getParameter(e.MAX_TEXTURE_SIZE)}return R}(P.getNumber("WEBGL_VERSION")))),P.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(t){if(null==I){const e=s(t);I=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,I)}(P.getNumber("WEBGL_VERSION")))),P.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const t=P.getNumber("WEBGL_VERSION");return 0===t?0:function(t){if(0===t)return 0;let e;const n=s(t);return e=D(n,"EXT_disjoint_timer_query_webgl2")&&2===t?2:D(n,"EXT_disjoint_timer_query")?1:0,e}(t)})),P.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>P.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!r.C2$.t())),P.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(t){if(0===t)return!1;const e=s(t);if(1===t){if(!D(e,"OES_texture_float"))return!1}else if(!D(e,"EXT_color_buffer_float"))return!1;return L(e)}(P.getNumber("WEBGL_VERSION")))),P.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!P.getBool("WEBGL_FORCE_F16_TEXTURES")&&P.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),P.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(t){if(0===t)return!1;const e=s(t);if(1!==t){if(D(e,"EXT_color_buffer_float"))return L(e);const t="EXT_color_buffer_half_float";if(D(e,t)){const n=e.getExtension(t);return function(t,e){const n=d(t,e),r=t.createTexture();t.bindTexture(t.TEXTURE_2D,r),t.texImage2D(t.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const i=t.createFramebuffer();t.bindFramebuffer(t.FRAMEBUFFER,i),t.framebufferTexture2D(t.FRAMEBUFFER,t.COLOR_ATTACHMENT0,t.TEXTURE_2D,r,0);const o=t.checkFramebufferStatus(t.FRAMEBUFFER)===t.FRAMEBUFFER_COMPLETE;return t.bindTexture(t.TEXTURE_2D,null),t.bindFramebuffer(t.FRAMEBUFFER,null),t.deleteTexture(r),t.deleteFramebuffer(i),o}(e,n)}return!1}return!!D(e,"OES_texture_float")&&!!D(e,"WEBGL_color_buffer_float")&&L(e)}(P.getNumber("WEBGL_VERSION")))),P.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(t=P.getNumber("WEBGL_VERSION"))&&null!=s(t).fenceSync;var t})),P.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>P.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),P.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(t=>{if(t<0&&-1!==t)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${t}.`)})),r.SYM,r.Zz9,r.iJz,r.xJR,r.RFZ;const G=B(((t,e)=>t+e)),j=H(((t,e,n,r)=>({real:t+n,imag:e+r})));function X(t){return(e,n,i)=>{const o=r.D5U.WP(n,e.length);for(let n=0;n<e.length;++n)o[n]=t(e[n],i);return o}}function q(t,e,n){return({inputs:r,attrs:i,backend:o})=>{const{x:s}=r;if(F(s,t),"string"===s.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const a=o,u=a.data.get(s.dataId).values,c=n||s.dtype,l=e(u,c,i);return a.makeTensorInfo(s.shape,c,l)}}W(r.mm_,G,j),r.mm_;const Y=X((t=>Math.ceil(t))),K=(q(r.gJX,Y),r.gJX,X((t=>Math.exp(t)))),Z=(q(r.NEP,K),r.NEP,X((t=>Math.expm1(t)))),J=(q(r.Y0y,Z),r.Y0y,X((t=>Math.floor(t)))),Q=(q(r.OR,J),r.OR,X((t=>Math.log(t))));function tt(t,e,n,i){const o=r.D5U.WP(i,r.D5U.NA(n));for(let n=0;n<o.length;++n){const r=n*e;let i=t[r];for(let n=0;n<e;++n){const e=t[r+n];e>i&&(i=e)}o[n]=i}return o}q(r.ZbH,Q),r.ZbH;const et=B(((t,e)=>t*e)),nt=H(((t,e,n,r)=>({real:t*n-e*r,imag:t*r+e*n}))),rt=(W(r.wYn,et,nt),r.wYn,B(((t,e)=>t!==e?1:0))),it=(W(r.yQU,rt,null,"bool"),r.yQU,X((t=>1/Math.sqrt(t))));function ot(t,e,n,i,o){const s=r.kuN.isSliceContinous(i,e,n),a=r.D5U.NA(n),u=r.D5U.e3(i);if(s){const n=r.kuN.computeFlatOffset(e,u);return t.subarray(n,n+a)}const c=r.D5U.WP(o,a);for(let o=0;o<a;++o){const s=n.length,a=r.D5U.e3(n),l=r.D5U.NE(o,s,a).map(((t,n)=>t+e[n])),h=r.D5U.qy(l,i.length,u);c[o]=t[h]}return c}q(r.bV0,it),r.bV0,r.p2w;const st=B(((t,e)=>{const n=t-e;return n*n})),at=(W(r._tC,st),r._tC,B(((t,e)=>t-e))),ut=H(((t,e,n,r)=>({real:t-n,imag:e-r})));function ct(t,e,n,i,o){const s=e.length,a=r.D5U.NA(e),u=r.D5U.e3(e),c=r.D5U.e3(o),l=r.D5U.WP(n,r.D5U.NA(o));for(let e=0;e<a;++e){const n=r.D5U.NE(e,s,u),o=new Array(n.length);for(let t=0;t<o.length;t++)o[t]=n[i[t]];l[r.D5U.qy(o,s,c)]=t[e]}return l}function lt(t,e,n,i){const o=r.D5U.EC(e,n)[0],s=[1,n[0],1];for(let t=0;t<o;t++)s[0]*=n[t];s[1]=n[o];for(let t=o+1;t<n.length;t++)s[2]*=n[t];const a={},u=new Int32Array(n[o]),c=new r.YDk(s,i,t),l=[],h=1===s[0]&&1===s[2];for(let e=0;e<n[o];e++){let n;if(h)n=t[e].toString();else{const t=[];for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)t.push(c.get(n,e,r));n=t.join(",")}if(void 0!==a[n])u[e]=a[n];else{const t=Object.keys(a).length;a[n]=t,u[e]=t,l.push(e)}}const p=s.slice();p[1]=Object.keys(a).length;const d=new r.YDk(p,i);l.forEach(((t,e)=>{for(let n=0;n<s[0];n++)for(let r=0;r<s[2];r++)d.set(c.get(n,t,r),n,e,r)}));const f=n.slice();return f[o]=p[1],{outputValues:d.values,outputShape:f,indices:u}}W(r.Tr8,at,ut),r.Tr8;const{simpleAbsImpl:ht,addImpl:pt,ceilImpl:dt,expImpl:ft,expm1Impl:mt,floorImpl:gt,logImpl:yt,maxImpl:vt,multiplyImpl:xt,rsqrtImpl:bt,sliceImpl:wt,subImpl:_t,transposeImpl:St,uniqueImpl:Tt}=t;class Et{constructor(t,e){this.outputShape=[],this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`float v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class Mt{constructor(t,e){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.variableNames=e.map(((t,e)=>`T${e}`));const n=[];this.variableNames.forEach((t=>{n.push(`vec4 v${t} = get${t}AtOutCoords();`)}));const r=this.variableNames.map((t=>`v${t}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}class Ct{constructor(t,e,n){this.variableNames=["A"];const{windowSize:r,batchSize:i,outSize:o}=t;n||this.variableNames.push("bestIndicesA"),this.outputShape=[i,o];const s="max"===e?">":"<",a=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${a};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${s} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}function At(t,e){return["x","y","z","w","u","v"].slice(0,e).map((e=>`${t}.${e}`))}function Nt(t,e){return 1===e?[t]:At(t,e)}function Rt(){let t,e,n,i,o,s,a,u,c,l;return 2===(0,r.OBj)().getNumber("WEBGL_VERSION")?(t="#version 300 es",e="in",n="out",i="in",o="texture",s="outputColor",a="out vec4 outputColor;",u="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",c="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(t="",e="attribute",n="varying",i="varying",o="texture2D",s="gl_FragColor",a="",u="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",c="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:t,attribute:e,varyingVs:n,varyingFs:i,texture2D:o,output:s,defineOutput:a,defineSpecialNaN:u,defineSpecialInf:c,defineRound:l}}function It(t,e,n="index"){const i=r.D5U.e3(e);return i.map(((e,r)=>`int ${t[r]} = ${n} / ${e}; ${r===i.length-1?`int ${t[r+1]} = ${n} - ${t[r]} * ${e}`:`index -= ${t[r]} * ${e}`};`)).join("")}function Dt(t){const e=r.D5U.e3(t).map((t=>t.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${e[0]} + coords.y * ${e[1]} + coords.z;\n  }\n`}const Ot="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:Lt}=r.Wap;function kt(t,e,n,i){const o=[];t.forEach((t=>{const e=r.D5U.NA(t.shapeInfo.logicalShape);t.shapeInfo.isUniform?o.push(`uniform float ${t.name}${e>1?`[${e}]`:""};`):(o.push(`uniform sampler2D ${t.name};`),o.push(`uniform int offset${t.name};`))}));const s=o.join("\n"),a=t.map((t=>function(t,e,n=!1){let i="";i+=n?$t(t):Pt(t);const o=t.shapeInfo.logicalShape,s=e.logicalShape;return o.length<=s.length&&(i+=n?function(t,e){const n=t.name,i=n.charAt(0).toUpperCase()+n.slice(1),o="get"+i+"AtOutCoords",s=t.shapeInfo.logicalShape.length,a=e.logicalShape.length,u=Lt(t.shapeInfo.logicalShape,e.logicalShape),c=Ht(a),l=a-s;let h;const p=["x","y","z","w","u","v"];h=0===s?"":a<2&&u.length>=1?"coords = 0;":u.map((t=>`coords.${p[t+l]} = 0;`)).join("\n");let d="";d=a<2&&s>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${p[e+l]}`)).join(", ");let f="return outputValue;";const m=1===r.D5U.NA(t.shapeInfo.logicalShape),g=1===r.D5U.NA(e.logicalShape);if(1!==s||m||g){if(m&&!g)f=1===a?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(u.length){const t=s-2,e=s-1;u.indexOf(t)>-1&&u.indexOf(e)>-1?f="return vec4(outputValue.x);":u.indexOf(t)>-1?f="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":u.indexOf(e)>-1&&(f="return vec4(outputValue.xx, outputValue.zz);")}}else f="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${o}() {\n      ${c} coords = getOutputCoords();\n      ${h}\n      vec4 outputValue = get${i}(${d});\n      ${f}\n    }\n  `}(t,e):function(t,e){const n=t.name,i=n.charAt(0).toUpperCase()+n.slice(1),o="get"+i+"AtOutCoords",s=e.texShape,a=t.shapeInfo.texShape,u=t.shapeInfo.logicalShape.length,c=e.logicalShape.length;if(!t.shapeInfo.isUniform&&u===c&&null==t.shapeInfo.flatOffset&&r.D5U.cO(a,s))return`\n      float ${o}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=Ht(c),h=Lt(t.shapeInfo.logicalShape,e.logicalShape),p=c-u;let d;const f=["x","y","z","w","u","v"];d=0===u?"":c<2&&h.length>=1?"coords = 0;":h.map((t=>`coords.${f[t+p]} = 0;`)).join("\n");let m="";return m=c<2&&u>0?"coords":t.shapeInfo.logicalShape.map(((t,e)=>`coords.${f[e+p]}`)).join(", "),`\n    float ${o}() {\n      ${l} coords = getOutputCoords();\n      ${d}\n      return get${i}(${m});\n    }\n  `}(t,e)),i}(t,e,i))).join("\n"),u=e.texShape,c=Rt(),l=function(t){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${t.texture2D}(textureSampler, uv).r;\n    }\n  `}(c);let h,p,d=function(t){return`${t.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${t.varyingFs} vec2 resultUV;\n    ${t.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${t.defineSpecialNaN}\n    ${t.defineSpecialInf}\n    ${t.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${Bt}\n    ${Ft}\n    ${Ut}\n  `}(c);return e.isPacked?(h=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];return 1===n[0]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return 2 * (resTexRC.x * ${n[1]} + resTexRC.y);\n    }\n  `}(0,e);case 2:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)];if(r.D5U.cO(t,e))return`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${n[0]}, ${n[1]}));\n      }\n    `;const i=Math.ceil(t[1]/2);return`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n      int r = 2 * (index / ${i});\n      int c = imod(index, ${i}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[2]/2),i=r*Math.ceil(t[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(t,e);default:return function(t,e){const n=[Math.ceil(e[0]/2),Math.ceil(e[1]/2)],r=Math.ceil(t[t.length-1]/2),i=r*Math.ceil(t[t.length-2]/2);let o=i,s="",a="b, r, c";for(let e=2;e<t.length-1;e++)o*=t[t.length-e-1],s=`\n      int b${e} = index / ${o};\n      index -= b${e} * ${o};\n    `+s,a=`b${e}, `+a;return`\n    ivec${t.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      int index = resTexRC.x * ${n[1]} + resTexRC.y;\n\n      ${s}\n\n      int b = index / ${i};\n      index -= b * ${i};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${t.length}(${a});\n    }\n  `}(t,e)}}(e.logicalShape,u),p=function(t){return`\n    void setOutput(vec4 val) {\n      ${t.output} = val;\n    }\n  `}(c)):(h=function(t,e){switch(t.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return 1===(n=e)[0]?`\n      int getOutputCoords() {\n        return int(resultUV.x * ${n[1]}.0);\n      }\n    `:1===n[1]?`\n      int getOutputCoords() {\n        return int(resultUV.y * ${n[0]}.0);\n      }\n    `:`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${n[0]}, ${n[1]}));\n      return resTexRC.x * ${n[1]} + resTexRC.y;\n    }\n  `;case 2:return function(t,e){return r.D5U.cO(t,e)?`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${e[0]}, ${e[1]}));\n      }\n    `:1===t[1]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===t[0]?`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${e[0]}, ${e[1]}));\n        int index = resTexRC.x * ${e[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      int r = index / ${t[1]};\n      int c = index - r * ${t[1]};\n      return ivec2(r, c);\n    }\n  `}(t,e);case 3:return function(t,e){const n=It(["r","c","d"],t);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec3(r, c, d);\n    }\n  `}(t,e);case 4:return function(t,e){const n=It(["r","c","d","d2"],t);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n      ${n}\n      return ivec4(r, c, d, d2);\n    }\n  `}(t,e);case 5:return function(t,e){const n=It(["r","c","d","d2","d3"],t);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${e[0]},\n                             ${e[1]}));\n\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(t,e);case 6:return function(t,e){const n=It(["r","c","d","d2","d3","d4"],t);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${e[0]}, ${e[1]}));\n      int index = resTexRC.x * ${e[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(t,e);default:throw new Error(`${t.length}-D output sampling is not yet supported`)}var n}(e.logicalShape,u),p=function(t){return`\n    void setOutput(float val) {\n      ${t.output} = vec4(val, 0, 0, 0);\n    }\n  `}(c)),i&&(d+=zt),[d,l,p,s,h,a,n].join("\n")}function Pt(t){const e=t.shapeInfo.logicalShape;switch(e.length){case 0:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`float ${n}() {return ${e};}`;const[r,i]=t.shapeInfo.texShape;if(1===r&&1===i)return`\n      float ${n}() {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const[o,s]=t.shapeInfo.texShape;return`\n    float ${n}() {\n      vec2 uv = uvFromFlat(${o}, ${s}, ${Vt(e)});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1);if(t.shapeInfo.isUniform)return`\n      float ${n}(int index) {\n        ${Wt(t)}\n      }\n    `;const r=t.shapeInfo.texShape,i=r[0],o=r[1];if(1===o&&1===i)return`\n      float ${n}(int index) {\n        return sampleTexture(${e}, halfCR);\n      }\n    `;const s=Vt(e);return 1===o?`\n      float ${n}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${s}) + 0.5) / ${i}.0);\n        return sampleTexture(${e}, uv);\n      }\n    `:1===i?`\n      float ${n}(int index) {\n        vec2 uv = vec2((float(index + ${s}) + 0.5) / ${o}.0, 0.5);\n        return sampleTexture(${e}, uv);\n      }\n    `:`\n    float ${n}(int index) {\n      vec2 uv = uvFromFlat(${i}, ${o}, index + ${s});\n      return sampleTexture(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t.shapeInfo.texShape;if(null!=o&&r.D5U.cO(e,o)){const t=o[0];return`\n    float ${i}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${o[1]}.0, ${t}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `}const{newShape:s,keptDims:a}=r.D5U.bp(e),u=s;if(u.length<e.length){const e=["row","col"];return`\n      ${Pt(Gt(t,u))}\n      float ${i}(int row, int col) {\n        return ${i}(${jt(e,a)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${e[1]}, 1)));\n        ${Wt(t)}\n      }\n    `;const c=o[0],l=o[1],h=Vt(n);return 1===l?`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${c}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `:1===c?`\n    float ${i}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${e[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${l}.0, 0.5);\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n  float ${i}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${e[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${c}, ${l}, index);\n    return sampleTexture(${n}, uv);\n  }\n`}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e[1]*e[2],s=e[2],{newShape:a,keptDims:u}=r.D5U.bp(e),c=a;if(c.length<e.length){const e=["row","col","depth"];return`\n        ${Pt(Gt(t,c))}\n        float ${i}(int row, int col, int depth) {\n          return ${i}(${jt(e,u)});\n        }\n      `}if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${o}, ${s}, 1)));\n        ${Wt(t)}\n      }\n    `;const l=t.shapeInfo.texShape,h=l[0],p=l[1],d=t.shapeInfo.flatOffset;if(p===o&&null==d)return`\n        float ${i}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${s}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${n}, uv);\n        }\n      `;if(p===s&&null==d)return`\n    float ${i}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${e[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${n}, uv);\n    }\n  `;return`\n      float ${i}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${o} + col * ${s} + depth + ${Vt(n)};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${n}, uv);\n      }\n  `}(t);case 4:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e[3],s=e[2]*o,a=e[1]*s,{newShape:u,keptDims:c}=r.D5U.bp(e);if(u.length<e.length){const e=["row","col","depth","depth2"];return`\n      ${Pt(Gt(t,u))}\n      float ${i}(int row, int col, int depth, int depth2) {\n        return ${i}(${jt(e,c)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${a}, ${s}, ${o}, 1)));\n        ${Wt(t)}\n      }\n    `;const l=t.shapeInfo.flatOffset,h=t.shapeInfo.texShape,p=h[0],d=h[1];if(d===a&&null==l)return`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${s}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===o&&null==l)return`\n      float ${i}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${e[1]*e[2]}, ${e[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${i}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${a} + col * ${s} +\n          depth * ${o} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${Vt(n)});\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 5:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),o=e[4],s=e[3]*o,a=e[2]*s,u=e[1]*a,{newShape:c,keptDims:l}=r.D5U.bp(e);if(c.length<e.length){const e=["row","col","depth","depth2","depth3"];return`\n      ${Pt(Gt(t,c))}\n      float ${i}(int row, int col, int depth, int depth2, int depth3) {\n        return ${i}(${jt(e,l)});\n      }\n    `}if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${u}, ${a}, ${s}, ${o})) +\n          depth3;\n        ${Wt(t)}\n      }\n    `;const h=t.shapeInfo.flatOffset,p=t.shapeInfo.texShape,d=p[0],f=p[1];if(f===u&&null==h)return`\n      float ${i}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${a}, ${s}, ${o}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===o&&null==h)return`\n      float ${i}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]},\n               ${e[2]*e[3]}, ${e[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${i}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${u} + col * ${a} + depth * ${s} +\n          depth2 * ${o} + depth3 + ${Vt(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);case 6:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:o,keptDims:s}=r.D5U.bp(e);if(o.length<e.length){const e=["row","col","depth","depth2","depth3","depth4"];return`\n      ${Pt(Gt(t,o))}\n      float ${i}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${i}(${jt(e,s)});\n      }\n    `}const a=e[5],u=e[4]*a,c=e[3]*u,l=e[2]*c,h=e[1]*l;if(t.shapeInfo.isUniform)return`\n      float ${i}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${h}, ${l}, ${c}, ${u})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${a}, 1)));\n        ${Wt(t)}\n      }\n    `;const p=t.shapeInfo.flatOffset,d=t.shapeInfo.texShape,f=d[0],m=d[1];if(m===h&&null==p)return`\n      float ${i}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${c}, ${u}, ${a})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(m===a&&null==p)return`\n      float ${i}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${e[1]*e[2]*e[3]*e[4]},\n               ${e[2]*e[3]*e[4]},\n               ${e[3]*e[4]},\n               ${e[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${m}.0, ${f}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${i}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${h} + col * ${l} + depth * ${c} +\n          depth2 * ${u} + depth3 * ${a} + depth4 + ${Vt(n)};\n      vec2 uv = uvFromFlat(${f}, ${m}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(t);default:throw new Error(`${e.length}-D input sampling is not yet supported`)}}function $t(t){switch(t.shapeInfo.logicalShape.length){case 0:return function(t){const e=t.name;return`\n    vec4 ${"get"+e.charAt(0).toUpperCase()+e.slice(1)}() {\n      return ${Rt().texture2D}(${e}, halfCR);\n    }\n  `}(t);case 1:return function(t){const e=t.name,n="get"+e.charAt(0).toUpperCase()+e.slice(1),r=t.shapeInfo.texShape,i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)],o=Rt();return`\n    vec4 ${n}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${o.texture2D}(${e}, uv);\n    }\n  `}(t);case 2:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,i="get"+n.charAt(0).toUpperCase()+n.slice(1),o=t.shapeInfo.texShape,s=o[0],a=o[1],u=Rt();if(null!=o&&r.D5U.cO(e,o))return`\n      vec4 ${i}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${a}.0, ${s}.0);\n\n        return ${u.texture2D}(${n}, uv);\n      }\n    `;const c=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)];return`\n    vec4 ${i}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(e[1]/2)}, ${c[0]}, ${c[1]}, row, col);\n      return ${u.texture2D}(${n}, uv);\n    }\n  `}(t);case 3:return function(t){const e=t.shapeInfo.logicalShape,n=t.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),i=t.shapeInfo.texShape,o=[Math.ceil(i[0]/2),Math.ceil(i[1]/2)];if(1===e[0]){const n=[1,2],i=["b","row","col"];return`\n        ${$t(Gt(t,e.slice(1)))}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${jt(i,n)});\n        }\n      `}const s=o[0],a=o[1],u=Math.ceil(e[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${s}, ${a}, ${u*Math.ceil(e[1]/2)}, ${u}, b, row, col);\n      return ${Rt().texture2D}(${n}, uv);\n    }\n  `}(t);default:return function(t){const e=t.shapeInfo.logicalShape,n=e.length,r=t.name,i="get"+r.charAt(0).toUpperCase()+r.slice(1),o=t.shapeInfo.texShape,s=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],a=s[0],u=s[1],c=Math.ceil(e[n-1]/2);let l=c*Math.ceil(e[n-2]/2),h="int b, int row, int col",p=`b * ${l} + (row / 2) * ${c} + (col / 2)`;for(let t=2;t<n-1;t++)h=`int b${t}, `+h,l*=e[n-t-1],p=`b${t} * ${l} + `+p;return`\n    vec4 ${i}(${h}) {\n      int index = ${p};\n      int texR = index / ${u};\n      int texC = index - texR * ${u};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${u}, ${a});\n      return ${Rt().texture2D}(${r}, uv);\n    }\n  `}(t)}}const Bt="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ft="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",Ut="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",zt="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function Vt(t){return`offset${t}`}function Wt(t){const e=t.name,n=r.D5U.NA(t.shapeInfo.logicalShape);return n<2?`return ${e};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${e}[i];\n      }\n    }\n  `}function Ht(t){if(t<=1)return"int";if(2===t)return"ivec2";if(3===t)return"ivec3";if(4===t)return"ivec4";if(5===t)return"ivec5";if(6===t)return"ivec6";throw Error(`GPU for rank ${t} is not yet supported`)}function Gt(t,e){const n=JSON.parse(JSON.stringify(t));return n.shapeInfo.logicalShape=e,n}function jt(t,e){return e.map((e=>t[e])).join(", ")}class Xt{constructor(t,e,n,i){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,r.D5U.hu(t.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const o=t[t.length-1],s=Math.ceil(o/e);this.outputShape=t.slice(0,-1),s>1&&this.outputShape.push(s),i||this.variableNames.push("bestIndicesA");const a=this.outputShape,u=a.length,c=Ht(u),l=Nt("coords",u);let h,p;if(1===s){p=u+1;const t=Ht(p);h=`\n        ${t} sourceLocR = ${t}(${l.join()}, 0);\n        ++${l[u-1]};\n        ${t} sourceLocG = ${t}(${l.join()}, 0);\n        ++${l[u-2]};\n        ${t} sourceLocA = ${t}(${l.join()}, 0);\n        --${l[u-1]};\n        ${t} sourceLocB = ${t}(${l.join()}, 0);\n        --${l[u-2]};`}else p=u,h=`\n        ${c} sourceLocR = coords;\n        ++${l[u-1]};\n        ${c} sourceLocG = coords;\n        ++${l[u-2]};\n        ${c} sourceLocA = coords;\n        --${l[u-1]};\n        ${c} sourceLocB = coords;\n        --${l[u-2]};`;const d=["x","y","z","w","u","v"].slice(0,p),f="."+d[p-1],m=d.map((t=>"int "+t)),g=Nt("sourceLocR",p-1).concat("inIdx.r"),y=Nt("sourceLocG",p-1).concat("inIdx.g"),v=Nt("sourceLocB",p-1).concat("inIdx.b"),x=Nt("sourceLocA",p-1).concat("inIdx.a"),b="max"===n?"greaterThan":"lessThan",w=i?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${v.join()}),\n                             getBestIndicesAChannel(${x.join()})));`,_=`vec4(\n            getAChannel(${g.join()}),\n            hasNextCol ? getAChannel(${y.join()}) : 0.,\n            hasNextRow ? getAChannel(${v.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${x.join()}) : 0.)`,S=i?"":`\n      float getBestIndicesAChannel(${m.join()}) {\n        return getChannel(getBestIndicesA(${d.join()}),\n                                          vec2(${d.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${m.join()}) {\n        return getChannel(getA(${d.join()}),\n                               vec2(${d.slice(-2).join()}));\n      }\n      ${S}\n      void main() {\n        ${c} coords = getOutputCoords();\n        bool hasNextCol = ${l[u-1]} < ${a[u-1]-1};\n        bool hasNextRow = ${l[u-2]} < ${a[u-2]-1};\n        ${h}\n        ivec4 srcIdx = ivec4(sourceLocR${f}, sourceLocG${f},\n          sourceLocB${f}, sourceLocA${f}) * ${e};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${_};\n\n        for (int i = 0; i < ${e}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${_};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${b}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}class qt{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,i=t.strideWidth,o=t.dilationHeight,s=t.dilationWidth,a=t.effectiveFilterHeight,u=t.effectiveFilterWidth,c=a-1-t.padInfo.top,l=u-1-t.padInfo.left,h=1/(e*n);this.userCode=`\n      const ivec2 pads = ivec2(${c}, ${l});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${a};\n            wR += ${o}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${s}) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Yt{constructor(t){this.variableNames=["dy"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,i=t.strideDepth,o=t.strideHeight,s=t.strideWidth,a=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterDepth,h=t.effectiveFilterHeight,p=t.effectiveFilterWidth,d=l-1-t.padInfo.front,f=h-1-t.padInfo.top,m=p-1-t.padInfo.left,g=1/(e*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${l};\n            wD += ${a}) {\n          float dyD = float(dyDCorner + wD) / ${i}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${o}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${c}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Kt="return (a < 0.) ? b * a : a;";class Zt{constructor(t,e,n){this.variableNames=["A","B"],this.outputShape=r.Wap.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${t}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}const Jt="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n";class Qt{constructor(t,e,n,i=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=r.Wap.assertAndGetBroadcastShape(e,n);const o=this.outputShape.length;let s="";if(i)if(0===o||1===r.D5U.NA(this.outputShape))s="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(s=`\n          ${Ht(o)} coords = getOutputCoords();\n        `,1===o)s+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const t=Nt("coords",o);s+=`\n            bool nextRowOutOfBounds =\n              (${t[o-2]} + 1) >= ${this.outputShape[o-2]};\n            bool nextColOutOfBounds =\n              (${t[o-1]} + 1) >= ${this.outputShape[o-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${t}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${s}\n\n        setOutput(result);\n      }\n    `}}class te{constructor(t){this.variableNames=["A"],this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class ee{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode="\n      uniform float minVal;\n      uniform float maxVal;\n\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}getCustomSetupFunc(t,e){return(n,r)=>{null==this.minLoc&&(this.minLoc=n.getUniformLocationNoThrow(r,"minVal"),this.maxLoc=n.getUniformLocationNoThrow(r,"maxVal")),n.gl.uniform1f(this.minLoc,t),n.gl.uniform1f(this.maxLoc,e)}}}class ne{constructor(t){this.variableNames=["real","imag"],this.outputShape=t,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}class re{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,i=t.padInfo.left,o="channelsLast"===t.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${i};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              if (${o}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ie{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,i=t.strideWidth,o="channelsLast"===t.dataFormat,s=e-1-t.padInfo.top,a=n-1-t.padInfo.left,u=o?1:2,c=o?2:3,l=o?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${l}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${c}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n\n              if (${o}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class oe{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,i=t.padInfo.front,o=t.padInfo.top,s=t.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yF = 0; yF < ${t.outDepth}; yF++) {\n            int xF = wF + yF * ${e} - ${i};\n\n            if (xF < 0 || xF >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${t.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${o};\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${t.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${s};\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class se{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterDepth,n=t.filterHeight,r=t.filterWidth,i=t.strideDepth,o=t.strideHeight,s=t.strideWidth,a=e-1-t.padInfo.front,u=n-1-t.padInfo.top,c=r-1-t.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${a}, ${u}, ${c});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${e}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${i}.0;\n\n          if (dyF < 0.0 || dyF >= ${t.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${e} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${o}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${t.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ae{constructor(t){this.variableNames=["x","dy"],this.outputShape=t.filterShape;const e=t.strideHeight,n=t.strideWidth,r=t.padInfo.top,i=t.padInfo.left,o=t.outChannels/t.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${o} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${t.batchSize}; b++) {\n          for (int yR = 0; yR < ${t.outHeight}; yR++) {\n            int xR = wR + yR * ${e} - ${r};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${t.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${i};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ue{constructor(t){this.variableNames=["dy","W"],this.outputShape=t.inShape;const e=t.filterHeight,n=t.filterWidth,r=t.strideHeight,i=t.strideWidth,o=e-1-t.padInfo.top,s=n-1-t.padInfo.left,a=t.outChannels/t.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${o}, ${s});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${e}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${e} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${i}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${a}; dm++) {\n              int d2 = d1 * ${a} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ce{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.padInfo.top,o=t.padInfo.left,s=t.strideHeight,a=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,l=t.filterHeight,h=t.filterWidth,p=4*Math.floor(t.inChannels/4),d=t.inChannels%4,f="channelsLast"===t.dataFormat,m=f?1:2,g=f?2:3,y=f?3:1;let v="",x="";n&&(v=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,x="result = activation(result);");const b=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${v}\n\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${y}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${m}], coords[${g}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${l}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${h}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${t.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${p}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${f}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===d}) {\n\n              if (${f}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${p}) *\n                    getW(wR, wC, ${p}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${p}, xR, xC) *\n                    getW(wR, wC, ${p}, d2);\n              }\n\n            } else if (${2===d}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2)\n              );\n\n              if (${f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===d}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${p}, d2),\n                getW(wR, wC, ${p} + 1, d2),\n                getW(wR, wC, ${p} + 2, d2)\n              );\n\n              if (${f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${p}),\n                  getX(batch, xR, xC, ${p} + 1),\n                  getX(batch, xR, xC, ${p} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${p}, xR, xC),\n                  getX(batch, ${p} + 1, xR, xC),\n                  getX(batch, ${p} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${b}\n        ${x}\n        setOutput(result);\n      }\n    `}}class le{constructor(t){this.variableNames=["x","W"],this.outputShape=t.outShape;const e=t.padInfo.front,n=t.padInfo.top,r=t.padInfo.left,i=t.strideDepth,o=t.strideHeight,s=t.strideWidth,a=t.dilationDepth,u=t.dilationHeight,c=t.dilationWidth,l=t.filterDepth,h=t.filterHeight,p=t.filterWidth,d=4*Math.floor(t.inChannels/4),f=t.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${i}, ${o}, ${s});\n      const ivec3 pads = ivec3(${e}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${l}; wF++) {\n          int xF = xFCorner + wF * ${a};\n\n          if (xF < 0 || xF >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${c};\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class he{constructor(t,e=!1,n=null,r=!1){this.variableNames=["x","W"],this.outputShape=t.outShape;const i=t.inHeight,o=t.inWidth,s=t.padInfo.top,a=t.padInfo.left,u=t.strideHeight,c=t.strideWidth,l=t.dilationHeight,h=t.dilationWidth,p=t.filterHeight,d=t.filterWidth,f=t.outChannels/t.inChannels;let m="",g="";n&&(m=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,g="result = activation(result);");const y=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${m}\n\n      const ivec2 strides = ivec2(${u}, ${c});\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${f};\n        int q = d2 - d1 * ${f};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${p}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${i}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${d}; wC++) {\n            int xC = xCCorner + wC * ${h};\n\n            if (xC < 0 || xC >= ${o}) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${y}\n        ${g}\n        setOutput(result);\n      }\n    `}}class pe{constructor(t,e=!1,n=null,i=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.outShape;const o=t.inHeight,s=t.inWidth,a=t.padInfo.top,u=t.padInfo.left,c=t.strideHeight,l=t.strideWidth,h=t.dilationHeight,p=t.dilationWidth,d=t.filterHeight,f=t.filterWidth,m=f;let g="int xR; int xC; int xCOffset;";for(let t=0;t<d;t++)for(let e=0;e<f;e++)g+=`\n          vec4 xTexelR${t}C${2*e} = vec4(0.);\n          vec4 wR${t}C${e} = vec4(0.);\n          vec4 xR${t}C${e} = vec4(0.);`;for(let t=0;t<d;t++)for(let e=0;e<m;e++){const n=2*e;if(g+=`\n          xR = xRCorner + ${t*h};\n          xC = xCCorner + ${n*p};\n        `,1===l){if(n<f&&(g+=u%2==1?`\n                xCOffset = xC + 1;\n                if(xR >= 0 && xR < ${o} && xCOffset >= 0 && xCOffset < ${s}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${s}) {\n                    xTexelR${t}C${n}.zw = vec2(0.);\n                  }\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + 1 - 2;\n                if(xR >= 0 && xR < ${o} && xCOffset >= 0 && xCOffset < ${s}) {\n                  vec4 previous = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if(xCOffset + 1 >= ${s}) {\n                    previous.zw = vec2(0.);\n                  }\n\n                  xR${t}C${n} = vec4(previous.zw, xTexelR${t}C${n}.xy);\n                } else {\n                  xR${t}C${n} = vec4(0, 0, xTexelR${t}C${n}.xy);\n                }\n              `:`\n                if(xR >= 0 && xR < ${o} && xC >= 0 && xC < ${s}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xR${t}C${n} = xTexelR${t}C${n};\n              `,n+1<f)){const e=u%2==0?r.D5U.nY(p):p;p%2==0&&u%2==1||p%2!=0&&u%2!=1?(g+=`\n                  xCOffset = xC + ${u%2} + ${e};\n\n                  if(xR >= 0 && xR < ${o} &&\n                    xCOffset >= 0 && xCOffset < ${s}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n                `,p>1&&(g+=`\n                    xCOffset -= 2;\n                    if(xR >= 0 && xR < ${o} &&\n                      xCOffset >= 0 && xCOffset < ${s}) {\n                      xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                    } else {\n                      xTexelR${t}C${n} = vec4(0.);\n                    }\n                  `),g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.xy);\n                `):g+=`\n                  xCOffset = xC + ${e};\n\n                  if(xR >= 0 && xR < ${o} &&\n                    xCOffset >= 0 && xCOffset < ${s}) {\n                    xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                  }\n\n                  xR${t}C${n+1} = xTexelR${t}C${n+2};\n                `}}else n<f&&(g+=`\n              if(xR >= 0 && xR < ${o}) {\n            `,u%2==1?(g+=`\n                xCOffset = xC + 1 - ${l};\n                if(xCOffset >= 0 && xCOffset < ${s}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < ${s}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xC + 1, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n              `,n+1<f&&(g+=`\n                  vec4 final = vec4(0.);\n                  xCOffset = xC + 1 + ${l};\n                  if(xCOffset >= 0 && xCOffset < ${s}) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xR${t}C${n+1} = vec4(xTexelR${t}C${n+2}.xy, final.xy);\n                `)):(g+=`\n                if(xC >= 0 && xC < ${s}) {\n                  xTexelR${t}C${n} = getX(batch, xR, xC, d1);\n                } else {\n                  xTexelR${t}C${n} = vec4(0.);\n                }\n\n                xCOffset = xC + ${l};\n                if(xCOffset >= 0 && xCOffset < ${s}) {\n                  xTexelR${t}C${n+2} = getX(batch, xR, xCOffset, d1);\n                } else {\n                  xTexelR${t}C${n+2} = vec4(0.);\n                }\n\n                xR${t}C${n} = vec4(\n                  xTexelR${t}C${n}.xy, xTexelR${t}C${n+2}.xy);\n              `,n+1<f&&(g+=`\n                  xR${t}C${n+1} = vec4(\n                    xTexelR${t}C${n}.zw, xTexelR${t}C${n+2}.zw);\n                `)),g+="}");n<f&&(g+=`\n            vec4 wTexelR${t}C${n} = getW(${t}, ${n}, d1, q);\n            wR${t}C${n} = vec4(wTexelR${t}C${n}.xz, wTexelR${t}C${n}.xz);\n          `,n+1<f&&(g+=`\n              vec4 wTexelR${t}C${n+1} = getW(${t}, ${n+1}, d1, q);\n              wR${t}C${n+1} =\n                vec4(wTexelR${t}C${n+1}.xz, wTexelR${t}C${n+1}.xz);`))}for(let t=0;t<d;t++)for(let e=0;e<f;e++)g+=`dotProd += xR${t}C${e} * wR${t}C${e};`;let y="",v="";n&&(y=i?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,v="result = activation(result);");const x=e?"result += getBiasAtOutCoords();":"";e&&this.variableNames.push("bias"),i&&this.variableNames.push("preluActivationWeights"),this.userCode=`\n      ${y}\n\n      const ivec2 strides = ivec2(${c}, ${l});\n      const ivec2 pads = ivec2(${a}, ${u});\n\n      void main() {\n\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2;\n        int q = 0;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        vec4 dotProd = vec4(0.);\n\n        ${g}\n\n        vec4 result = dotProd;\n        ${x}\n        ${v}\n        setOutput(result);\n      }\n    `}}class de{constructor(t,e,n,r,i){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[o,s,a,u]=t,[c]=e,[l,h]=n;this.outputShape=[c,l,h,u];const p="bilinear"===r?1:0,[d,f]=[s-1+".0",a-1+".0"],[m,g,y]=l>1?[""+(s-1)/(l-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[v,x,b]=h>1?[""+(a-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${v});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${o}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${i}));\n          return;\n        }\n        float in_x = ${b};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${i}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}class fe{constructor(t,e,n){this.variableNames=["x"],this.outputShape=t;const r=t.length,i=e?"0.0":`getX(${me(r,"coords")})`,o=t[t.length-1];let s="",a="";e?(s=n?"end != "+(o-1):"end != 0",a=n?"end + 1":"end - 1"):(s=n?`end + pow2 < ${o}`:"end >= pow2",a=n?"end + pow2":"end - pow2"),this.userCode=`\n      uniform float index;\n      void main() {\n        ${Ht(r)} coords = getOutputCoords();\n        int end = ${ge(r,"coords")};\n        float val = ${i};\n        int pow2 = int(pow(2.0, index));\n        if (${s}) {\n          int idx = ${a};\n          ${ge(r,"coords")} = idx;\n          val += getX(${me(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.index&&(this.index=e.getUniformLocation(n,"index")),e.gl.uniform1f(this.index,t)}}}function me(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.x, ${e}.y`;if(3===t)return`${e}.x, ${e}.y, ${e}.z`;if(4===t)return`${e}.x, ${e}.y, ${e}.z, ${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}function ge(t,e){if(1===t)return`${e}`;if(2===t)return`${e}.y`;if(3===t)return`${e}.z`;if(4===t)return`${e}.w`;throw Error(`Cumulative sum for rank ${t} is not yet supported`)}class ye{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=a.DENSE;const e=h(t),n=Rt();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${It(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${n.output} = result;\n      }\n    `}}class ve{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=a.DENSE;const e=h(t),n=Rt();this.outputShape=t,this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${It(["r","c","d"],t)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n          vec2(${e[0]}, ${e[1]}));\n        int index = 4 * (resTexRC.x * ${e[1]} + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${n.output} = result;\n      }\n    `}}class xe{constructor(t,e,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=t,this.blockSize=e,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${e};\n      int offset_h = imod(h, ${e});\n      int in_w = w / ${e};\n      int offset_w = imod(w, ${e});\n      int offset_d = (offset_h * ${e} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}class be{constructor(t){this.variableNames=["X"],this.outputShape=[t,t],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}class we{constructor(t){this.variableNames=["A"],this.outTexUsage=u.DOWNLOAD;const e=Rt();this.outputShape=t,this.userCode=`\n      ${Ot}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${e.output} = encode_float(x);\n      }\n    `}}class _e{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=u.DOWNLOAD;const e=Rt();this.outputShape=t,this.userCode=`\n      ${Ot}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${e.output} = encode_float(x);\n      }\n    `}}class Se{constructor(t,e,n=!1){this.variableNames=["A"];const r=Rt(),[i,o]=e;this.outputShape=t;let s="result";n&&(s="floor(result * 255. + 0.5)"),this.userCode=`\n      ${Dt(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / ${o};\n        int c = imod(flatIndex, ${o});\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(${o}.0, ${i}.0);\n        vec4 values = ${r.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${r.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class Te{constructor(t,e,n=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const r=Rt(),[i,o]=e;this.outputShape=t;let s="",a="result";n&&(a="floor(result * 255. + 0.5)");for(let e=0;e<=1;e++)for(let n=0;n<=1;n++){const a=2*e+n;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${n} < ${t[2]}) {\n            localCoords[2] += ${n};\n            if(localCoords[1] + ${e} < ${t[1]}) {\n              localCoords[1] += ${e};\n\n              flatIndex = getFlatIndex(localCoords);\n              offset = imod(flatIndex, 4);\n\n              flatIndex = idiv(flatIndex, 4, 1.);\n\n              r = flatIndex / ${o};\n              c = imod(flatIndex, ${o});\n              uv = (vec2(c, r) + halfCR) / vec2(${o}.0, ${i}.0);\n              values = ${r.texture2D}(A, uv);\n\n              if(offset == 0) {\n                result[${a}] = values[0];\n              } else if(offset == 1) {\n                result[${a}] = values[1];\n              } else if(offset == 2) {\n                result[${a}] = values[2];\n              } else {\n                result[${a}] = values[3];\n              }\n            }\n          }\n        `}this.userCode=`\n      ${Dt(t)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        vec4 result = vec4(0.);\n        int flatIndex, r, c, offset;\n        ivec3 localCoords;\n        vec2 uv;\n        vec4 values;\n\n        ${s}\n\n        ${r.output} = ${a};\n      }\n    `}}class Ee{constructor(t,e){this.outputShape=[],this.variableNames=["x"],this.outputShape=t,this.userCode="\n      uniform float value;\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}getCustomSetupFunc(t){return(e,n)=>{null==this.valueLoc&&(this.valueLoc=e.getUniformLocationNoThrow(n,"value")),e.gl.uniform1f(this.valueLoc,t)}}}class Me{constructor(t,e,n){this.variableNames=["A","indices"];const r=t.slice();r[n]=e,this.outputShape=r,this.rank=r.length;const i=Ht(this.rank),o=function(t,e){const n=t.length;if(n>4)throw Error(`Gather for rank ${n} is not yet supported`);if(1===n)return"int(getIndices(resRC))";const r=["resRC.x","resRC.y","resRC.z","resRC.w"],i=[];for(let n=0;n<t.length;n++)n===e?i.push(`int(getIndices(${r[n]}))`):i.push(`${r[n]}`);return i.join()}(t,n);this.userCode=`\n      void main() {\n        ${i} resRC = getOutputCoords();\n        setOutput(getA(${o}));\n      }\n    `}}class Ce{constructor(t,e,n){this.sliceDim=t,this.strides=e,this.variableNames=["x","indices"],this.outputShape=n;const r=Ht(e.length),i=Ht(n.length),o=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${i} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${o};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}function Ae(t,e,n,i,o,s){!function(t,e){const n=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t<=0||e<=0)throw new Error(`Requested texture size [${t}x${e}] is invalid.`);if(t>n||e>n)throw new Error(`Requested texture size [${t}x${e}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(e,n);const a=function(t){return T(t,(()=>t.createTexture()),"Unable to create WebGLTexture.")}(t),u=t.TEXTURE_2D;return f(t,(()=>t.bindTexture(u,a))),f(t,(()=>t.texParameteri(u,t.TEXTURE_WRAP_S,t.CLAMP_TO_EDGE))),f(t,(()=>t.texParameteri(u,t.TEXTURE_WRAP_T,t.CLAMP_TO_EDGE))),f(t,(()=>t.texParameteri(u,t.TEXTURE_MIN_FILTER,t.NEAREST))),f(t,(()=>t.texParameteri(u,t.TEXTURE_MAG_FILTER,t.NEAREST))),f(t,(()=>t.texImage2D(u,0,i,e,n,0,o,s,null))),f(t,(()=>t.bindTexture(t.TEXTURE_2D,null))),a}function Ne(t){return t.internalFormatFloat}function Re(t){return t.internalFormatHalfFloat}function Ie(t){return t.downloadTextureFormat}function De(t){return t.internalFormatPackedFloat}function Oe(t){return t.internalFormatPackedHalfFloat}class Le{constructor(t){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const e=(0,r.OBj)().getNumber("WEBGL_VERSION");null!=t?(this.gl=t,function(t,e){i[t]=e}(e,t)):this.gl=s(e);let n="WEBGL_color_buffer_float";const o="EXT_color_buffer_half_float";if(1===(0,r.OBj)().getNumber("WEBGL_VERSION")){const t="OES_texture_float",e="OES_texture_half_float";if(this.textureFloatExtension=g(this.gl,t),D(this.gl,e))this.textureHalfFloatExtension=g(this.gl,e);else if((0,r.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),D(this.gl,o))this.colorBufferHalfFloatExtension=g(this.gl,o);else if((0,r.OBj)().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",D(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!D(this.gl,o))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(o)}this.vertexBuffer=function(t){return function(t,e){const n=T(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return f(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),f(t,(()=>t.bufferData(t.ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(t){return function(t,e){const n=T(t,(()=>t.createBuffer()),"Unable to create WebGLBuffer");return f(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,n))),f(t,(()=>t.bufferData(t.ELEMENT_ARRAY_BUFFER,e,t.STATIC_DRAW))),n}(t,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(t){return T(t,(()=>t.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=d(this.gl,this.textureHalfFloatExtension)}get debug(){return(0,r.OBj)().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const t=this.gl;f(t,(()=>t.finish())),f(t,(()=>t.bindFramebuffer(t.FRAMEBUFFER,null))),f(t,(()=>t.deleteFramebuffer(this.framebuffer))),f(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,null))),f(t,(()=>t.bindBuffer(t.ELEMENT_ARRAY_BUFFER,null))),f(t,(()=>t.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,o]=l(e,n);return Ae(t,i,o,Ne(r),r.textureFormatFloat,t.FLOAT)}(this.gl,t,e,this.textureConfig)}createFloat16MatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,o]=l(e,n);return Ae(t,i,o,Re(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createUnsignedBytesMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,o]=l(e,n);return Ae(t,i,o,Ie(r),t.RGBA,t.UNSIGNED_BYTE)}(this.gl,t,e,this.textureConfig)}uploadPixelDataToTexture(t,e){this.throwIfDisposed(),function(t,e,n){f(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),n.data instanceof Uint8Array?f(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,n.width,n.height,0,t.RGBA,t.UNSIGNED_BYTE,n.data))):f(t,(()=>t.texImage2D(t.TEXTURE_2D,0,t.RGBA,t.RGBA,t.UNSIGNED_BYTE,n))),f(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e)}uploadDenseMatrixToTexture(t,e,n,r){this.throwIfDisposed(),function(t,e,n,r,i,o){let s,a,u;f(t,(()=>t.bindTexture(t.TEXTURE_2D,e))),i instanceof Uint8Array?(s=new Uint8Array(n*r*4),a=t.UNSIGNED_BYTE,u=t.RGBA):(s=new Float32Array(n*r*4),a=t.FLOAT,u=o.internalFormatPackedFloat),s.set(i),f(t,(()=>t.texImage2D(t.TEXTURE_2D,0,u,n,r,0,t.RGBA,a,s))),f(t,(()=>t.bindTexture(t.TEXTURE_2D,null)))}(this.gl,t,e,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,o]=p(e,n);return Ae(t,i,o,Oe(r),t.RGBA,r.textureTypeHalfFloat)}(this.gl,t,e,this.textureConfig)}createPackedMatrixTexture(t,e){return this.throwIfDisposed(),function(t,e,n,r){const[i,o]=p(e,n);return Ae(t,i,o,De(r),t.RGBA,t.FLOAT)}(this.gl,t,e,this.textureConfig)}deleteMatrixTexture(t){this.throwIfDisposed(),this.outputTexture===t&&(_(this.gl,this.framebuffer),this.outputTexture=null),f(this.gl,(()=>this.gl.deleteTexture(t)))}downloadByteEncodedFloatMatrixFromOutputTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n,r){const[i,o]=l(e,n),s=new Uint8Array(e*n*4);return f(t,(()=>t.readPixels(0,0,i,o,r.downloadTextureFormat,t.UNSIGNED_BYTE,s))),new Float32Array(s.buffer)}(this.gl,e,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(t,e,n,r,i,o){return function(t,e,n,r,i,o,s,a){const u=t,c=new Float32Array(function(t,e){const[n,r]=p(t,e);return n*r*4}(o,s));return u.bindBuffer(u.PIXEL_PACK_BUFFER,e),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,c),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),c}(this.gl,t,0,0,0,i,o,this.textureConfig)}downloadFloat32MatrixFromBuffer(t,e){return function(t,e,n){const r=t,i=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,e),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,i),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),i}(this.gl,t,e)}createBufferFromTexture(t,e,n){this.bindTextureToFrameBuffer(t);const r=function(t,e,n,r){const i=t.createBuffer();f(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,i)));const o=16*e*n;return f(t,(()=>t.bufferData(t.PIXEL_PACK_BUFFER,o,t.STREAM_READ))),f(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,0))),f(t,(()=>t.bindBuffer(t.PIXEL_PACK_BUFFER,null))),i}(this.gl,e,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const t=this.createFence(this.gl);return this.pollFence(t)}createFence(t){let e,n;if((0,r.OBj)().getBool("WEBGL_FENCE_API_ENABLED")){const r=t,i=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);t.flush(),n=()=>{const t=r.clientWaitSync(i,0,0);return t===r.ALREADY_SIGNALED||t===r.CONDITION_SATISFIED},e=i}else(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(e=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(e,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:e,isFencePassed:n}}downloadMatrixFromPackedTexture(t,e,n){return this.downloadMatrixDriver(t,(()=>function(t,e,n){const r=new Float32Array(e*n*4);return f(t,(()=>t.readPixels(0,0,n,e,t.RGBA,t.FLOAT,r))),r}(this.gl,e,n)))}createProgram(t){this.throwIfDisposed();const e=this.gl,n=function(t,e){const n=T(t,(()=>t.createShader(t.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(f(t,(()=>t.shaderSource(n,e))),f(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw function(t,e){const n=y.exec(e);if(null==n)return console.log(`Couldn't parse line number in error: ${e}`),void console.log(t);const i=+n[1],o=t.split("\n"),s=o.length.toString().length+2,a=o.map(((t,e)=>r.D5U.oj((e+1).toString(),s)+t));let u=0;for(let t=0;t<a.length;t++)u=Math.max(a[t].length,u);const c=a.slice(0,i-1),l=a.slice(i-1,i),h=a.slice(i);console.log(c.join("\n")),console.log(e.split("\n")[0]),console.log(`%c ${r.D5U.oj(l[0],u)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(h.join("\n"))}(e,t.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e,t),i=function(t){const e=Rt();return function(t,e){const n=T(t,(()=>t.createShader(t.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(f(t,(()=>t.shaderSource(n,e))),f(t,(()=>t.compileShader(n))),!1===t.getShaderParameter(n,t.COMPILE_STATUS))throw console.log(t.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(t,`${e.version}\n    precision highp float;\n    ${e.attribute} vec3 clipSpacePos;\n    ${e.attribute} vec2 uv;\n    ${e.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(e),o=function(t){return T(t,(()=>t.createProgram()),"Unable to create WebGLProgram.")}(e);return f(e,(()=>e.attachShader(o,i))),f(e,(()=>e.attachShader(o,n))),function(t,e){if(f(t,(()=>t.linkProgram(e))),!1===t.getProgramParameter(e,t.LINK_STATUS))throw console.log(t.getProgramInfoLog(e)),new Error("Failed to link vertex and fragment shaders.")}(e,o),this.debug&&v(e,o),this.vertexAttrsAreBound||(this.setProgram(o),this.vertexAttrsAreBound=function(t,e,n){return f(t,(()=>t.bindBuffer(t.ARRAY_BUFFER,n))),x(t,e,"clipSpacePos",n,3,20,0)&&x(t,e,"uv",n,2,20,12)}(e,this.program,this.vertexBuffer)),o}deleteProgram(t){this.throwIfDisposed(),t===this.program&&(this.program=null),null!=t&&f(this.gl,(()=>this.gl.deleteProgram(t)))}setProgram(t){this.throwIfDisposed(),this.program=t,null!=this.program&&this.debug&&v(this.gl,this.program),f(this.gl,(()=>this.gl.useProgram(t)))}getUniformLocation(t,e,n=!0){return this.throwIfDisposed(),n?function(t,e,n){return T(t,(()=>t.getUniformLocation(e,n)),'uniform "'+n+'" not present in program.')}(this.gl,t,e):function(t,e,n){return t.getUniformLocation(e,n)}(this.gl,t,e)}getAttributeLocation(t,e){return this.throwIfDisposed(),f(this.gl,(()=>this.gl.getAttribLocation(t,e)))}getUniformLocationNoThrow(t,e){return this.throwIfDisposed(),this.gl.getUniformLocation(t,e)}setInputMatrixTexture(t,e,n){this.throwIfDisposed(),this.throwIfNoProgram(),b(this.gl,t,e,n)}setOutputMatrixTexture(t,e,n){this.setOutputMatrixTextureDriver(t,n,e)}setOutputPackedMatrixTexture(t,e,n){this.throwIfDisposed();const[r,i]=p(e,n);this.setOutputMatrixTextureDriver(t,r,i)}setOutputMatrixWriteRegion(t,e,n,r){this.setOutputMatrixWriteRegionDriver(n,t,r,e)}setOutputPackedMatrixWriteRegion(t,e,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&v(this.gl,this.program),S(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const t=this.gl;this.debug&&this.debugValidate(),f(t,(()=>t.drawElements(t.TRIANGLES,6,t.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),f(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=g(this.gl,2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2(),n=t.createQuery();return t.beginQuery(e.TIME_ELAPSED_EXT,n),n}const t=this.getQueryTimerExtensionWebGL1(),e=t.createQueryEXT();return t.beginQueryEXT(t.TIME_ELAPSED_EXT,e),e}endQuery(){if(2===(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const t=this.gl,e=this.getQueryTimerExtensionWebGL2();return void t.endQuery(e.TIME_ELAPSED_EXT)}const t=this.getQueryTimerExtensionWebGL1();t.endQueryEXT(t.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(t){return await r.D5U.WD((()=>this.disposed||this.isQueryAvailable(t,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(t,(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(t,e){if(0===e)return null;if(2===e){const e=this.gl;return e.getQueryParameter(t,e.QUERY_RESULT)/1e6}{const e=this.getQueryTimerExtensionWebGL1();return e.getQueryObjectEXT(t,e.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(t,e){if(0===e)return!0;if(2===e){const e=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=e.getQueryParameter(t,e.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const e=this.getQueryTimerExtensionWebGL1(),n=e.getQueryObjectEXT(t,e.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(e.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(t){return new Promise((e=>{this.addItemToPoll((()=>t.isFencePassed()),(()=>e()))}))}pollItems(){const t=function(t){let e=0;for(;e<t.length&&t[e]();++e);return e-1}(this.itemsToPoll.map((t=>t.isDoneFn)));for(let e=0;e<=t;++e){const{resolveFn:t}=this.itemsToPoll[e];t()}this.itemsToPoll=this.itemsToPoll.slice(t+1)}addItemToPoll(t,e){this.itemsToPoll.push({isDoneFn:t,resolveFn:e}),this.itemsToPoll.length>1||r.D5U.WD((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(t){this.throwIfDisposed(),w(this.gl,t,this.framebuffer),this.debug&&S(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(w(this.gl,this.outputTexture,this.framebuffer),this.debug&&S(this.gl)):_(this.gl,this.framebuffer)}downloadMatrixDriver(t,e){this.bindTextureToFrameBuffer(t);const n=e();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(t,e,n){this.throwIfDisposed();const r=this.gl;w(r,t,this.framebuffer),this.debug&&S(r),this.outputTexture=t,f(r,(()=>r.viewport(0,0,e,n))),f(r,(()=>r.scissor(0,0,e,n)))}setOutputMatrixWriteRegionDriver(t,e,n,r){this.throwIfDisposed(),f(this.gl,(()=>this.gl.scissor(t,e,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}function ke(t,e){if(t.length!==e.length)throw Error(`Binary was compiled with ${t.length} inputs, but was executed with ${e.length} inputs`);t.forEach(((t,n)=>{const i=t.logicalShape,o=e[n],s=o.shape;if(!r.D5U.cO(i,s))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${i} and ${s} must match`);if(t.isUniform&&o.isUniform)return;const a=t.texShape,u=o.isUniform?null:o.texData.texShape;if(!r.D5U.cO(a,u))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${a} and ${u} must match`)}))}class Pe{constructor(t,e,n){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;const{filterWidth:r,inChannels:i,strideWidth:o,strideHeight:s,padInfo:a,outWidth:u,dilationWidth:c,dilationHeight:l,dataFormat:h}=n,{left:p,top:d}=a,f=i*r,m=Rt(),g="channelsLast"===h,y=g?0:1,v=g?1:2;let x="";for(let n=0;n<=1;n++)for(let r=0;r<=1;r++)x+=`\n          blockIndex = rc.y + ${r};\n          pos = rc.x + ${n};\n\n          if(blockIndex < ${t[1]} && pos < ${t[0]}) {\n            offsetY = int(blockIndex / (${u})) * ${s} - ${d};\n            d0 = offsetY + ${l} * (pos / ${f});\n\n            if(d0 < ${e[y]} && d0 >= 0) {\n\n              offsetX = int(mod(float(blockIndex), ${u}.) * ${o}. - ${p}.);\n              d1 = offsetX + ${c} * (int(mod(float(pos), ${f}.) / ${i}.));\n\n              if(d1 < ${e[v]} && d1 >= 0) {\n\n                ch = int(mod(float(pos), ${i}.));\n\n                if (${g}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*n+r}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*n+r}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${x}\n\n        ${m.output} = result;\n      }\n    `}}class $e{constructor(t,e,n,r,i){this.variableNames=["x"],this.outputShape=[];const o=e,s=t[3]-1;let a;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;a=.5===i?`inversesqrt(${u})`:1===i?`1.0/(${u})`:`exp(log(${u}) * float(-${i}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${o}; j <= ${o}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${s}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${a};\n        setOutput(val);\n      }\n    `}}class Be{constructor(t,e,n,r,i){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=t,this.depth=t[3],this.depthRadius=e,this.bias=n,this.alpha=r,this.beta=i,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${e})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${e} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${i})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${i});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}class Fe{constructor(t,e,n,r,i){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const o=e,s=t[3]-1;let a;this.outputShape=t;const u=`float(${n}) + float(${r}) * sum`;a=.5===i?`inversesqrt(${u})`:1===i?`1.0/(${u})`:`exp(log(${u}) * float(-${i}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${o};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${o}; j <= ${o}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${s}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${a};\n        setOutput(result);\n      }\n    `}}class Ue{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideHeight,n=t.strideWidth,r=t.dilationHeight,i=t.effectiveFilterHeight,o=t.effectiveFilterWidth,s=i-1-t.padInfo.top,a=o-1-t.padInfo.left,u=i*o-1;this.userCode=`\n      const ivec2 pads = ivec2(${s}, ${a});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${i};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${e}.0;\n\n          if (dyR < 0.0 || dyR >= ${t.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${o}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${o} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class ze{constructor(t){this.variableNames=["dy","maxPos"],this.outputShape=t.inShape;const e=t.strideDepth,n=t.strideHeight,r=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,s=t.dilationWidth,a=t.effectiveFilterDepth,u=t.effectiveFilterHeight,c=t.effectiveFilterWidth,l=a-1-t.padInfo.front,h=u-1-t.padInfo.top,p=c-1-t.padInfo.left,d=a*u*c-1;this.userCode=`\n      const ivec3 pads = ivec3(${l}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${a};\n           wD += ${i}) {\n          float dyD = float(dyDCorner + wD) / ${e}.0;\n\n          if (dyD < 0.0 || dyD >= ${t.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${o}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${t.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${c};\n                wC += ${s}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${t.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${c} +\n                  wR * ${c} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Ve{constructor(t,e,n,r=!1,i=!1,o=!1,s=null,a=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n;const u=r?t[1]:t[2],c=Math.ceil(u/2),l=r?"i * 2, rc.y":"rc.y, i * 2",h=i?"rc.z, i * 2":"i * 2, rc.z",p=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],d=i?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let f="",m="";s&&(f=a?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${s}\n        }`:`vec4 activation(vec4 x) {\n          ${s}\n        }`,m="result = activation(result);");const g=o?"result += getBiasAtOutCoords();":"";o&&this.variableNames.push("bias"),a&&this.variableNames.push("preluActivationWeights");let y="rc.x",v="rc.x";t[0]<e[0]?y=`int(min(float(rc.x), ${t[0]-1}.))`:e[0]<t[0]&&(v=`int(min(float(rc.x), ${e[0]-1}.))`),this.userCode=`\n      ${f}\n\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${y};\n          int batchB = ${v};\n          vec4 a = getMatrixA(batchA, ${l});\n          vec4 b = getMatrixB(batchB, ${h});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${p[0]} * ${d[0]});\n          result += (${p[1]} * ${d[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${g}\n\n        ${m}\n\n        setOutput(result);\n      }\n    `}}class We{constructor(t,e,n){this.variableNames=["probs"],this.outputShape=[t,n],this.userCode=`\n      uniform float seed;\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${e-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${e-1}));\n      }\n    `}getCustomSetupFunc(t){return(e,n)=>{null==this.seedLoc&&(this.seedLoc=e.getUniformLocation(n,"seed")),e.gl.uniform1f(this.seedLoc,t)}}}class He{constructor(t,e,n,r){this.variableNames=["indices"],this.outputShape=[t,e],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}class Ge{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=t;const e=t.length;if(0===e)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const n=Nt("rc",e),r=Ht(e),i=function(t,e,n){if(1===t)return`rc > ${e[0]}`;let r="";for(let i=t-2;i<t;i++)r+=`${n[i]} >= ${e[i]}`,i<t-1&&(r+="||");return r}(e,t,n),o=function(t,e,n,r){if(1===t)return"";const i=r.slice(-2);return`\n    int r = ${i[0]};\n    int c = ${i[1]};\n    int rp1 = r + 1;\n    int cp1 = c + 1;\n\n    bool cEdge = cp1 >= ${e};\n    bool rEdge = rp1 >= ${n};\n  `}(e,t[t.length-1],t[t.length-2],n),s=function(t,e){const n=t.length,r=function(t,e){const n=[];for(let r=0;r<=1;r++)for(let i=0;i<=1;i++){let o=`${0===r?"r":"rp1"}, ${0===i?"c":"cp1"}`;for(let n=2;n<t;n++)o=`${e[e.length-1-n]},`+o;n.push(o)}return n}(n,e);return 1===n?`getA(rc),\n            rc + 1 >= ${t[0]} ? 0. : getA(rc + 1),\n            0, 0`:`getA(${r[0]}),\n          cEdge ? 0. : getA(${r[1]}),\n          rEdge ? 0. : getA(${r[2]}),\n          rEdge || cEdge ? 0. : getA(${r[3]})`}(t,n);this.userCode=`\n        void main() {\n          ${r} rc = getOutputCoords();\n\n          if(${i}) {\n            setOutput(vec4(0));\n          } else {\n            ${o}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}}class je{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,i=Ht(r),o=e.map((t=>t[0])).join(","),s=e.map(((e,n)=>e[0]+t[n])).join(","),a=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${i} start = ${i}(${o});\n      ${i} end = ${i}(${s});\n\n      void main() {\n        ${i} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(float(${n}));\n        } else {\n          ${i} coords = outC - start;\n          setOutput(getX(${a}));\n        }\n      }\n    `:`\n        int start = ${o};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(float(${n}));\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class Xe{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,i=Ht(r),o=e.map((t=>t[0])).join(","),s=e.map(((e,n)=>e[0]+t[n])).join(","),a=Nt("rc",r),u=Nt("source",r),c=`${a[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${i} rc = outputLoc;`,`${a[r-1]} += 1;\n       if(${c}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${a[r-2]} += 1;\n       if(${a[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${a[r-1]} += 1;\n         if(${c}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let t=0,e=1===r?2:4;t<e;t++)d+=`\n        ${h[t]}\n        if (${p}) {\n          result[${t}] = float(${n});\n        } else {\n          ${i} source = rc - start;\n          result[${t}] = getChannel(getX(${u.join()}), ${l});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${i} start = ${i}(${o});\n      const ${i} end = ${i}(${s});\n\n      void main() {\n        ${i} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}class qe{constructor(t,e,n,r=!1,i=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,s=t.strideHeight,a=t.strideWidth,u=t.dilationHeight,c=t.dilationWidth,l=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.top,d=t.padInfo.left;this.outputShape=t.outShape;const f="avg"===e,m=`((batch  * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + d`,g=`(xR * ${t.inWidth} + xC) * ${t.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${s}, ${a});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${l};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${c}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${t.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${e} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?i?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let v=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(v="avgValue / count");const x=4*Math.floor(o/4),b=o%4,w=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${l};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${t.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${c};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              getValue(batch, xR, xC + 3 * ${c}, d)\n            );\n\n            ${w}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${2===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${w}\n          } else if (${3===b}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${c}, d),\n              getValue(batch, xR, xC + 2 * ${c}, d),\n              initializationValue\n            );\n\n            ${w}\n          }\n        }\n        setOutput(${v});\n      }\n    `}}class Ye{constructor(t,e,n,r=!1,i=!1){if(this.variableNames=["x"],"avg"===e&&n)throw new Error("Cannot compute positions for average pool.");const o=t.filterWidth,s=t.strideDepth,a=t.strideHeight,u=t.strideWidth,c=t.dilationDepth,l=t.dilationHeight,h=t.dilationWidth,p=t.effectiveFilterDepth,d=t.effectiveFilterHeight,f=t.effectiveFilterWidth,m=t.padInfo.front,g=t.padInfo.top,y=t.padInfo.left;this.outputShape=t.outShape;const v="avg"===e;let x="0.0";if(v||(x="-1.0 / 1e-20"),n){const e=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${s}, ${a}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${c}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${t.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${l}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${t.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${t.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${e} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?i?`(((batch * ${t.inDepth} + xD) * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`((xD * ${t.inHeight} + xR) * ${t.inWidth} + xC) * ${t.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===e&&(b="avgValue / count");const w=4*Math.floor(o/4),_=o%4,S=`\n      if (${v}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${s}, ${a}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${t.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${c}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${t.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${t.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${w}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${S}\n            }\n\n            int xC = xCCorner + ${w};\n            if (${1===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${2===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${S}\n            } else if (${3===_}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${S}\n            }\n          }\n          setOutput(${b});\n        }\n      }\n    `}}class Ke{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:i,outSize:o}=t;this.outputShape=[r,o];let s="0.0",a="";"prod"===e?s="1.0":"min"===e?(s="1.0 / 1e-20",a="min"):"max"===e&&(s="-1.0 / 1e-20",a="max");let u=`${e}(${e}(${e}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===e?u="sumValue":"prod"===e?u="prodValue":"all"===e?u="allValue":"any"===e&&(u="anyValue");const c=4*Math.floor(n/4),l=n%4;let h=`\n      if (${"sum"===e}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===e}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${a}(values, minMaxValue);\n      }\n    `,p="vec4";"all"===e?(s="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===e&&(s="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";i%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${s};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${s});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${c}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${c};\n        if (${1===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===l}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}class Ze{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t;let n="";for(let t=0;t<4;t++){let e="thisRC = rc;";t%2==1&&(e+="thisRC.z += 1;"),t>1&&(e+="thisRC.y += 1;"),n+=`\n        ${e}\n        ${t>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${t}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${t>0?"}":""}\n      `}var r;this.userCode=`\n      ${r=e,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${It(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${Dt(t)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${t[1]};\n        int cols = ${t[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class Je{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,i]=e.shape,[,o,s]=t.shape,a=[n&&o>1?r-1:r,n&&s>1?i-1:i],u=[n&&o>1?o-1:o,n&&s>1?s-1:s],c=a[0]/u[0],l=a[1]/u[1],h=1/c,p=1/l,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${o}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${i-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class Qe{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[i,o,s,a]=t;this.outputShape=[i,e,n,a];const u=[r&&e>1?o-1:o,r&&n>1?s-1:s],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${s}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(sourceFracIndexRC);\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class tn{constructor(t,e,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[i,o,s,a]=t;this.outputShape=[i,e,n,a];const u=[r&&e>1?o-1:o,r&&n>1?s-1:s],c=[r&&e>1?e-1:e,r&&n>1?n-1:n];this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${o}.0, ${s}.0,\n                                     ${s}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = vec3(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(sourceFracIndexRC);\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${a-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}class en{constructor(t,e,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=e.shape;const[,r,i]=e.shape,[,o,s]=t.shape,a=[n&&o>1?r-1:r,n&&s>1?i-1:i],u=[n&&o>1?o-1:o,n&&s>1?s-1:s],c=a[0]/u[0],l=a[1]/u[1],h=1/c,p=1/l,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${c});\n        const float widthScale = float(${l});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${o}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${s}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${a[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${a[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${i}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}class nn{constructor(t,e,n,r){this.variableNames=["A"],this.outputShape=[];const[i,o,s,a]=t;this.outputShape=[i,e,n,a];const u=[r&&e>1?o-1:o,r&&n>1?s-1:s],c=[r&&e>1?e-1:e,r&&n>1?n-1:n],l=r?"0.5":"0.0";this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${o}.0, ${s}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = vec2(yRC) * effectiveInputOverOutputRatioRC;\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${l})));\n\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class rn{constructor(t,e){this.variableNames=["x"];const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=t,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${t[0]} - coord - 1));\n        }\n      `);const r=t.map(((n,r)=>(n=>-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),i=Ht(n);this.userCode=`\n      void main() {\n        ${i} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class on{constructor(t,e){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=t.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=t;const r=Nt("rc",n),i=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,o=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,s=Ht(n);function a(n){const r=t.map(((r,i)=>function(n,r){return-1!==e.indexOf(n)&&1!==t[n]?`${t[n]} - ${r[n]} - 1`:`${r[n]}`}(i,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${t[0]} - rc - 1),\n            ${t[0]} - rc - 1);\n          if(${i}){\n              result.g = getChannel(getX(${t[0]} - (rc  + 1) - 1),\n                ${t[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${s} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(t){return a(t)}(r.slice())};\n          if(${i}){\n            result.g = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",a(t)}(r.slice())};\n          }\n          if(${o}) {\n            result.b = ${function(t){return t[n-2]="("+t[n-2]+" + 1)",a(t)}(r.slice())};\n            if(${i}) {\n              result.a = ${function(t){return t[n-1]="("+t[n-1]+" + 1)",t[n-2]="("+t[n-2]+" + 1)",a(t)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}class sn{constructor(t,e,n,r,i,o,s=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=o;const a=Ht(i.length),u=Ht(o.length);let c="";1===n?c="i":2===n&&(c="i, j");const l=`getIndices(${c})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=e>1?"strides[j]":"strides";this.userCode=`\n        ${a} strides = ${a}(${i});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${t}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${e}; j++) {\n              int index = round(${l});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}class an{constructor(t,e){this.variableNames=["x","segmentIds"];const n=t.windowSize,r=t.batchSize,i=t.inSize,o=t.numSegments,s=o*Math.ceil(i/n);this.outputShape=[r,s];const a=4*Math.floor(n/4),u=n%4,c="\n        sumValue += dot(values, segFilter);\n    ";let l="";i%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return initializationValue;\n        }\n      `);let h="";i%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${i}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${o})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${o})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}class un{constructor(t,e,n){let r,i;if(this.variableNames=["c","a","b"],this.outputShape=e,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)i="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],o=[],s=[];for(let r=0;r<e.length;r++)s.push(`${n[r]}`),r<t&&o.push(`${n[r]}`);r=o.join(),i=s.join()}const o=Ht(n);this.userCode=`\n      void main() {\n        ${o} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${i}));\n        } else {\n          setOutput(getB(${i}));\n        }\n      }\n    `}}class cn{constructor(t){this.variableNames=["source"],this.outputShape=t,this.rank=t.length;const e=Ht(this.rank),n=`uniform int start[${this.rank}];`,r=function(t){if(1===t)return"sourceLoc";if(t<=6)return ln.slice(0,t).map((t=>"sourceLoc."+t)).join(",");throw Error(`Slicing for rank ${t} is not yet supported`)}(this.rank);let i;i=`\n        ${e} sourceLoc;\n        ${e} coords = getOutputCoords();\n        ${t.map(((t,e)=>`sourceLoc.${ln[e]} = start[${e}] + coords.${ln[e]};`)).join("\n")}\n      `,this.userCode=`\n      ${n}\n      void main() {\n        ${i}\n        setOutput(getSource(${r}));\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}const ln=["x","y","z","w","u","v"];class hn{constructor(t){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.rank=t.length;const e=Ht(this.rank),n=Nt("coords",this.rank),r=Nt("sourceLoc",this.rank),i=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,o=`getChannel(getSource(${r.join()}), ${i})`,s=`\n      result.x = ${o};\n      if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${o};\n        --${r[this.rank-1]};\n      }\n    `,a=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${t[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${o};\n        if (++${n[this.rank-1]} < ${t[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${o};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${e}(${t.map(((t,e)=>`start[${e}]`)).join()});`:t.map(((t,e)=>`${r[e]} = ${n[e]} + start[${e}];`)).join("\n");this.userCode=`\n      uniform int start[${this.rank}];\n      void main() {\n        ${e} coords = getOutputCoords();\n        ${e} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${s}\n        ${a}\n        setOutput(result);\n      }\n    `}getCustomSetupFunc(t){if(t.length!==this.rank)throw Error(`The rank (${this.rank}) of the program must match the length of start (${t.length})`);return(e,n)=>{null==this.startLoc&&(this.startLoc=e.getUniformLocationNoThrow(n,"start"),null==this.startLoc)||e.gl.uniform1iv(this.startLoc,t)}}}class pn{constructor(t,e,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,i=Ht(n.length),o=Ht(n.length);let s="";if(1===r)s="coords * strides + begin";else{let t=0;s=n.map(((e,r)=>(t++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${t-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${i} begin = ${i}(${t});\n      ${i} strides = ${i}(${e});\n\n      void main() {\n        ${o} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class dn{constructor(t){this.gpgpu=t,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(t,e,n){const r=mn(e,n),i=gn(t,r,n);i in this.freeTextures||(this.freeTextures[i]=[]),i in this.usedTextures||(this.usedTextures[i]=[]);const o=fn(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[i].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=o,this.log();const t=this.freeTextures[i].shift();return this.usedTextures[i].push(t),t}let s;return r===c.PACKED_2X2_FLOAT32?s=this.gpgpu.createPackedMatrixTexture(t[0],t[1]):r===c.PACKED_2X2_FLOAT16?s=this.gpgpu.createFloat16PackedMatrixTexture(t[0],t[1]):r===c.UNPACKED_FLOAT32?s=this.gpgpu.createFloat32MatrixTexture(t[0],t[1]):r===c.UNPACKED_FLOAT16?s=this.gpgpu.createFloat16MatrixTexture(t[0],t[1]):r===c.PACKED_4X1_UNSIGNED_BYTE&&(s=this.gpgpu.createUnsignedBytesMatrixTexture(t[0],t[1])),this.usedTextures[i].push(s),this.numUsedTextures++,this._numBytesAllocated+=o,this.log(),s}releaseTexture(t,e,n,i){if(null==this.freeTextures)return;const o=mn(n,i),s=gn(e,o,i);s in this.freeTextures||(this.freeTextures[s]=[]);const a=fn(e,o,this.gpgpu.gl,this.gpgpu.textureConfig,i),u=(0,r.OBj)().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==u&&this._numBytesAllocated>u?(this.gpgpu.deleteMatrixTexture(t),this._numBytesAllocated-=a):(this.freeTextures[s].push(t),this.numFreeTextures++,this._numBytesFree+=a),this.numUsedTextures--;const c=this.usedTextures[s],l=c.indexOf(t);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");c.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const t=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${t})`);const e=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*e)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const t in this.freeTextures)this.freeTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));for(const t in this.usedTextures)this.usedTextures[t].forEach((t=>{this.gpgpu.deleteMatrixTexture(t)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function fn(t,e,n,r,i){const o=function(t,e){switch(t){case c.PACKED_2X2_FLOAT32:return De(e);case c.PACKED_2X2_FLOAT16:return Oe(e);case c.UNPACKED_FLOAT32:return Ne(e);case c.UNPACKED_FLOAT16:return Re(e);case c.PACKED_4X1_UNSIGNED_BYTE:return Ie(e);default:throw new Error(`Unknown physical texture type ${t}`)}}(e,r);let s;if(i){const[e,n]=p(t[0],t[1]);s=e*n}else{const[e,n]=l(t[0],t[1]);s=e*n}return s*function(t,e){const n=t;if(e===n.R32F)return 4;if(e===n.R16F)return 2;if(e===n.RGBA32F)return 16;if(e===t.RGBA)return 16;if(e===n.RGBA16F)return 8;throw new Error(`Unknown internal format ${e}`)}(n,o)}function mn(t,e){if(t===u.UPLOAD)return c.PACKED_2X2_FLOAT32;if(t===u.RENDER||null==t)return function(t){return(0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?t?c.PACKED_2X2_FLOAT32:c.UNPACKED_FLOAT32:t?c.PACKED_2X2_FLOAT16:c.UNPACKED_FLOAT16}(e);if(t===u.DOWNLOAD||t===u.PIXELS)return c.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${t}`)}function gn(t,e,n){return`${t[0]}_${t[1]}_${e}_${n}`}class yn{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[r]*e[r];this.outputShape=n,this.rank=n.length;const r=Ht(this.rank),i=function(t){const e=t.length;if(e>5)throw Error(`Tile for rank ${e} is not yet supported`);if(1===e)return`imod(resRC, ${t[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let e=0;e<t.length;e++)r.push(`imod(${n[e]}, ${t[e]})`);return r.join()}(t);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${i}));\n      }\n    `}}class vn{constructor(t,e){this.variableNames=["A"],this.outputShape=t,this.userCode=`\n      float unaryOperation(float x) {\n        ${e}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const xn="return abs(x);",bn="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",wn="if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",_n="return (x >= 0.0) ? x : (exp(x) - 1.0);",Sn=`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${r.Wap.SELU_SCALEALPHA};\n  float scale = ${r.Wap.SELU_SCALE};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`,Tn="return -x;",En="return ceil(x);",Mn="return floor(x);",Cn="return exp(x);",An="return exp(x) - 1.0;",Nn=`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${r.Wap.ERF_P};\n  float a1 = ${r.Wap.ERF_A1};\n  float a2 = ${r.Wap.ERF_A2};\n  float a3 = ${r.Wap.ERF_A3};\n  float a4 = ${r.Wap.ERF_A4};\n  float a5 = ${r.Wap.ERF_A5};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`,Rn="return x;",In="\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",Dn="\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",On="\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n";class Ln{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t,this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${e}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class kn{constructor(t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=t;const e=t.length,n=Nt("rc",e),r=Ht(e),i=function(t,e){if(1===t)return"rc";let n="";for(let r=0;r<t;r++)n+=e[r],r<t-1&&(n+=",");return n}(e,n),o=n.slice(-2),s=e<=1?"rc":`vec2(${o.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${i});\n\n        setOutput(getChannel(packedInput, ${s}));\n      }\n    `}}const{segment_util:Pn}=r.Wap,$n=r.GDt.Vl,Bn=r.GDt.Gg,Fn=r.GDt.vN,Un=r.GDt.ZA,zn={};function Vn(t,e=!1){if("linear"===t)return"return x;";if("relu"===t)return e?In:bn;if("elu"===t)return e?On:_n;if("relu6"===t)return e?Dn:wn;if("prelu"===t)return e?Jt:Kt;throw new Error(`Activation ${t} has not been implemented for the WebGL backend.`)}class Wn extends r.Zuw{constructor(t){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.warnedAboutMemory=!1,this.warnedAboutCPUBackend=!1,this.pendingDeletes=0,this.disposed=!1,!(0,r.OBj)().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");if(null==t){const t=s((0,r.OBj)().getNumber("WEBGL_VERSION"));this.binaryCache=((e=(0,r.OBj)().getNumber("WEBGL_VERSION"))in zn||(zn[e]={}),zn[e]),this.gpgpu=new Le(t),this.canvas=t.canvas,this.gpgpuCreatedLocally=!0}else this.gpgpu=t,this.binaryCache={},this.gpgpuCreatedLocally=!1,this.canvas=t.gl.canvas;var e;this.textureManager=new dn(this.gpgpu),this.numMBBeforeWarning=null==(0,r.OBj)().global.screen?1024:(0,r.OBj)().global.screen.height*(0,r.OBj)().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new r.JLz(this,(0,r.SRH)())}numDataIds(){return this.texData.numDataIds()+(this.cpuBackend?this.cpuBackend.numDataIds():0)-this.pendingDeletes}write(t,e,n){if(((0,r.OBj)().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||(0,r.OBj)().getBool("DEBUG"))&&this.checkNumericalProblems(t),"complex64"===n&&null!=t)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const i={};return this.texData.set(i,{shape:e,dtype:n,values:t,usage:u.UPLOAD,refCount:1,complexParentRefCount:0}),i}incRef(t){this.texData.get(t).refCount++}decRef(t){this.texData.has(t)&&this.texData.get(t).refCount--}move(t,e,n,i){if((0,r.OBj)().getBool("DEBUG")&&this.checkNumericalProblems(e),"complex64"===i)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(t,{shape:n,dtype:i,values:e,usage:u.UPLOAD,refCount:1,complexParentRefCount:0})}disposeIntermediateTensorInfo(t){const e=t.dataId;if(this.texData.has(e)){const t=this.texData.get(e);t.refCount--,t.refCount<1&&this.disposeData(e)}}readSync(t){const e=this.texData.get(t),{values:n,dtype:i,complexTensorInfos:o,slice:s,shape:a,isPacked:u}=e;if(null!=s){let e;e=u?new Ln(a,Rn):new vn(a,Rn);const n=this.runWebGLProgram(e,[{dataId:t,shape:a,dtype:i}],i),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if("string"===i)return n;const c=null!=this.activeTimers;let l,h;if(c&&(l=r.D5U.zO()),"complex64"===i){const t=this.readSync(o.real.dataId),e=this.readSync(o.imag.dataId);h=r.Wap.mergeRealAndImagArrays(t,e)}else h=this.getValuesFromTexture(t);return c&&(this.downloadWaitMs+=r.D5U.zO()-l),this.convertAndCacheOnCPU(t,h)}async read(t){if(this.pendingRead.has(t)){const e=this.pendingRead.get(t);return new Promise((t=>e.push(t)))}const e=this.texData.get(t),{values:n,shape:i,slice:o,dtype:s,complexTensorInfos:a,isPacked:u}=e;if(null!=o){let e;e=u?new Ln(i,Rn):new vn(i,Rn);const n=this.runWebGLProgram(e,[{dataId:t,shape:i,dtype:s}],s),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(t);if(!(0,r.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===(0,r.OBj)().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let c,l,p=null;if("complex64"!==s&&(0,r.OBj)().get("WEBGL_BUFFER_SUPPORTED")){c=this.decode(t);const e=this.texData.get(c.dataId);p=this.gpgpu.createBufferFromTexture(e.texture,...h(i))}if(this.pendingRead.set(t,[]),"complex64"!==s&&await this.gpgpu.createAndWaitForFence(),"complex64"===s){const t=await Promise.all([this.read(a.real.dataId),this.read(a.imag.dataId)]),e=t[0],n=t[1];l=r.Wap.mergeRealAndImagArrays(e,n)}else if(null==p)l=this.getValuesFromTexture(t);else{const t=r.D5U.NA(i);l=this.gpgpu.downloadFloat32MatrixFromBuffer(p,t)}null!=c&&this.disposeIntermediateTensorInfo(c);const d=this.convertAndCacheOnCPU(t,l),f=this.pendingRead.get(t);return this.pendingRead.delete(t),f.forEach((t=>t(d))),this.pendingDisposal.has(t)&&(this.pendingDisposal.delete(t),this.disposeData(t),this.pendingDeletes--),d}checkNumericalProblems(t){if(null!=t)for(let e=0;e<t.length;e++){const n=t[e];if(!m(n)){if((0,r.OBj)().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(t){const{shape:e,dtype:n,isPacked:i}=this.texData.get(t),o=r.D5U.NA(e);if((0,r.OBj)().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(t),r=this.texData.get(n.dataId),i=this.gpgpu.downloadMatrixFromPackedTexture(r.texture,...h(e)).subarray(0,o);return this.disposeIntermediateTensorInfo(n),i}const s=(0,r.OBj)().getBool("WEBGL_PACK")&&!0===i,a=s?C(e):e,u=s?new _e(a):new we(a),c=this.runWebGLProgram(u,[{shape:a,dtype:n,dataId:t}],"float32"),l=this.texData.get(c.dataId),p=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture,l.texShape[0],l.texShape[1]).subarray(0,o);return this.disposeIntermediateTensorInfo(c),p}async time(t){const e=this.activeTimers,n=[];let i=!1;null==this.programTimersStack?(this.programTimersStack=n,i=!0):this.activeTimers.push(n),this.activeTimers=n,t();const o=r.D5U.xH(this.activeTimers.map((t=>t.query))).filter((t=>null!=t)),s=r.D5U.xH(this.activeTimers.map((t=>t.name))).filter((t=>null!=t));this.activeTimers=e,i&&(this.programTimersStack=null);const a={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};if((0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const t=await Promise.all(o);a.kernelMs=r.D5U.Sm(t),a.getExtraProfileInfo=()=>t.map(((t,e)=>({name:s[e],ms:t}))).map((t=>`${t.name}: ${t.ms}`)).join(", ")}else a.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,a}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:r.D5U.zO(),endMs:null}}endTimer(t){return(0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),t):(t.endMs=r.D5U.zO(),t)}async getQueryTime(t){if((0,r.OBj)().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(t);const e=t;return e.endMs-e.startMs}disposeData(t){if(this.pendingDisposal.has(t))return;if(this.pendingRead.has(t))return this.pendingDisposal.add(t),void this.pendingDeletes++;if(!this.texData.has(t))return;if(this.texData.get(t).complexParentRefCount>0)return void this.texData.get(t).refCount--;this.releaseGPUData(t);const{complexTensorInfos:e}=this.texData.get(t);null!=e&&(this.texData.get(e.real.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.real),this.texData.get(e.imag.dataId).complexParentRefCount--,this.disposeIntermediateTensorInfo(e.imag)),this.texData.delete(t)}releaseGPUData(t){const{texture:e,dtype:n,texShape:r,usage:i,isPacked:o,slice:s}=this.texData.get(t),a=s&&s.origDataId||t,u=this.dataRefCount.get(a);u>1?this.dataRefCount.set(a,u-1):(this.dataRefCount.delete(a),null!=e&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(e,r,i,o)));const c=this.texData.get(t);c.texture=null,c.texShape=null,c.isPacked=!1,c.slice=null}getTexture(t){return this.uploadToGPU(t),this.texData.get(t).texture}getDataInfo(t){return this.texData.get(t)}getCPUBackend(){return(0,r.OBj)().getBool("WEBGL_CPU_FORWARD")?(null==this.cpuBackend&&(this.cpuBackend=(0,r.SRH)().findBackend("cpu")),this.cpuBackend):null}shouldExecuteOnCPU(t,e=128){const n=this.getCPUBackend();return this.warnedAboutCPUBackend||null!=n||(console.warn("Your application contains ops that are small enough to be executed on the CPU backend, however the CPU backend cannot be found. Consider importing the CPU backend (@tensorflow/tfjs-backend-cpu) for better performance."),this.warnedAboutCPUBackend=!0),null!=n&&t.every((t=>null==this.texData.get(t.dataId).texture&&r.D5U.NA(t.shape)<e))}getGPGPUContext(){return this.gpgpu}slice(t,e,n){if(this.shouldExecuteOnCPU([t])){const r=wt(this.texData.get(t.dataId).values,e,n,t.shape,t.dtype);return this.makeOutput(n,t.dtype,r)}if(0===r.D5U.NA(n))return(0,r.XeE)([],n,t.dtype);const{isPacked:i}=this.texData.get(t.dataId),o=r.kuN.isSliceContinous(t.shape,e,n);if(i||!o){const i=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new hn(n):new cn(n),o=i.getCustomSetupFunc(e);return this.compileAndRun(i,[t],null,o)}return this.uploadToGPU(t.dataId),this.shallowSlice(t,e,n)}shallowSlice(t,e,n){const i=this.texData.get(t.dataId),o=this.makeOutput(n,t.dtype),s=this.texData.get(o.dataId);Object.assign(s,i),s.shape=n,s.dtype=t.dtype;let a=r.kuN.computeFlatOffset(e,t.strides);i.slice&&(a+=i.slice.flatOffset),s.slice={flatOffset:a,origDataId:i.slice&&i.slice.origDataId||t.dataId};const u=this.dataRefCount.get(s.slice.origDataId)||1;return this.dataRefCount.set(s.slice.origDataId,u+1),o}stridedSlice(t,e,n,i){const o=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.stridedSlice(t,e,n,i)));if(o)return o;const s=r.kuN.computeOutShape(e,n,i);if(s.some((t=>0===t)))return(0,r.XeE)([],s);const a=new pn(e,i,s);return this.compileAndRun(a,[t])}reverse(t,e){const n=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new on(t.shape,e):new rn(t.shape,e);return this.compileAndRun(n,[t])}neg(t){const e=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.neg(t)));if(e)return e;if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Tn,t.dtype);const n=new vn(t.shape,Tn);return this.compileAndRun(n,[t])}batchMatMul(t,e,n,i){const o=n?t.shape[2]:t.shape[1],s=i?e.shape[1]:e.shape[2],a=n?t.shape[1]:t.shape[2],u=Math.max(t.shape[0],e.shape[0]);if((1===o||1===s)&&a>1e3){n&&(t=(0,r.p4s)(t,[0,2,1])),i&&(e=(0,r.p4s)(e,[0,2,1]));const o=1===s?t:t.as3D(u,a,1),c=1===s?2:1,l=1===s?e.as3D(u,1,a):e;return r.dC7(o,l).sum(c,!0)}const c=(0,r.x8V)(t.dtype,e.dtype),l=new Ve(t.shape,e.shape,[u,o,s],n,i);return this.compileAndRun(l,[t,e],c)}fusedBatchMatMul({a:t,b:e,transposeA:n,transposeB:i,bias:o,activation:s,preluActivationWeights:a}){const u=n?t.shape[2]:t.shape[1],c=i?e.shape[1]:e.shape[2],l=Math.max(t.shape[0],e.shape[0]),h=(0,r.x8V)(t.dtype,e.dtype),p=null!=o,d=null!=a,f=s?Vn(s,!0):null,m=new Ve(t.shape,e.shape,[l,u,c],n,i,p,f,d),g=[t,e];return o&&g.push(o),a&&g.push(a),this.compileAndRun(m,g,h)}localResponseNormalization4D(t,e,n,i,o){const s=(0,r.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new Fe(t.shape,e,n,i,o):new $e(t.shape,e,n,i,o);return this.compileAndRun(s,[t])}LRNGrad(t,e,n,r,i,o,s){const a=new Be(e.shape,r,i,o,s);return this.compileAndRun(a,[e,n,t])}tile(t,e){if("string"===t.dtype){const n=this.readSync(t.dataId).map((t=>r.D5U.v5(t))),i=(0,r.f3b)(t.shape,t.dtype,n);return Bn(i,e)}const n=new yn(t.shape,e);return this.compileAndRun(n,[t])}pad(t,e,n){const i=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Xe(t.shape,e,n):new je(t.shape,e,n);return this.compileAndRun(i,[t])}gather(t,e,n){const r=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.gather(t,e,n)));if(r)return r;const i=new Me(t.shape,e.size,n);return this.compileAndRun(i,[t,e])}batchToSpaceND(t,e,n){r.D5U.hu(t.rank<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const i=e.reduce(((t,e)=>t*e)),o=r.Wap.getReshaped(t.shape,e,i),s=r.Wap.getPermuted(o.length,e.length),a=r.Wap.getReshapedPermuted(t.shape,e,i),u=r.Wap.getSliceBeginCoords(n,e.length),c=r.Wap.getSliceSize(a,n,e.length);return(0,r.p4s)(t.reshape(o),s).reshape(a).slice(u,c)}spaceToBatchND(t,e,n){r.D5U.hu(t.rank<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const i=e.reduce(((t,e)=>t*e)),o=[[0,0]];o.push(...n);for(let n=1+e.length;n<t.shape.length;++n)o.push([0,0]);const s=t.pad(o),a=r.Wap.getReshaped(s.shape,e,i,!1),u=r.Wap.getPermuted(a.length,e.length,!1),c=r.Wap.getReshapedPermuted(s.shape,e,i,!1),l=(0,r.p4s)(s.reshape(a),u);return(0,r.XLQ)(l,c)}reduce(t,e,n){const i=t.shape[0],o=t.shape[1],s=r.Wap.computeOptimalWindowSize(o),a=Math.ceil(o/s),u=new Ke({windowSize:s,inSize:o,batchSize:i,outSize:a},e),c=this.compileAndRun(u,[t],n);return 1===c.shape[1]?c:this.reduce(c,e,n)}argReduce(t,e,n=null){let i=t.shape[0],o=t.shape[1];null!=n&&(i=n.shape[0],o=n.shape[1]);const s=r.Wap.computeOptimalWindowSize(o),a={windowSize:s,inSize:o,batchSize:i,outSize:Math.ceil(o/s)},u=new Ct(a,e,null==n),c=[t];null!=n&&c.push(n);const l=this.compileAndRun(u,c,"int32");return 1===l.shape[1]?l:this.argReduce(t,e,l)}argReducePacked(t,e,n=null){const i=null!=n?n.shape:t.shape,o=i[i.length-1],s=r.Wap.computeOptimalWindowSize(o),a=new Xt(i,s,e,null==n),u=null==n?[t]:[t,n],c=this.compileAndRun(a,u,"int32");return c.rank===t.rank?this.argReducePacked(t,e,c):c}sum(t,e){r.Wap.assertAxesAreInnerMostDims("sum",e,t.rank);const[n,i]=r.Wap.computeOutAndReduceShapes(t.shape,e),o=r.D5U.NA(i),s=t.as2D(-1,o),a=r.z4k(t.dtype);return this.reduce(s,"sum",a).reshape(n)}prod(t,e){const n=this.tryRunOnCpuOrThrow([t],(()=>this.cpuBackend.prod(t,e)));if(n)return n;const[i,o]=r.Wap.computeOutAndReduceShapes(t.shape,e),s=r.D5U.NA(o),a=t.as2D(-1,s),u=r.z4k(t.dtype);return this.reduce(a,"prod",u).reshape(i)}unsortedSegmentSum(t,e,n){let i=0;const o=r.Wap.getAxesPermutation([i],t.rank);let s=t;null!=o&&(s=(0,r.p4s)(t,o),i=r.Wap.getInnerMostAxes(1,t.rank)[0]);const a=Pn.computeOutShape(s.shape,i,n),u=r.D5U.NA([s.shape[i]]),c=s.as2D(-1,u),l=r.z4k(t.dtype);let h=this.segOpCompute(c,"unsortedSegmentSum",e,l,n).reshape(a);return null!=o&&(h=(0,r.p4s)(h,r.Wap.getUndoAxesPermutation(o))),h}segOpCompute(t,e,n,i,o){const s=t.shape[0],a=t.shape[1],u=Pn.segOpComputeOptimalWindowSize(a,o),c=new an({windowSize:u,inSize:a,batchSize:s,numSegments:o},e),l=this.compileAndRun(c,[t,n],i);return l.shape[1]===o?l:(n=(0,r.w6H)(0,o).tile([a/u]),this.segOpCompute(l,e,n,i,o))}argMinMaxReduce(t,e,n){const i=[e];if(r.Wap.assertAxesAreInnerMostDims("arg"+n.charAt(0).toUpperCase()+n.slice(1),i,t.rank),!(0,r.OBj)().getBool("WEBGL_PACK_REDUCE")||t.rank<=2){const[e,o]=r.Wap.computeOutAndReduceShapes(t.shape,i),s=r.D5U.NA(o),a=t.as2D(-1,s);return this.argReduce(a,n).reshape(e)}return this.argReducePacked(t,n)}argMin(t,e){return this.argMinMaxReduce(t,e,"min")}argMax(t,e){return this.argMinMaxReduce(t,e,"max")}cumsum(t,e,n,r){if(e!==t.rank-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${t.rank-1} but got axis=${e}`);const i=t.shape[e];let o=t;for(let e=0;e<=Math.ceil(Math.log2(i))-1;e++){const n=new fe(t.shape,!1,r),i=n.getCustomSetupFunc(e),s=o;o=this.compileAndRun(n,[o],o.dtype,i),s.dispose()}if(n){const e=new fe(t.shape,n,r),i=o;o=this.compileAndRun(e,[o]),i.dispose()}return o}equal(t,e){if((0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(equal(a, b));\n","bool");const n=new Zt("return float(a == b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}less(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.less(t,e)));if(n)return n;if((0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThan(a, b));\n","bool");const i=new Zt("return float(a < b);",t.shape,e.shape);return this.compileAndRun(i,[t,e],"bool")}lessEqual(t,e){if((0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(lessThanEqual(a, b));\n","bool");const n=new Zt("return float(a <= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}greater(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.greater(t,e)));if(n)return n;if((0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThan(a, b));\n","bool");const i=new Zt("return float(a > b);",t.shape,e.shape);return this.compileAndRun(i,[t,e],"bool")}greaterEqual(t,e){if((0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(greaterThanEqual(a, b));\n","bool");const n=new Zt("return float(a >= b);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalNot(t){const e=new vn(t.shape,"return float(!(x >= 1.0));");return this.compileAndRun(e,[t])}logicalAnd(t,e){if((0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n","bool");const n=new Zt("return float(a >= 1.0 && b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}logicalOr(t,e){if((0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n","bool");const n=new Zt("return float(a >= 1.0 || b >= 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e],"bool")}select(t,e,n){const i=new un(t.rank,e.shape,e.rank);return this.compileAndRun(i,[t,e,n],(0,r.x8V)(e.dtype,n.dtype))}where(t){r.Wap.warn("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const e=t.dataSync();return Un(t.shape,e)}topk(t,e,n){const r=t.dataSync();return Fn(r,t.shape,t.dtype,e,n)}min(t,e){r.Wap.assertAxesAreInnerMostDims("min",e,t.rank);const[n,i]=r.Wap.computeOutAndReduceShapes(t.shape,e),o=r.D5U.NA(i),s=t.as2D(-1,o);return this.reduce(s,"min",s.dtype).reshape(n)}minimum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.minimum(t,e)));if(n)return n;const i=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Qt("\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Zt("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",t.shape,e.shape);return this.compileAndRun(i,[t,e])}mod(t,e){const n=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Qt("\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Zt("if (b == 0.0) return NAN;\n  return mod(a, b);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}maximum(t,e){const n=this.tryRunOnCpuOrThrow([t,e],(()=>this.cpuBackend.maximum(t,e)));if(n)return n;const i=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Qt("\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Zt("\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",t.shape,e.shape);return this.compileAndRun(i,[t,e])}all(t,e){r.Wap.assertAxesAreInnerMostDims("all",e,t.rank);const[n,i]=r.Wap.computeOutAndReduceShapes(t.shape,e),o=r.D5U.NA(i),s=t.as2D(-1,o);return this.reduce(s,"all",s.dtype).reshape(n)}any(t,e){r.Wap.assertAxesAreInnerMostDims("any",e,t.rank);const[n,i]=r.Wap.computeOutAndReduceShapes(t.shape,e),o=r.D5U.NA(i),s=t.as2D(-1,o);return this.reduce(s,"any",s.dtype).reshape(n)}floorDiv(t,e){const n="int32";if((0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS"))return this.packedBinaryOp(t,e,"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",n);const i=new Zt("\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",t.shape,e.shape);return this.compileAndRun(i,[t,e],n)}packedUnaryOp(t,e,n){const r=new Ln(t.shape,e);return this.compileAndRun(r,[t],n)}packedBinaryOp(t,e,n,r,i=!1){const o=new Qt(n,t.shape,e.shape,i);return this.compileAndRun(o,[t,e],r)}makeComplexComponentTensorInfo(t,e){return{dataId:e.dataId,dtype:e.dtype,shape:t.shape}}addN(t){if(1===t.length)return t[0];if(t.length>(0,r.OBj)().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const e=Math.floor(t.length/2),n=this.addN(t.slice(0,e)),r=this.addN(t.slice(e));return this.addN([n,r])}const e=t.map((t=>t.dtype)).reduce(((t,e)=>(0,r.x8V)(t,e))),n=t.map((t=>t.shape)),i=(0,r.OBj)().getBool("WEBGL_PACK")?new Mt(t[0].shape,n):new Et(t[0].shape,n);return this.compileAndRun(i,t,e)}pow(t,e){const n=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Qt("\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",t.shape,e.shape):new Zt("\nif(a < 0.0 && floor(b) < b){\n  return NAN;\n}\nif (b == 0.0) {\n  return 1.0;\n}\nreturn (round(mod(b, 2.0)) != 1) ?\n    pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",t.shape,e.shape),i=(0,r.x8V)(t.dtype,e.dtype);return this.compileAndRun(n,[t,e],i)}ceil(t){if(this.shouldExecuteOnCPU([t])){const e=dt(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,En,t.dtype);const e=new vn(t.shape,En);return this.compileAndRun(e,[t])}floor(t){if(this.shouldExecuteOnCPU([t])){const e=gt(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Mn,t.dtype);const e=new vn(t.shape,Mn);return this.compileAndRun(e,[t])}sign(t){const e=new vn(t.shape,"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n");return this.compileAndRun(e,[t])}isNaN(t){const e=new vn(t.shape,"return float(isnan(x));");return this.compileAndRun(e,[t],"bool")}isInf(t){const e=new vn(t.shape,"return float(isinf(x));");return this.compileAndRun(e,[t],"bool")}isFinite(t){const e=new vn(t.shape,"return float(!isnan(x) && !isinf(x));");return this.compileAndRun(e,[t],"bool")}round(t){const e=new vn(t.shape,"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n");return this.compileAndRun(e,[t])}exp(t){if(this.shouldExecuteOnCPU([t])){const e=ft(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,Cn,t.dtype);const e=new vn(t.shape,Cn);return this.compileAndRun(e,[t])}expm1(t){if(this.shouldExecuteOnCPU([t])){const e=mt(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,An,t.dtype);const e=new vn(t.shape,An);return this.compileAndRun(e,[t])}softmax(t,e){const n=r.D5U.EC([e],t.shape),i=(0,r.Fp7)(t,n),o=r.Wap.expandShapeToKeepDim(i.shape,n),s=r.luU(t,i.reshape(o)),a=this.exp(s),u=this.sum(a,n).reshape(o);return(0,r.hiC)(a,u)}log(t){if(this.shouldExecuteOnCPU([t])){const e=yt(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,"\n  vec4 result = log(x);\n  vec4 isNaN = vec4(lessThan(x, vec4(0.0)));\n  result.r = isNaN.r == 1.0 ? NAN : result.r;\n  result.g = isNaN.g == 1.0 ? NAN : result.g;\n  result.b = isNaN.b == 1.0 ? NAN : result.b;\n  result.a = isNaN.a == 1.0 ? NAN : result.a;\n\n  return result;\n",t.dtype);const e=new vn(t.shape,"if (x < 0.0) return NAN;\n  return log(x);");return this.compileAndRun(e,[t])}log1p(t){const e=new vn(t.shape,"return log(1.0 + x);");return this.compileAndRun(e,[t])}sqrt(t){const e=new vn(t.shape,"return sqrt(x);");return this.compileAndRun(e,[t])}rsqrt(t){if(this.shouldExecuteOnCPU([t])){const e=bt(this.texData.get(t.dataId).values,t.dtype);return this.makeOutput(t.shape,t.dtype,e)}const e=new vn(t.shape,"return inversesqrt(x);");return this.compileAndRun(e,[t])}reciprocal(t){const e=new vn(t.shape,"return 1.0 / x;");return this.compileAndRun(e,[t])}relu(t){let e;return e=(0,r.OBj)().getBool("WEBGL_PACK")?new Ln(t.shape,In):new vn(t.shape,bn),this.compileAndRun(e,[t])}relu6(t){let e;return e=(0,r.OBj)().getBool("WEBGL_PACK")?new Ln(t.shape,Dn):new vn(t.shape,wn),this.compileAndRun(e,[t])}prelu(t,e){const n=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Qt(Jt,t.shape,e.shape):new Zt(Kt,t.shape,e.shape);return this.compileAndRun(n,[t,e])}elu(t){if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,On,t.dtype);const e=new vn(t.shape,_n);return this.compileAndRun(e,[t])}eluDer(t,e){const n=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Qt("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",t.shape,e.shape):new Zt("return (b >= 1.0) ? a : a * (b + 1.0);",t.shape,e.shape);return this.compileAndRun(n,[t,e])}selu(t){const e=new vn(t.shape,Sn);return this.compileAndRun(e,[t])}clip(t,e,n){let i;i=(0,r.OBj)().getBool("WEBGL_PACK_CLIP")?new ee(t.shape):new te(t.shape);const o=i.getCustomSetupFunc(e,n);return this.compileAndRun(i,[t],null,o)}abs(t){if(this.shouldExecuteOnCPU([t])&&"complex64"!==t.dtype){const e=ht(this.texData.get(t.dataId).values);return this.makeOutput(t.shape,t.dtype,e)}if((0,r.OBj)().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(t,xn,t.dtype);const e=new vn(t.shape,xn);return this.compileAndRun(e,[t])}complexAbs(t){const e=this.texData.get(t.dataId),n=new ne(t.shape),r=[this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.real),this.makeComplexComponentTensorInfo(t,e.complexTensorInfos.imag)];return this.compileAndRun(n,r)}sigmoid(t){const e=new vn(t.shape,"return 1.0 / (1.0 + exp(-1.0 * x));");return this.compileAndRun(e,[t])}softplus(t){const e=new vn(t.shape,"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n");return this.compileAndRun(e,[t])}asin(t){const e=new vn(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n");return this.compileAndRun(e,[t])}acos(t){const e=new vn(t.shape,"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n");return this.compileAndRun(e,[t])}atan(t){const e=new vn(t.shape,"if (isnan(x)) return x;\n  return atan(x);\n");return this.compileAndRun(e,[t])}sinh(t){const e=new vn(t.shape,"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}cosh(t){const e=new vn(t.shape,"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n");return this.compileAndRun(e,[t])}tanh(t){const e=new vn(t.shape,"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n");return this.compileAndRun(e,[t])}asinh(t){const e=new vn(t.shape,"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));");return this.compileAndRun(e,[t])}acosh(t){const e=new vn(t.shape,"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\n  return log(x + sqrt(x * x - 1.0));");return this.compileAndRun(e,[t])}atanh(t){const e=new vn(t.shape,"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\n  return (log(1.0 + x) - log(1.0 - x)) / 2.0;");return this.compileAndRun(e,[t])}erf(t){const e=new vn(t.shape,Nn);return this.compileAndRun(e,[t])}step(t,e){const n=new vn(t.shape,function(t=0){return`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t});\n  `}(e));return this.compileAndRun(n,[t])}conv2dByMatMul(t,e,n,i,o,s){const a=t.shape,u=this.texData.get(t.dataId),c=n.inChannels,l=a[0]*a[1]*a[2],h=n.outChannels,p="channelsLast"===n.dataFormat,d=(1===l||1===h)&&c>1e3,f=a[2]%2!=0&&!!u.isPacked;if(d||!(0,r.OBj)().getBool("WEBGL_LAZILY_UNPACK")||!(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")||!f){const u=p?a[0]*a[1]*a[2]:a[0]*a[2]*a[3],c=(0,r.XLQ)(t,[1,u,n.inChannels]),l=(0,r.XLQ)(e,[1,n.inChannels,n.outChannels]),h=this.fusedBatchMatMul({a:c,b:l,transposeA:!1,transposeB:!1,bias:i,activation:o,preluActivationWeights:s});return(0,r.XLQ)(h,n.outShape)}const m=p?a[0]*a[1]*(a[2]+1):a[0]*a[2]*(a[3]+1),g={dataId:t.dataId,shape:[1,m,n.inChannels],dtype:t.dtype},y=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,r.D5U.hu(N(u.shape,g.shape),(()=>`packed reshape ${u.shape} to ${g.shape} isn't free`));const v=(0,r.XLQ)(e,[1,n.inChannels,n.outChannels]),x=this.fusedBatchMatMul({a:g,b:v,transposeA:!1,transposeB:!1,bias:i,activation:o,preluActivationWeights:s}),b=this.texData.get(x.dataId);return r.D5U.hu(b.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=y,b.shape=n.outShape,(0,r.SRH)().makeTensorFromDataId(x.dataId,n.outShape,x.dtype)}conv2dWithIm2Row(t,e,n,r,i,o){const{filterWidth:s,filterHeight:a,inChannels:u,outWidth:c,outHeight:l,dataFormat:h}=n,p="channelsLast"===h,d=s*a*u,f=l*c,m=[d,f],g=t.squeeze([0]),y=e.reshape([1,d,-1]),v=new Pe(m,g.shape,n),x=this.compileAndRun(v,[g]).reshape([1,m[0],m[1]]),b=null!=r,w=null!=o,_=i?Vn(i,!0):null,S=new Ve(x.shape,y.shape,[1,f,n.outChannels],!0,!1,b,_,w),T=[x,y];r&&T.push(r),w&&T.push(o);const E=this.compileAndRun(S,T);return p?E.reshape([1,l,c,n.outChannels]):E.reshape([1,n.outChannels,l,c])}fusedConv2d({input:t,filter:e,convInfo:n,bias:i,activation:o,preluActivationWeights:s}){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n,i,o,s);if((0,r.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n,i,o,s);const a=null!=i,u=null!=s,c=o?Vn(o,!1):null,l=new ce(n,a,c,u),h=[t,e];return i&&h.push(i),s&&h.push(s),this.compileAndRun(l,h)}conv2d(t,e,n){if(1===n.filterHeight&&1===n.filterWidth&&1===n.dilationHeight&&1===n.dilationWidth&&1===n.strideHeight&&1===n.strideWidth&&("SAME"===n.padInfo.type||"VALID"===n.padInfo.type))return this.conv2dByMatMul(t,e,n);if((0,r.OBj)().getBool("WEBGL_CONV_IM2COL")&&1===t.shape[0])return this.conv2dWithIm2Row(t,e,n);const i=new ce(n);return this.compileAndRun(i,[t,e])}conv2dDerInput(t,e,n){const r=new ie(n);return this.compileAndRun(r,[t,e])}conv2dDerFilter(t,e,n){const r=new re(n);return this.compileAndRun(r,[t,e])}fusedDepthwiseConv2D({input:t,filter:e,convInfo:n,bias:i,activation:o,preluActivationWeights:s}){const a=(0,r.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1,u=o?Vn(o,a):null,c=[t,e],l=null!=i,h=null!=s;let p;return l&&c.push(i),h&&c.push(s),a?(p=new pe(n,l,u,h),this.compileAndRun(p,c)):(p=new he(n,l,u,h),this.compileAndRun(p,c))}depthwiseConv2D(t,e,n){let i;return(0,r.OBj)().getBool("WEBGL_PACK_DEPTHWISECONV")&&n.strideWidth<=2&&n.outChannels/n.inChannels==1?(i=new pe(n),this.compileAndRun(i,[t,e])):(i=new he(n),this.compileAndRun(i,[t,e]))}depthwiseConv2DDerInput(t,e,n){const r=new ue(n);return this.compileAndRun(r,[t,e])}depthwiseConv2DDerFilter(t,e,n){const r=new ae(n);return this.compileAndRun(r,[t,e])}conv3d(t,e,n){const r=new le(n);return this.compileAndRun(r,[t,e])}conv3dDerInput(t,e,n){const r=new se(n);return this.compileAndRun(r,[t,e])}conv3dDerFilter(t,e,n){const r=new oe(n);return this.compileAndRun(r,[t,e])}unstack(t,e){const n=t.shape[e],r=new Array(t.rank-1);let i=0;for(let n=0;n<t.rank;n++)n!==e&&(r[i++]=t.shape[n]);const o=new Array(t.rank).fill(0),s=t.shape.slice();s[e]=1;const a=new Array(n);for(let n=0;n<a.length;n++)o[e]=n,a[n]=this.slice(t,o,s).reshape(r);return a}avgPool3d(t,e){const n=new Ye(e,"avg",!1);return this.compileAndRun(n,[t],"float32")}avgPool3dBackprop(t,e,n){const r=new Yt(n);return this.compileAndRun(r,[t],e.dtype)}maxPool3d(t,e){const n=new Ye(e,"max",!1);return this.compileAndRun(n,[t],"float32")}maxPool3dBackprop(t,e,n,r){const i=new Ye(r,"max",!0),o=this.compileAndRun(i,[e]),s=new ze(r),a=this.compileAndRun(s,[t,o],e.dtype);return o.dispose(),a}resizeBilinear(t,e,n,i){const o=(0,r.OBj)().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new tn(t.shape,e,n,i):new Qe(t.shape,e,n,i);return this.compileAndRun(o,[t],"float32")}resizeBilinearBackprop(t,e,n){const r=new Je(t,e,n);return this.compileAndRun(r,[t])}resizeNearestNeighbor(t,e,n,r){const i=new nn(t.shape,e,n,r);return this.compileAndRun(i,[t])}resizeNearestNeighborBackprop(t,e,n){const r=new en(t,e,n);return this.compileAndRun(r,[t])}multinomial(t,e,n,i){const o=e?t:(0,r.XAC)(t),s=o.shape[0],a=o.shape[1],u=new We(s,a,n),c=u.getCustomSetupFunc(i);return this.compileAndRun(u,[o],"int32",c)}oneHot(t,e,n,r){const i=new He(t.size,e,n,r);return this.compileAndRun(i,[t])}diag(t){const e=new be(t.size);return this.compileAndRun(e,[t])}cropAndResize(t,e,n,r,i,o){const s=new de(t.shape,e.shape,r,i,o);return this.compileAndRun(s,[t,e,n],"float32")}depthToSpace(t,e,n){r.D5U.hu(e>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${e}`));const i=t.shape[0],o="NHWC"===n?t.shape[1]:t.shape[2],s="NHWC"===n?t.shape[2]:t.shape[3],a="NHWC"===n?t.shape[3]:t.shape[1],u=o*e,c=s*e,l=a/(e*e),h=new xe("NHWC"===n?[i,u,c,l]:[i,l,u,c],e,n);return this.compileAndRun(h,[t])}split(t,e,n){return $n(t,e,n)}scatterND(t,e,n){const{sliceRank:i,numUpdates:o,sliceSize:s,strides:a,outputSize:u}=r.Wap.calculateShapes(e,t,n),c=[u/s,s],l=t.reshape([o,i]),h=e.reshape([o,s]);if(0===u)return r.Wap.reshapeTensor((0,r.XeE)([]),n);const p=(0,r.iD$)(0),d=new sn(o,i,l.rank,h.rank,a,c);return this.compileAndRun(d,[h,l,p]).reshape(n)}sparseToDense(t,e,n,i){const{sliceRank:o,numUpdates:s,strides:a,outputSize:u}=r.Wap.calculateShapes(e,t,n),c=new sn(s,o,t.rank,e.rank,a,[u,1],!1);return this.compileAndRun(c,[e,t,i]).reshape(n)}gatherND(t,e){const n=e.shape,i=n[n.length-1],[o,s,a,u]=r.Wap.prepareAndValidate(t,e),c=e.reshape([s,i]),l=t.reshape([t.size/a,a]),h=new Ce(i,u,[s,a]);return this.compileAndRun(h,[l,c]).reshape(o)}fill(t,e,n){if("string"===(n=n||r.D5U.D2(e))){const i=r.D5U.rQ(n,r.D5U.NA(t));return i.fill(e),(0,r.SRH)().makeTensor(i,t,n,this)}{const r=new Ee(t,e),i=r.getCustomSetupFunc(e);return this.compileAndRun(r,[],n,i)}}onesLike(t){if("string"===t.dtype)throw new Error("onesLike is not supported under string dtype");return this.fill(t.shape,1,t.dtype)}zerosLike(t){return this.fill(t.shape,"string"===t.dtype?"":0,t.dtype)}linspace(t,e,n){return r.Wap.linspaceImpl(t,e,n)}makeTensorInfo(t,e,n){const r=this.write(n,t,e);return this.texData.get(r).usage=null,{dataId:r,shape:t,dtype:e}}makeOutput(t,e,n){const{dataId:i}=this.makeTensorInfo(t,e,n);return(0,r.SRH)().makeTensorFromDataId(i,t,e,this)}unpackTensor(t){const e=new kn(t.shape);return this.runWebGLProgram(e,[t],t.dtype)}packTensor(t){const e=new Ge(t.shape);return this.runWebGLProgram(e,[t],t.dtype,null,!0)}packedReshape(t,e){const n=[E(t.shape),...M(t.shape)],r={dtype:t.dtype,shape:n,dataId:t.dataId},i=[E(e),...M(e)],o=new Ze(i,n),s=this.runWebGLProgram(o,[r],t.dtype,null,!0);return{dataId:s.dataId,shape:e,dtype:s.dtype}}decode(t){const e=this.texData.get(t),{isPacked:n,shape:r,dtype:i}=e,o=C(r);let s;return s=n?new ve(o):new ye(o),{dtype:i,shape:r,dataId:this.runWebGLProgram(s,[{shape:o,dtype:i,dataId:t}],i,null,!0).dataId}}runWebGLProgram(t,e,n,i,o=!1){const s=this.makeTensorInfo(t.outputShape,n),u=this.texData.get(s.dataId);if(t.packedOutput&&(u.isPacked=!0),t.outPackingScheme===a.DENSE){const e=h(t.outputShape);u.texShape=e.map((t=>2*t))}if(null!=t.outTexUsage&&(u.usage=t.outTexUsage),0===r.D5U.NA(s.shape))return u.values=r.D5U.WP(s.dtype,0),s;const c=[],l=e.map((e=>{if("complex64"===e.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(e.dataId);if(null==n.texture){if(!t.packedInputs&&r.D5U.NA(e.shape)<=(0,r.OBj)().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:e.shape,texData:null,isUniform:!0,uniformValues:n.values};t.packedInputs&&(n.isPacked=!0,n.shape=e.shape)}else if(!!n.isPacked!=!!t.packedInputs)e=n.isPacked?this.unpackTensor(e):this.packTensor(e),c.push(e),n=this.texData.get(e.dataId);else if(n.isPacked&&!N(n.shape,e.shape)){const t=e,r=e.shape;e.shape=n.shape,e=this.packedReshape(e,r),c.push(e),n=this.texData.get(e.dataId),t.shape=r}return this.uploadToGPU(e.dataId),{shape:e.shape,texData:n,isUniform:!1}}));this.uploadToGPU(s.dataId);const p={shape:s.shape,texData:u,isUniform:!1},d=function(t,e,n){let r="";e.concat(n).forEach((t=>{const e=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0,n=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${n}_${e}`}));const i=t.userCode;let o=t.constructor.name;return o+="_"+r+"_"+i,o}(t,l,p),f=this.getAndSaveBinary(d,(()=>function(t,e,n,i){const o=e.userCode,s=n.map(((t,n)=>{const r={logicalShape:t.shape,texShape:t.isUniform?null:t.texData.texShape,isUniform:t.isUniform,isPacked:!t.isUniform&&t.texData.isPacked,flatOffset:null};return null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0&&(r.flatOffset=t.texData.slice.flatOffset),{name:e.variableNames[n],shapeInfo:r}})),a=s.map((t=>t.shapeInfo)),u={logicalShape:i.shape,texShape:i.texData.texShape,isUniform:!1,isPacked:i.texData.isPacked,flatOffset:null},c=kt(s,u,o,e.packedInputs),l=t.createProgram(c);let h=null;const p=t.getUniformLocation(l,"NAN",!1);1===(0,r.OBj)().getNumber("WEBGL_VERSION")&&(h=t.getUniformLocation(l,"INFINITY",!1));const d={};for(let n=0;n<e.variableNames.length;n++){const r=e.variableNames[n],i=!1;d[r]=t.getUniformLocation(l,r,i),d[`offset${r}`]=t.getUniformLocation(l,`offset${r}`,i)}return{program:e,source:c,webGLProgram:l,uniformLocations:d,inShapeInfos:a,outShapeInfo:u,infLoc:h,nanLoc:p}}(this.gpgpu,t,l,p))),m=null!=this.activeTimers;let g;if(m&&(g=this.startTimer()),function(t,e,n,i,o){ke(e.inShapeInfos,n),ke([e.outShapeInfo],[i]);const s=i.texData.texture,a=i.texData.texShape;i.texData.isPacked?t.setOutputPackedMatrixTexture(s,a[0],a[1]):t.setOutputMatrixTexture(s,a[0],a[1]),t.setProgram(e.webGLProgram),1===(0,r.OBj)().getNumber("WEBGL_VERSION")&&null!==e.infLoc&&t.gl.uniform1f(e.infLoc,1/0),null!==e.nanLoc&&t.gl.uniform1f(e.nanLoc,NaN),n.forEach(((n,i)=>{const o=e.program.variableNames[i],s=e.uniformLocations[o],a=e.uniformLocations[`offset${o}`];if(null!=s)if(n.isUniform)if(r.D5U.NA(n.shape)<2)t.gl.uniform1f(s,n.uniformValues[0]);else{let e=n.uniformValues;e instanceof Float32Array||(e=new Float32Array(e)),t.gl.uniform1fv(s,e)}else null!=n.texData.slice&&null!=a&&t.gl.uniform1i(a,n.texData.slice.flatOffset),t.setInputMatrixTexture(n.texData.texture,s,i)})),null!=o&&o(t,e.webGLProgram),t.executeProgram()}(this.gpgpu,f,l,p,i),c.forEach((t=>this.disposeIntermediateTensorInfo(t))),m&&(g=this.endTimer(g),this.activeTimers.push({name:t.constructor.name,query:this.getQueryTime(g)})),!(0,r.OBj)().getBool("WEBGL_LAZILY_UNPACK")&&u.isPacked&&!1===o){const t=this.unpackTensor(s);return this.disposeIntermediateTensorInfo(s),t}return s}compileAndRun(t,e,n,i,o=!1){n=n||e[0].dtype;const s=this.runWebGLProgram(t,e,n,i,o);return(0,r.SRH)().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}getAndSaveBinary(t,e){return t in this.binaryCache||(this.binaryCache[t]=e()),this.binaryCache[t]}getTextureManager(){return this.textureManager}dispose(){this.disposed||((0,r.OBj)().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((t=>{this.gpgpu.deleteProgram(this.binaryCache[t].webGLProgram),delete this.binaryCache[t]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=(0,r.lub)((()=>{if(!(0,r.OBj)().get("WEBGL_RENDER_FLOAT32_ENABLED")){const t=(0,r.OBj)().getBool("DEBUG");(0,r.OBj)().set("DEBUG",!1);const e=this.abs((0,r.iD$)(1e-8)).dataSync()[0];if((0,r.OBj)().set("DEBUG",t),e>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(t){const e=this.texData.get(t),{shape:n,dtype:i,values:o,texture:s,usage:a,isPacked:c}=e;if(null!=s)return;const l=null!=this.activeTimers;let h;l&&(h=r.D5U.zO());let d=e.texShape;if(null==d&&(d=function(t,e=!1){let n=(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e&&(n*=2,1===(t=t.map(((e,n)=>n>=t.length-2?r.D5U.nY(t[n]):t[n]))).length&&(t=[2,t[0]])),2!==t.length){const e=r.D5U.bp(t);t=e.newShape}let i=r.D5U.NA(t);if(t.length<=1&&i<=n)return[1,i];if(2===t.length&&t[0]<=n&&t[1]<=n)return t;if(3===t.length&&t[0]*t[1]<=n&&t[2]<=n)return[t[0]*t[1],t[2]];if(3===t.length&&t[0]<=n&&t[1]*t[2]<=n)return[t[0],t[1]*t[2]];if(4===t.length&&t[0]*t[1]*t[2]<=n&&t[3]<=n)return[t[0]*t[1]*t[2],t[3]];if(4===t.length&&t[0]<=n&&t[1]*t[2]*t[3]<=n)return[t[0],t[1]*t[2]*t[3]];if(e){const e=E(t);let n=2,o=2;return t.length&&([n,o]=M(t)),i=e*(n/2)*(o/2),r.D5U.YP(i).map((t=>2*t))}return r.D5U.YP(i)}(n,c),e.texShape=d),null!=o){const t=C(n);let s,a=d[1],f=d[0];const m=o instanceof Uint8Array;c?([a,f]=p(d[0],d[1]),s=new Te(t,[f,a],m)):s=new Se(t,[f,a],m);const g=this.makeTensorInfo([f,a],i);this.texData.get(g.dataId).usage=m?u.PIXELS:u.UPLOAD,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(g.dataId),a,f,o);const y=!0,v=this.runWebGLProgram(s,[g],i,null,y),x=this.texData.get(v.dataId);e.texture=x.texture,e.texShape=x.texShape,e.isPacked=x.isPacked,e.usage=x.usage,this.disposeIntermediateTensorInfo(g),this.texData.delete(v.dataId),e.values=null,l&&(this.uploadWaitMs+=r.D5U.zO()-h)}else{const t=this.acquireTexture(d,a,i,c);e.texture=t}}convertAndCacheOnCPU(t,e){const n=this.texData.get(t),{dtype:r}=n;return this.releaseGPUData(t),null!=e&&(n.values=function(t,e){if("float32"===e||"complex64"===e)return t;if("int32"===e||"bool"===e){const n="int32"===e?new Int32Array(t.length):new Uint8Array(t.length);for(let e=0;e<n.length;++e)n[e]=Math.round(t[e]);return n}throw new Error(`Unknown dtype ${e}`)}(e,r)),n.values}acquireTexture(t,e,n,r){if(this.numBytesInGPU+=this.computeBytes(t,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const t=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${t} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(t,e,r)}computeBytes(t,e){return t[0]*t[1]*r.D5U.bT(e)}tryRunOnCpuOrThrow(t,e){if(this.shouldExecuteOnCPU(t))try{return e()}catch(t){if((0,r.OBj)().getBool("IS_TEST"))throw new Error("CPU forwarding failed")}return null}}function Hn(t){const{inputs:e,backend:n}=t,{x:r}=e;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}r.C2$.j()&&(0,r.jqO)("webgl",(()=>new Wn),2);const Gn={kernelName:r.iJz,backendName:"webgl",kernelFunc:Hn};function jn(t){const{inputs:e,backend:n}=t,{real:r,imag:i}=e,o=n.makeTensorInfo(r.shape,"complex64"),s=n.texData.get(o.dataId),a=Hn({inputs:{x:r},backend:n});n.texData.get(a.dataId).complexParentRefCount++;const u=Hn({inputs:{x:i},backend:n});return n.texData.get(u.dataId).complexParentRefCount++,s.complexTensorInfos={real:a,imag:u},o}const Xn={kernelName:r.Zz9,backendName:"webgl",kernelFunc:jn};function qn(t){return({inputs:e,backend:n})=>{const{x:r}=e,i=n,o=new vn(r.shape,t);return i.runWebGLProgram(o,[r],r.dtype)}}function Yn({opSnippet:t,packedOpSnippet:e,checkOutOfBounds:n=!1,supportsComplex:i=!1,cpuKernelImpl:o,dtype:s}){return({inputs:a,backend:u})=>{const{a:c,b:l}=a,h=u;if(i&&"complex64"===c.dtype){const e=h.texData.get(c.dataId),n=h.texData.get(l.dataId),[i,o]=[[e.complexTensorInfos.real,n.complexTensorInfos.real],[e.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((e=>{const[n,i]=e,o={dataId:n.dataId,dtype:n.dtype,shape:c.shape},s={dataId:i.dataId,dtype:i.dtype,shape:l.shape},a=new Zt(t,c.shape,l.shape);return h.runWebGLProgram(a,[o,s],(0,r.x8V)(n.dtype,i.dtype))})),s=jn({inputs:{real:i,imag:o},backend:h});return h.disposeIntermediateTensorInfo(i),h.disposeIntermediateTensorInfo(o),s}const p=s||(0,r.x8V)(c.dtype,l.dtype);if(h.shouldExecuteOnCPU([c,l])&&null!=o){const t=h.texData.get(c.dataId),e=h.texData.get(l.dataId),[n,r]=o(c.shape,l.shape,t.values,e.values,p),i=h.makeTensorInfo(r,p);return h.texData.get(i.dataId).values=n,i}let d;return d=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=e?new Qt(e,c.shape,l.shape,n):new Zt(t,c.shape,l.shape),h.runWebGLProgram(d,[c,l],p)}}const Kn="return a + b;",Zn=Yn({opSnippet:Kn,packedOpSnippet:Kn,supportsComplex:!0,cpuKernelImpl:pt}),Jn={kernelName:r.mm_,backendName:"webgl",kernelFunc:Zn},Qn=Yn({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),tr={kernelName:r.QCc,backendName:"webgl",kernelFunc:Qn},er={kernelName:r.JhU,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:i}=t,{x:o}=e;k(o,"avgPool");const{filterSize:s,strides:a,pad:u,dimRoundingMode:c}=i;r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(a,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const l=r.Wap.computePool2DInfo(o.shape,s,a,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&r.D5U.cO(l.inShape,l.outShape))return Hn({inputs:{x:o},backend:n});const h=new qe(l,"avg",!1);return n.runWebGLProgram(h,[o],"float32")}},nr={kernelName:r.xts,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:i}=t,{dy:o,input:s}=e,a=s;k([o,s],"avgPoolBackprop");const{filterSize:u,strides:c,pad:l}=i,h=r.Wap.computePool2DInfo(a.shape,u,c,1,l),p=new qt(h);return n.runWebGLProgram(p,[o],a.dtype)}};class rr{constructor(t,e,n,i,o,s){this.outputShape=[],this.variableNames=["x","mean","variance"],r.Wap.assertAndGetBroadcastShape(t,e),r.Wap.assertAndGetBroadcastShape(t,n);let a="0.0";null!=i&&(r.Wap.assertAndGetBroadcastShape(t,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="1.0";null!=o&&(r.Wap.assertAndGetBroadcastShape(t,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${a};\n        float scale = ${u};\n        float inv = scale * inversesqrt(variance + float(${s}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class ir{constructor(t,e,n,i,o,s){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],r.Wap.assertAndGetBroadcastShape(t,e),r.Wap.assertAndGetBroadcastShape(t,n);let a="vec4(0.0)";null!=i&&(r.Wap.assertAndGetBroadcastShape(t,i),this.variableNames.push("offset"),a="getOffsetAtOutCoords()");let u="vec4(1.0)";null!=o&&(r.Wap.assertAndGetBroadcastShape(t,o),this.variableNames.push("scale"),u="getScaleAtOutCoords()"),this.outputShape=t,this.userCode=`\n      void main() {\n        vec4 offset = ${a};\n        vec4 scale = ${u};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${s}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const or={kernelName:r.sHE,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:i,mean:o,variance:s,offset:a,scale:u}=t;r.D5U.hu(o.shape.length===s.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),r.D5U.hu(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),r.D5U.hu(null==u||o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:c}=n;null==c&&(c=.001);const l=[i,o,s];let h=null;null!=a&&(h=a.shape,l.push(a));let p=null;null!=u&&(p=u.shape,l.push(u));const d=(0,r.OBj)().getBool("WEBGL_PACK_NORMALIZATION")?new ir(i.shape,o.shape,s.shape,h,p,c):new rr(i.shape,o.shape,s.shape,h,p,c);return e.runWebGLProgram(d,l,l[0].dtype)}},sr=Yn({opSnippet:"return float(a != b);",dtype:"bool"}),ar={kernelName:r.yQU,backendName:"webgl",kernelFunc:sr};function ur(t){const{inputs:e,backend:n}=t,{input:r}=e;return Hn({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const cr={kernelName:r.xJR,backendName:"webgl",kernelFunc:ur},lr={kernelName:r.RFZ,backendName:"webgl",kernelFunc:function t(e){const{inputs:n,backend:i,attrs:o}=e,{x:s}=n,{dtype:a}=o;if("complex64"===a){if("complex64"===s.dtype)return Hn({inputs:{x:s},backend:i});const e=r.lls(s.shape),n=t({inputs:{x:s},backend:i,attrs:{dtype:"float32"}}),o=jn({inputs:{real:n,imag:e},backend:i});return e.dispose(),i.disposeIntermediateTensorInfo(n),o}if("complex64"===s.dtype){const e=ur({inputs:{input:s},backend:i}),n=t({inputs:{x:e},backend:i,attrs:{dtype:a}});return i.disposeIntermediateTensorInfo(e),n}if(!r.D5U.QB(s.dtype,a)){const t=Hn({inputs:{x:s},backend:i});return{dataId:t.dataId,shape:t.shape,dtype:a}}if("int32"===a)return function(t,e){const n=new vn(t.shape,"return float(int(x));"),r=e.runWebGLProgram(n,[t],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(s,i);if("bool"===a){const t=i.makeTensorInfo([],"bool",r.D5U.WP("bool",1)),e=sr({inputs:{a:s,b:t},backend:i});return i.disposeIntermediateTensorInfo(t),e}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}};class hr{constructor(t){this.outputShape=[],this.outputShape=r.Wap.computeOutShape(t,1),this.variableNames=t.map(((t,e)=>`T${e}`));const e=new Array(t.length-1);e[0]=t[0][1];for(let n=1;n<e.length;n++)e[n]=e[n-1]+t[n][1];const n=[`if (yC < ${e[0]}) setOutput(getT0(yR, yC));`];for(let t=1;t<e.length;t++){const r=e[t-1];n.push(`else if (yC < ${e[t]}) setOutput(getT${t}(yR, yC-${r}));`)}const i=e.length,o=e[e.length-1];n.push(`else setOutput(getT${i}(yR, yC-${o}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class pr{constructor(t,e){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=r.Wap.computeOutShape(t,e);const n=this.outputShape,i=n.length,o=Ht(i),s=Nt("coords",i),a=["x","y","z","w","u","v"].slice(0,i);this.variableNames=t.map(((t,e)=>`T${e}`));const u=new Array(t.length-1);u[0]=t[0][e];for(let n=1;n<u.length;n++)u[n]=u[n-1]+t[n][e];const c=a[e],l=a.slice(-2),h=a.join();let p=`if (${c} < ${u[0]}) {\n        return getChannel(\n            getT0(${h}), vec2(${l.join()}));\n        }`;for(let t=1;t<u.length;t++){const e=u[t-1];p+=`\n        if (${c} < ${u[t]}  && ${c} >= ${u[t-1]}) {\n          return getChannel(\n            getT${t}(${dr(a,c,e)}),\n            vec2(${dr(l,c,e)}));\n        }`}const d=u.length,f=u[u.length-1];p+=`\n        return getChannel(\n          getT${d}(${dr(a,c,f)}),\n          vec2(${dr(l,c,f)}));`,this.userCode=`\n      float getValue(${a.map((t=>"int "+t))}) {\n        ${p}\n      }\n\n      void main() {\n        ${o} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${s}), 0., 0., 0.);\n\n        ${s[i-1]} = ${s[i-1]} + 1;\n        if (${s[i-1]} < ${n[i-1]}) {\n          result.g = getValue(${s});\n        }\n\n        ${s[i-2]} = ${s[i-2]} + 1;\n        if (${s[i-2]} < ${n[i-2]}) {\n          result.a = getValue(${s});\n        }\n\n        ${s[i-1]} = ${s[i-1]} - 1;\n        if (${s[i-2]} < ${n[i-2]} &&\n            ${s[i-1]} < ${n[i-1]}) {\n          result.b = getValue(${s});\n        }\n        setOutput(result);\n      }\n    `}}function dr(t,e,n){const r=t.indexOf(e);return t.map(((t,e)=>e===r?`${t} - ${n}`:t)).join()}function fr(t){const{inputs:e,backend:n}=t,{input:r}=e;return Hn({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const mr={kernelName:r.J_u,backendName:"webgl",kernelFunc:fr};function gr(t){const{inputs:e,backend:n,attrs:i}=t,{x:o}=e,{shape:s}=i,a=n,u=r.D5U.NA(o.shape),c=r.D5U.JZ(s,u),l=r.D5U.NA(c);r.D5U.hu(u===l,(()=>`The new shape (${c}) has ${l} elements and the old shape (${o.shape}) has ${u} elements. The new shape and old shape must have the same number of elements.`));const h=a.texData.get(o.dataId);return!h.isPacked||N(o.shape,c)||null!==h.texture&&N(h.shape,c)?(a.incRef(o.dataId),{dataId:o.dataId,shape:c,dtype:o.dtype}):function(t,e,n){const r=[E(t.shape),...M(t.shape)],i={dtype:t.dtype,shape:r,dataId:t.dataId},o=[E(e),...M(e)],s=new Ze(o,r),a=n.runWebGLProgram(s,[i],t.dtype,null,!0);return{dataId:a.dataId,shape:e,dtype:a.dtype}}(o,c,a)}const yr={kernelName:r.HZH,backendName:"webgl",kernelFunc:gr};function vr(t,e,n){const i=t[0].dtype;if("complex64"===i){const r=t.map((t=>ur({inputs:{input:t},backend:n}))),i=t.map((t=>fr({inputs:{input:t},backend:n}))),o=vr(r,e,n),s=vr(i,e,n),a=jn({inputs:{real:o,imag:s},backend:n});return r.forEach((t=>n.disposeIntermediateTensorInfo(t))),i.forEach((t=>n.disposeIntermediateTensorInfo(t))),n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(s),a}if(t.length>(0,r.OBj)().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(t.length/2),i=vr(t.slice(0,r),e,n),o=vr(t.slice(r),e,n),s=vr([i,o],e,n);return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),s}if((0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&t[0].shape.length>1){const r=new pr(t.map((t=>t.shape)),e);return n.runWebGLProgram(r,t,i)}const o=r.Wap.computeOutShape(t.map((t=>t.shape)),e),s=t.map((t=>gr({inputs:{x:t},attrs:{shape:[-1,r.D5U.NA(t.shape.slice(e))]},backend:n}))),a=new hr(s.map((t=>t.shape))),u=n.runWebGLProgram(a,s,i);s.forEach((t=>n.disposeIntermediateTensorInfo(t)));const c=gr({inputs:{x:u},attrs:{shape:o},backend:n});return n.disposeIntermediateTensorInfo(u),c}const xr={kernelName:r.Eh3,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:i}=t,{axis:o}=i,s=r.D5U.EC(o,e[0].shape)[0],a=r.Wap.computeOutShape(e.map((t=>t.shape)),s);if(0===r.D5U.NA(a))return n.makeTensorInfo(a,e[0].dtype,[]);const u=e.filter((t=>r.D5U.NA(t.shape)>0));if(1===u.length)return u[0];const c=u.map((t=>t.shape));return r.Wap.assertParamsConsistent(c,s),vr(u,s,n)}},br=qn("if (isnan(x)) return x;\n  return cos(x);\n"),wr={kernelName:r.mc4,backendName:"webgl",kernelFunc:br},_r=Yn({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Sr={kernelName:r.ZCY,backendName:"webgl",kernelFunc:_r};class Tr{constructor(t,e,n){this.variableNames=["real","imag"];const r=e[1];this.outputShape=e;const i=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,o=n?`${r}.0`:"1.0";let s;if("real"===t)s="return real * expR - imag * expI;";else{if("imag"!==t)throw new Error(`FFT component must be either "real" or "imag", got ${t}.`);s="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${i};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${s}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${o};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function Er(t,e,n){const i=n.texData.get(t.dataId),o=r.D5U.NA(t.shape),s=t.shape[t.shape.length-1],a=gr({inputs:{x:t},backend:n,attrs:{shape:[o/s,s]}}).shape,u=new Tr("real",a,e),c=new Tr("imag",a,e),l=[{dataId:i.complexTensorInfos.real.dataId,dtype:i.complexTensorInfos.real.dtype,shape:a},{dataId:i.complexTensorInfos.imag.dataId,dtype:i.complexTensorInfos.imag.dtype,shape:a}],h=n.runWebGLProgram(u,l,"float32"),p=n.runWebGLProgram(c,l,"float32"),d=jn({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=gr({inputs:{x:d},backend:n,attrs:{shape:t.shape}});return n.disposeIntermediateTensorInfo(f),f}const Mr={kernelName:r.vwp,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return Er(r,!1,n)}};class Cr{constructor(t){this.variableNames=["Image"],this.outputShape=[];const e=t[2];this.outputShape=t,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${e} - x;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${e}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const Ar={kernelName:r.Uyb,backendName:"webgl",kernelFunc:({inputs:t,backend:e})=>{const{image:n}=t,r=e,i=new Cr(n.shape);return r.runWebGLProgram(i,[n],n.dtype)}};class Nr{constructor(t){this.variableNames=["A"];const e=Rt(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${e.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class Rr{constructor(t){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const e=Rt(),[n,r]=t;this.outputShape=t,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${e.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${e.output} = result;\n      }\n    `}}const Ir={kernelName:r.eBW,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:i}=t;let{pixels:o}=e;const{numChannels:s}=i,a="undefined"!=typeof HTMLVideoElement&&o instanceof HTMLVideoElement,c="undefined"!=typeof HTMLImageElement&&o instanceof HTMLImageElement,[l,h]=a?[o.videoWidth,o.videoHeight]:[o.width,o.height],p=[h,l],d=[h,l,s];(c||a)&&(null==Dr&&(Dr=document.createElement("canvas").getContext("2d")),Dr.canvas.width=l,Dr.canvas.height=h,Dr.drawImage(o,0,0,l,h),o=Dr.canvas);const f=n.makeTensorInfo(p,"int32");n.texData.get(f.dataId).usage=u.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(f.dataId),o);const m=(0,r.OBj)().getBool("WEBGL_PACK")?new Rr(d):new Nr(d),g=n.runWebGLProgram(m,[f],"int32");return n.disposeData(f.dataId),g}};let Dr;const Or={kernelName:r.Qg5,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{input:r}=e;return Er(r,!0,n)}};class Lr{constructor(t,e){this.variableNames=["x"];const{windowSize:n,batchSize:i,inSize:o,outSize:s}=t;this.outputShape=[i,s];const a=4*Math.floor(n/4),u=n%4;let c="sumValue += dot(values, ones);";if(null!=e){const t=1/e;c=`sumValue += dot(values * ${r.D5U.GN(t)?t.toPrecision(2):t}, ones);`}let l="";o%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${o}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${a}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${c}\n        }\n\n        int inIdx = inOffset + ${a};\n        if (${1===u}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${c}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${c}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${c}\n        }\n        setOutput(sumValue);\n      }\n    `}}function kr(t,e,n,i){const o=function(t){const e=[];for(;0===e.length||1!==e[e.length-1].outSize;){const n=e.length?e[e.length-1].outSize:t[1],i=r.Wap.computeOptimalWindowSize(n);e.push({inSize:n,windowSize:i,outSize:Math.ceil(n/i)})}return e}(t.shape);let s=t;for(let r=0;r<o.length;r++){const{inSize:a,windowSize:u,outSize:c}=o[r];let l,h;l="mean"===n?0===r?new Lr({windowSize:u,inSize:a,batchSize:t.shape[0],outSize:c},a):new Lr({windowSize:u,inSize:a,batchSize:t.shape[0],outSize:c}):new Ke({windowSize:u,inSize:a,batchSize:t.shape[0],outSize:c},n),h=s,s=i.runWebGLProgram(l,[s],e),h.dataId!==t.dataId&&i.disposeIntermediateTensorInfo(h)}return s}class Pr{constructor(t,e){this.variableNames=["A"];const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];this.outputShape=n,this.rank=n.length;const r=Ht(this.rank),i=function(t){const e=t.length;if(e>6)throw Error(`Transpose for rank ${e} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(e);for(let e=0;e<t.length;e++)r[t[e]]=n[e];return r.join()}(e);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${i}));\n    }\n    `}}class $r{constructor(t,e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(t.length);for(let r=0;r<n.length;r++)n[r]=t[e[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=Ht(this.rank),i=At("rc",this.rank),o=new Array(this.rank);for(let t=0;t<e.length;t++)o[e[t]]=i[t];const s=`vec2(${o.slice(-2).join()})`,a=`++${i[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${o.join()}), ${s})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${a}) {\n        result[1] = ${u};\n      }\n      --${i[this.rank-1]};\n      if(++${i[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${a}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function Br(t,e,n){const i=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new $r(t.shape,e):new Pr(t.shape,e);return n.runWebGLProgram(i,[t],t.dtype)}const Fr={kernelName:r.YoZ,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:i}=t,{reductionIndices:o,keepDims:s}=e,a=n,u=i.shape.length,c=r.D5U.EC(o,i.shape);let l=c;const h=r.Wap.getAxesPermutation(l,u),p=null!=h,d=a.shouldExecuteOnCPU([i]);let f=i;if(p){if(d){const t=a.texData.get(f.dataId).values,e=new Array(u);for(let t=0;t<e.length;t++)e[t]=i.shape[h[t]];const n=St(t,i.shape,i.dtype,h,e);f=a.makeTensorInfo(e,i.dtype),a.texData.get(f.dataId).values=n}else f=Br(i,h,a);l=r.Wap.getInnerMostAxes(l.length,u)}r.Wap.assertAxesAreInnerMostDims("max",l,u);const[m,g]=r.Wap.computeOutAndReduceShapes(f.shape,l);let y,v=m;if(s&&(v=r.Wap.expandShapeToKeepDim(m,c)),d){const t=a.texData.get(f.dataId).values,e=vt(t,r.D5U.NA(g),v,i.dtype);y=a.makeTensorInfo(v,i.dtype),a.texData.get(y.dataId).values=e}else y=function(t,e,n,i){const o=r.D5U.NA(e),s=gr({inputs:{x:t},attrs:{shape:[r.D5U.NA(t.shape)/o,o]},backend:i}),a=kr(s,t.dtype,"max",i),u=gr({inputs:{x:a},attrs:{shape:n},backend:i});return i.disposeIntermediateTensorInfo(s),i.disposeIntermediateTensorInfo(a),u}(f,g,v,a);return p&&a.disposeIntermediateTensorInfo(f),y}},Ur={kernelName:r.mTV,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:i}=t,{x:o}=e;k(o,"maxPool");const{filterSize:s,strides:a,pad:u,dimRoundingMode:c}=i;r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(a,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '1'`));const l=r.Wap.computePool2DInfo(o.shape,s,a,1,u,c);if(1===l.filterWidth&&1===l.filterHeight&&r.D5U.cO(l.inShape,l.outShape))return Hn({inputs:{x:o},backend:n});const h=new qe(l,"max",!1);return n.runWebGLProgram(h,[o],o.dtype)}},zr={kernelName:r.GvW,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n,attrs:i}=t,{dy:o,input:s,output:a}=e,u=s;k([s,a],"maxPoolBackprop");const{filterSize:c,strides:l,pad:h,dimRoundingMode:p}=i,d=r.Wap.computePool2DInfo(u.shape,c,l,1,h,p),f=new qe(d,"max",!0),m=n.runWebGLProgram(f,[u],u.dtype),g=new Ue(d),y=n.runWebGLProgram(g,[o,m],u.dtype);return n.disposeIntermediateTensorInfo(m),y}},Vr={kernelName:r.vFR,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:i}=t,{filterSize:o,strides:s,pad:a,includeBatchInIndex:u}=e,c=n;r.D5U.hu(4===i.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.shape.length}.`));const l=[1,1];r.D5U.hu(r.Wap.eitherStridesOrDilationsAreOne(s,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${s} and dilations '${l}'`));const h=r.Wap.computePool2DInfo(i.shape,o,s,l,a),[p,d]=function(t,e,n,r){let i=new qe(n,"max",!1);const o=r.runWebGLProgram(i,[t],"float32");return i=new qe(n,"max",!0,!0,e),[o,r.runWebGLProgram(i,[t],"float32")]}(i,u,h,c);return[p,d]}},Wr={kernelName:r.q2K,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:i}=t,{keepDims:o,axis:s}=e,a=n,u=i.shape.length,c=r.D5U.EC(s,i.shape);let l=c;const h=r.Wap.getAxesPermutation(l,u),p=null!=h,d=a.shouldExecuteOnCPU([i]),f=[];let m=i;if(p){if(d){const t=a.texData.get(m.dataId).values,e=new Array(u);for(let t=0;t<e.length;t++)e[t]=i.shape[h[t]];const n=St(t,i.shape,i.dtype,h,e);m=a.makeTensorInfo(e,i.dtype),a.texData.get(m.dataId).values=n}else m=Br(i,h,a);f.push(m),l=r.Wap.getInnerMostAxes(l.length,u)}r.Wap.assertAxesAreInnerMostDims("sum",l,u);const[g,y]=r.Wap.computeOutAndReduceShapes(m.shape,l);let v=g;o&&(v=r.Wap.expandShapeToKeepDim(g,c));const x=function(t,e,n,i){const o=r.D5U.NA(e),s=gr({inputs:{x:t},attrs:{shape:[r.D5U.NA(t.shape)/o,o]},backend:i}),a=kr(s,"float32","mean",i),u=gr({inputs:{x:a},attrs:{shape:n},backend:i});return i.disposeIntermediateTensorInfo(s),i.disposeIntermediateTensorInfo(a),u}(m,y,v,a);for(const t of f)a.disposeIntermediateTensorInfo(t);return x}};class Hr{constructor(t,e,n){this.variableNames=["x"],this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,i=Ht(r),o=e.map((t=>t[0])).join(","),s=e.map(((e,n)=>e[0]+t[n])).join(","),a=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${i} start = ${i}(${o});\n      ${i} end = ${i}(${s});\n\n      void main() {\n        ${i} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${i} coords = outC - start;\n        setOutput(getX(${a}));\n      }\n    `:`\n        int start = ${o};\n        int end = ${s};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Gr{constructor(t,e,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e.map(((e,n)=>e[0]+t[n]+e[1]));const r=t.length,i=Ht(r),o=e.map((t=>t[0])).join(","),s=e.map(((e,n)=>e[0]+t[n])).join(","),a=Nt("rc",r),u=Nt("source",r),c=`${a[r-1]} < ${this.outputShape[r-1]}`,l=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const t=`\n        ${i} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${i} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${a[r-1]} += 1;\n        if(${c}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n      `}else{const t=`\n        ${i} source = rc;\n        ${i} lt = ${i}(lessThan(source, start));\n        ${i} gte = ${i}(greaterThanEqual(source, end));\n        ${i} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${i} rc = outputLoc;\n        ${t}\n        result[0] = getChannel(getX(${u.join()}), ${l});\n        ${a[r-1]} += 1;\n        if(${c}) {\n          ${t}\n          result[1] = getChannel(getX(${u.join()}), ${l});\n        }\n        rc = outputLoc;\n        ${a[r-2]} += 1;\n        if(${a[r-2]} < ${this.outputShape[r-2]}) {\n          ${t}\n          result[2] = getChannel(getX(${u.join()}), ${l});\n          ${a[r-1]} += 1;\n          if(${c}) {\n            ${t}\n            result[3] = getChannel(getX(${u.join()}), ${l});\n          }\n        }\n      `}this.userCode=`\n      const ${i} start = ${i}(${o});\n      const ${i} end = ${i}(${s});\n\n      void main() {\n        ${i} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const jr={kernelName:r.jQs,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{const{x:i}=t,{paddings:o,mode:s}=n,a=(0,r.OBj)().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Gr(i.shape,o,s):new Hr(i.shape,o,s);return e.runWebGLProgram(a,[i],i.dtype)}};class Xr{constructor(t,e,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=r.Wap.assertAndGetBroadcastShape(e,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${t}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const qr="return a * b;",Yr={kernelName:r.wYn,backendName:"webgl",kernelFunc:function(t){const{inputs:e,backend:n}=t,{a:i,b:o}=e,s=r.Wap.upcastType(i.dtype,o.dtype);if("complex64"===i.dtype){const t=n.texData.get(i.dataId),e=n.texData.get(o.dataId),r=new Xr("return areal * breal - aimag * bimag;",i.shape,o.shape),s=new Xr("return areal * bimag + aimag * breal;",i.shape,o.shape),a=[{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:i.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:i.shape},{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:o.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:o.shape}],u=n.runWebGLProgram(r,a,"float32"),c=n.runWebGLProgram(s,a,"float32"),l=jn({inputs:{real:u,imag:c},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),l}if(n.shouldExecuteOnCPU([i,o])){const t=n.texData.get(i.dataId),e=n.texData.get(o.dataId),[r,a]=xt(i.shape,o.shape,t.values,e.values,s),u=n.makeTensorInfo(a,s);return n.texData.get(u.dataId).values=r,u}let a;return a=(0,r.OBj)().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new Qt(qr,i.shape,o.shape):new Zt(qr,i.shape,o.shape),n.runWebGLProgram(a,[i,o],s)}},Kr={kernelName:r.uv1,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:i,scores:o}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:u}=n,c=e,l=c.readSync(i.dataId),h=c.readSync(o.dataId),p=s,d=a,f=u;return r.GDt.GP(l,h,p,d,f)}},Zr=r.GDt.qP,Jr={kernelName:r.cye,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:i,scores:o}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:u,padToMaxOutputSize:c}=n,l=e,h=l.readSync(i.dataId),p=l.readSync(o.dataId),{selectedIndices:d,validOutputs:f}=Zr(h,p,s,a,u,c);return[d,f]}},Qr=r.GDt.pA,ti={kernelName:r.W0H,backendName:"webgl",kernelFunc:({inputs:t,backend:e,attrs:n})=>{r.Wap.warn("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{boxes:i,scores:o}=t,{maxOutputSize:s,iouThreshold:a,scoreThreshold:u,softNmsSigma:c}=n,l=e,h=l.readSync(i.dataId),p=l.readSync(o.dataId),d=s,f=a,m=u,g=c,{selectedIndices:y,selectedScores:v}=Qr(h,p,d,f,m,g);return[y,v]}};class ei{constructor(t,e,n,i){this.variableNames=["Image"],this.outputShape=[];const o=t[1],s=t[2],a=Math.sin(e).toFixed(3),u=Math.cos(e).toFixed(3);this.outputShape=t;const[c,l]=r.Wap.getImageCenter(i,o,s),h=c.toFixed(3),p=l.toFixed(3);let d="";d="number"==typeof n?`float outputValue = ${n.toFixed(2)};`:`\n        vec3 fill = vec3(${n.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - ${h}) * ${u} - (float(y) - ${p}) * ${a};\n          float coordYFloat = (float(x) - ${h}) * ${a} + (float(y) - ${p}) * ${u};\n          int coordX = int(round(coordXFloat + ${h}));\n          int coordY = int(round(coordYFloat + ${p}));\n          ${d}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${o}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const ni={kernelName:r.b9H,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{image:r}=t,{radians:i,fillValue:o,center:s}=e,a=n,u=new ei(r.shape,i,o,s);return a.runWebGLProgram(u,[r],r.dtype)}},ri=qn("if (isnan(x)) return x;\n  return sin(x);\n"),ii={kernelName:r.RQH,backendName:"webgl",kernelFunc:ri},oi=qn("return x * x;"),si={kernelName:r.bK0,backendName:"webgl",kernelFunc:oi},ai="return (a - b) * (a - b);",ui=Yn({opSnippet:ai,packedOpSnippet:ai}),ci={kernelName:r._tC,backendName:"webgl",kernelFunc:ui},li="return a - b;",hi=Yn({opSnippet:li,packedOpSnippet:li,supportsComplex:!0,cpuKernelImpl:_t}),pi={kernelName:r.Tr8,backendName:"webgl",kernelFunc:hi},di=qn("return tan(x);"),fi=[Jn,tr,er,nr,or,lr,Xn,xr,wr,Sr,Mr,Ar,Ir,Gn,Or,mr,Fr,Ur,zr,Vr,Wr,jr,Yr,Kr,Jr,ti,ar,cr,yr,ni,ii,si,pi,ci,{kernelName:r.sEM,backendName:"webgl",kernelFunc:di},{kernelName:r.G3Y,backendName:"webgl",kernelFunc:({inputs:t,attrs:e,backend:n})=>{const{x:r}=t,{perm:i}=e,o=n,s=r.shape.length,a=new Array(s);for(let t=0;t<a.length;t++)a[t]=r.shape[i[t]];let u;if(o.shouldExecuteOnCPU([r])){const t=o.texData.get(r.dataId).values,e=St(t,r.shape,r.dtype,i,a);u=o.makeTensorInfo(a,r.dtype),o.texData.get(u.dataId).values=e}else u=Br(r,i,o);return u}},{kernelName:r.kpP,backendName:"webgl",kernelFunc:function(t){const{inputs:e,attrs:n,backend:r}=t,{axis:i}=n,{x:o}=e;k(o,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const s=r.readSync(o.dataId),{outputValues:a,outputShape:u,indices:c}=Tt(s,i,o.shape,o.dtype);return[r.makeTensorInfo(u,o.dtype,a),r.makeTensorInfo([c.length],"int32",c)]}}];for(const t of fi)(0,r.wCN)(t);var mi=function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function s(t){try{u(r.next(t))}catch(t){o(t)}}function a(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}u((r=r.apply(t,e||[])).next())}))},gi=function(t,e){var n,r,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=e.call(t,s)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}},yi=n(1826);function vi(){return mi(this,void 0,void 0,(function(){return gi(this,(function(t){switch(t.label){case 0:return[4,r.CQI("webgl")];case 1:return t.sent(),[4,yi.load()];case 2:return[2,t.sent()]}}))}))}const xi=100,bi=1e3,wi=1001,_i=1002,Si=1003,Ti=1006,Ei=1008,Mi=1012,Ci=1014,Ai=1015,Ni=1016,Ri=1020,Ii=1022,Di=1023,Oi=1026,Li=1027,ki=2300,Pi=2301,$i=2302,Bi=2400,Fi=2401,Ui=2402,zi=3e3,Vi=7680,Wi=35044,Hi=35048,Gi="300 es";function ji(){}Object.assign(ji.prototype,{addEventListener:function(t,e){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[t]&&(n[t]=[]),-1===n[t].indexOf(e)&&n[t].push(e)},hasEventListener:function(t,e){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[t]&&-1!==n[t].indexOf(e)},removeEventListener:function(t,e){if(void 0===this._listeners)return;const n=this._listeners[t];if(void 0!==n){const t=n.indexOf(e);-1!==t&&n.splice(t,1)}},dispatchEvent:function(t){if(void 0===this._listeners)return;const e=this._listeners[t.type];if(void 0!==e){t.target=this;const n=e.slice(0);for(let e=0,r=n.length;e<r;e++)n[e].call(this,t)}}});const Xi=[];for(let t=0;t<256;t++)Xi[t]=(t<16?"0":"")+t.toString(16);let qi=1234567;const Yi={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){const t=4294967295*Math.random()|0,e=4294967295*Math.random()|0,n=4294967295*Math.random()|0,r=4294967295*Math.random()|0;return(Xi[255&t]+Xi[t>>8&255]+Xi[t>>16&255]+Xi[t>>24&255]+"-"+Xi[255&e]+Xi[e>>8&255]+"-"+Xi[e>>16&15|64]+Xi[e>>24&255]+"-"+Xi[63&n|128]+Xi[n>>8&255]+"-"+Xi[n>>16&255]+Xi[n>>24&255]+Xi[255&r]+Xi[r>>8&255]+Xi[r>>16&255]+Xi[r>>24&255]).toUpperCase()},clamp:function(t,e,n){return Math.max(e,Math.min(n,t))},euclideanModulo:function(t,e){return(t%e+e)%e},mapLinear:function(t,e,n,r,i){return r+(t-e)*(i-r)/(n-e)},lerp:function(t,e,n){return(1-n)*t+n*e},smoothstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*(3-2*t)},smootherstep:function(t,e,n){return t<=e?0:t>=n?1:(t=(t-e)/(n-e))*t*t*(t*(6*t-15)+10)},randInt:function(t,e){return t+Math.floor(Math.random()*(e-t+1))},randFloat:function(t,e){return t+Math.random()*(e-t)},randFloatSpread:function(t){return t*(.5-Math.random())},seededRandom:function(t){return void 0!==t&&(qi=t%2147483647),qi=16807*qi%2147483647,(qi-1)/2147483646},degToRad:function(t){return t*Yi.DEG2RAD},radToDeg:function(t){return t*Yi.RAD2DEG},isPowerOfTwo:function(t){return 0==(t&t-1)&&0!==t},ceilPowerOfTwo:function(t){return Math.pow(2,Math.ceil(Math.log(t)/Math.LN2))},floorPowerOfTwo:function(t){return Math.pow(2,Math.floor(Math.log(t)/Math.LN2))},setQuaternionFromProperEuler:function(t,e,n,r,i){const o=Math.cos,s=Math.sin,a=o(n/2),u=s(n/2),c=o((e+r)/2),l=s((e+r)/2),h=o((e-r)/2),p=s((e-r)/2),d=o((r-e)/2),f=s((r-e)/2);switch(i){case"XYX":t.set(a*l,u*h,u*p,a*c);break;case"YZY":t.set(u*p,a*l,u*h,a*c);break;case"ZXZ":t.set(u*h,u*p,a*l,a*c);break;case"XZX":t.set(a*l,u*f,u*d,a*c);break;case"YXY":t.set(u*d,a*l,u*f,a*c);break;case"ZYZ":t.set(u*f,u*d,a*l,a*c);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}};class Ki{constructor(t=0,e=0){Object.defineProperty(this,"isVector2",{value:!0}),this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this)}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this)}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,n=this.y,r=t.elements;return this.x=r[0]*e+r[3]*n+r[6],this.y=r[1]*e+r[4]*n+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y;return e*e+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const n=Math.cos(e),r=Math.sin(e),i=this.x-t.x,o=this.y-t.y;return this.x=i*n-o*r+t.x,this.y=i*r+o*n+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}}class Zi{constructor(){Object.defineProperty(this,"isMatrix3",{value:!0}),this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,i,o,s,a,u){const c=this.elements;return c[0]=t,c[1]=r,c[2]=s,c[3]=e,c[4]=i,c[5]=a,c[6]=n,c[7]=o,c[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}clone(){return(new this.constructor).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],this}extractBasis(t,e,n){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,i=this.elements,o=n[0],s=n[3],a=n[6],u=n[1],c=n[4],l=n[7],h=n[2],p=n[5],d=n[8],f=r[0],m=r[3],g=r[6],y=r[1],v=r[4],x=r[7],b=r[2],w=r[5],_=r[8];return i[0]=o*f+s*y+a*b,i[3]=o*m+s*v+a*w,i[6]=o*g+s*x+a*_,i[1]=u*f+c*y+l*b,i[4]=u*m+c*v+l*w,i[7]=u*g+c*x+l*_,i[2]=h*f+p*y+d*b,i[5]=h*m+p*v+d*w,i[8]=h*g+p*x+d*_,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],o=t[4],s=t[5],a=t[6],u=t[7],c=t[8];return e*o*c-e*s*u-n*i*c+n*s*a+r*i*u-r*o*a}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],o=t[4],s=t[5],a=t[6],u=t[7],c=t[8],l=c*o-s*u,h=s*a-c*i,p=u*i-o*a,d=e*l+n*h+r*p;if(0===d)return this.set(0,0,0,0,0,0,0,0,0);const f=1/d;return t[0]=l*f,t[1]=(r*u-c*n)*f,t[2]=(s*n-r*o)*f,t[3]=h*f,t[4]=(c*e-r*a)*f,t[5]=(r*i-s*e)*f,t[6]=p*f,t[7]=(n*a-u*e)*f,t[8]=(o*e-n*i)*f,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).copy(this).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,n,r,i,o,s){const a=Math.cos(i),u=Math.sin(i);return this.set(n*a,n*u,-n*(a*o+u*s)+o+t,-r*u,r*a,-r*(-u*o+a*s)+s+e,0,0,1),this}scale(t,e){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=e,n[4]*=e,n[7]*=e,this}rotate(t){const e=Math.cos(t),n=Math.sin(t),r=this.elements,i=r[0],o=r[3],s=r[6],a=r[1],u=r[4],c=r[7];return r[0]=e*i+n*a,r[3]=e*o+n*u,r[6]=e*s+n*c,r[1]=-n*i+e*a,r[4]=-n*o+e*u,r[7]=-n*s+e*c,this}translate(t,e){const n=this.elements;return n[0]+=t*n[2],n[3]+=t*n[5],n[6]+=t*n[8],n[1]+=e*n[2],n[4]+=e*n[5],n[7]+=e*n[8],this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<9;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<9;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t}}let Ji;const Qi={getDataURL:function(t){if(/^data:/i.test(t.src))return t.src;if("undefined"==typeof HTMLCanvasElement)return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{void 0===Ji&&(Ji=document.createElementNS("http://www.w3.org/1999/xhtml","canvas")),Ji.width=t.width,Ji.height=t.height;const n=Ji.getContext("2d");t instanceof ImageData?n.putImageData(t,0,0):n.drawImage(t,0,0,t.width,t.height),e=Ji}return e.width>2048||e.height>2048?e.toDataURL("image/jpeg",.6):e.toDataURL("image/png")}};let to=0;function eo(t=eo.DEFAULT_IMAGE,e=eo.DEFAULT_MAPPING,n=1001,r=1001,i=1006,o=1008,s=1023,a=1009,u=1,c=3e3){Object.defineProperty(this,"id",{value:to++}),this.uuid=Yi.generateUUID(),this.name="",this.image=t,this.mipmaps=[],this.mapping=e,this.wrapS=n,this.wrapT=r,this.magFilter=i,this.minFilter=o,this.anisotropy=u,this.format=s,this.internalFormat=null,this.type=a,this.offset=new Ki(0,0),this.repeat=new Ki(1,1),this.center=new Ki(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Zi,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=c,this.version=0,this.onUpdate=null}function no(t){return"undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap?Qi.getDataURL(t):t.data?{data:Array.prototype.slice.call(t.data),width:t.width,height:t.height,type:t.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}eo.DEFAULT_IMAGE=void 0,eo.DEFAULT_MAPPING=300,eo.prototype=Object.assign(Object.create(ji.prototype),{constructor:eo,isTexture:!0,updateMatrix:function(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.name=t.name,this.image=t.image,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.encoding=t.encoding,this},toJSON:function(t){const e=void 0===t||"string"==typeof t;if(!e&&void 0!==t.textures[this.uuid])return t.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};if(void 0!==this.image){const r=this.image;if(void 0===r.uuid&&(r.uuid=Yi.generateUUID()),!e&&void 0===t.images[r.uuid]){let e;if(Array.isArray(r)){e=[];for(let t=0,n=r.length;t<n;t++)r[t].isDataTexture?e.push(no(r[t].image)):e.push(no(r[t]))}else e=no(r);t.images[r.uuid]={uuid:r.uuid,url:e}}n.image=r.uuid}return e||(t.textures[this.uuid]=n),n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(t){if(300!==this.mapping)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case bi:t.x=t.x-Math.floor(t.x);break;case wi:t.x=t.x<0?0:1;break;case _i:1===Math.abs(Math.floor(t.x)%2)?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x)}if(t.y<0||t.y>1)switch(this.wrapT){case bi:t.y=t.y-Math.floor(t.y);break;case wi:t.y=t.y<0?0:1;break;case _i:1===Math.abs(Math.floor(t.y)%2)?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y)}return this.flipY&&(t.y=1-t.y),t}}),Object.defineProperty(eo.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}});class ro{constructor(t=0,e=0,n=0,r=1){Object.defineProperty(this,"isVector4",{value:!0}),this.x=t,this.y=e,this.z=n,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,n,r){return this.x=t,this.y=e,this.z=n,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=void 0!==t.w?t.w:1,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,i=this.w,o=t.elements;return this.x=o[0]*e+o[4]*n+o[8]*r+o[12]*i,this.y=o[1]*e+o[5]*n+o[9]*r+o[13]*i,this.z=o[2]*e+o[6]*n+o[10]*r+o[14]*i,this.w=o[3]*e+o[7]*n+o[11]*r+o[15]*i,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,n,r,i;const o=.01,s=.1,a=t.elements,u=a[0],c=a[4],l=a[8],h=a[1],p=a[5],d=a[9],f=a[2],m=a[6],g=a[10];if(Math.abs(c-h)<o&&Math.abs(l-f)<o&&Math.abs(d-m)<o){if(Math.abs(c+h)<s&&Math.abs(l+f)<s&&Math.abs(d+m)<s&&Math.abs(u+p+g-3)<s)return this.set(1,0,0,0),this;e=Math.PI;const t=(u+1)/2,a=(p+1)/2,y=(g+1)/2,v=(c+h)/4,x=(l+f)/4,b=(d+m)/4;return t>a&&t>y?t<o?(n=0,r=.707106781,i=.707106781):(n=Math.sqrt(t),r=v/n,i=x/n):a>y?a<o?(n=.707106781,r=0,i=.707106781):(r=Math.sqrt(a),n=v/r,i=b/r):y<o?(n=.707106781,r=.707106781,i=0):(i=Math.sqrt(y),n=x/i,r=b/i),this.set(n,r,i,e),this}let y=Math.sqrt((m-d)*(m-d)+(l-f)*(l-f)+(h-c)*(h-c));return Math.abs(y)<.001&&(y=1),this.x=(m-d)/y,this.y=(l-f)/y,this.z=(h-c)/y,this.w=Math.acos((u+p+g-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this.w=t.w+(e.w-t.w)*n,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}}function io(t,e,n){this.width=t,this.height=e,this.scissor=new ro(0,0,t,e),this.scissorTest=!1,this.viewport=new ro(0,0,t,e),n=n||{},this.texture=new eo(void 0,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.image={},this.texture.image.width=t,this.texture.image.height=e,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:Ti,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null}function oo(t,e,n){io.call(this,t,e,n),this.samples=4}io.prototype=Object.assign(Object.create(ji.prototype),{constructor:io,isWebGLRenderTarget:!0,setSize:function(t,e){this.width===t&&this.height===e||(this.width=t,this.height=e,this.texture.image.width=t,this.texture.image.height=e,this.dispose()),this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.width=t.width,this.height=t.height,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.depthTexture=t.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),oo.prototype=Object.assign(Object.create(io.prototype),{constructor:oo,isWebGLMultisampleRenderTarget:!0,copy:function(t){return io.prototype.copy.call(this,t),this.samples=t.samples,this}});class so{constructor(t=0,e=0,n=0,r=1){Object.defineProperty(this,"isQuaternion",{value:!0}),this._x=t,this._y=e,this._z=n,this._w=r}static slerp(t,e,n,r){return n.copy(t).slerp(e,r)}static slerpFlat(t,e,n,r,i,o,s){let a=n[r+0],u=n[r+1],c=n[r+2],l=n[r+3];const h=i[o+0],p=i[o+1],d=i[o+2],f=i[o+3];if(l!==f||a!==h||u!==p||c!==d){let t=1-s;const e=a*h+u*p+c*d+l*f,n=e>=0?1:-1,r=1-e*e;if(r>Number.EPSILON){const i=Math.sqrt(r),o=Math.atan2(i,e*n);t=Math.sin(t*o)/i,s=Math.sin(s*o)/i}const i=s*n;if(a=a*t+h*i,u=u*t+p*i,c=c*t+d*i,l=l*t+f*i,t===1-s){const t=1/Math.sqrt(a*a+u*u+c*c+l*l);a*=t,u*=t,c*=t,l*=t}}t[e]=a,t[e+1]=u,t[e+2]=c,t[e+3]=l}static multiplyQuaternionsFlat(t,e,n,r,i,o){const s=n[r],a=n[r+1],u=n[r+2],c=n[r+3],l=i[o],h=i[o+1],p=i[o+2],d=i[o+3];return t[e]=s*d+c*l+a*p-u*h,t[e+1]=a*d+c*h+u*l-s*p,t[e+2]=u*d+c*p+s*h-a*l,t[e+3]=c*d-s*l-a*h-u*p,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e){if(!t||!t.isEuler)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=t._x,r=t._y,i=t._z,o=t._order,s=Math.cos,a=Math.sin,u=s(n/2),c=s(r/2),l=s(i/2),h=a(n/2),p=a(r/2),d=a(i/2);switch(o){case"XYZ":this._x=h*c*l+u*p*d,this._y=u*p*l-h*c*d,this._z=u*c*d+h*p*l,this._w=u*c*l-h*p*d;break;case"YXZ":this._x=h*c*l+u*p*d,this._y=u*p*l-h*c*d,this._z=u*c*d-h*p*l,this._w=u*c*l+h*p*d;break;case"ZXY":this._x=h*c*l-u*p*d,this._y=u*p*l+h*c*d,this._z=u*c*d+h*p*l,this._w=u*c*l-h*p*d;break;case"ZYX":this._x=h*c*l-u*p*d,this._y=u*p*l+h*c*d,this._z=u*c*d-h*p*l,this._w=u*c*l+h*p*d;break;case"YZX":this._x=h*c*l+u*p*d,this._y=u*p*l+h*c*d,this._z=u*c*d-h*p*l,this._w=u*c*l-h*p*d;break;case"XZY":this._x=h*c*l-u*p*d,this._y=u*p*l-h*c*d,this._z=u*c*d+h*p*l,this._w=u*c*l+h*p*d;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return!1!==e&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const n=e/2,r=Math.sin(n);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,n=e[0],r=e[4],i=e[8],o=e[1],s=e[5],a=e[9],u=e[2],c=e[6],l=e[10],h=n+s+l;if(h>0){const t=.5/Math.sqrt(h+1);this._w=.25/t,this._x=(c-a)*t,this._y=(i-u)*t,this._z=(o-r)*t}else if(n>s&&n>l){const t=2*Math.sqrt(1+n-s-l);this._w=(c-a)/t,this._x=.25*t,this._y=(r+o)/t,this._z=(i+u)/t}else if(s>l){const t=2*Math.sqrt(1+s-n-l);this._w=(i-u)/t,this._x=(r+o)/t,this._y=.25*t,this._z=(a+c)/t}else{const t=2*Math.sqrt(1+l-n-s);this._w=(o-r)/t,this._x=(i+u)/t,this._y=(a+c)/t,this._z=.25*t}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let n=t.dot(e)+1;return n<1e-6?(n=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=n):(this._x=0,this._y=-t.z,this._z=t.y,this._w=n)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=n),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Yi.clamp(this.dot(t),-1,1)))}rotateTowards(t,e){const n=this.angleTo(t);if(0===n)return this;const r=Math.min(1,e/n);return this.slerp(t,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return 0===t?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t,e){return void 0!==e?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(t,e)):this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const n=t._x,r=t._y,i=t._z,o=t._w,s=e._x,a=e._y,u=e._z,c=e._w;return this._x=n*c+o*s+r*u-i*a,this._y=r*c+o*a+i*s-n*u,this._z=i*c+o*u+n*a-r*s,this._w=o*c-n*s-r*a-i*u,this._onChangeCallback(),this}slerp(t,e){if(0===e)return this;if(1===e)return this.copy(t);const n=this._x,r=this._y,i=this._z,o=this._w;let s=o*t._w+n*t._x+r*t._y+i*t._z;if(s<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,s=-s):this.copy(t),s>=1)return this._w=o,this._x=n,this._y=r,this._z=i,this;const a=1-s*s;if(a<=Number.EPSILON){const t=1-e;return this._w=t*o+e*this._w,this._x=t*n+e*this._x,this._y=t*r+e*this._y,this._z=t*i+e*this._z,this.normalize(),this._onChangeCallback(),this}const u=Math.sqrt(a),c=Math.atan2(u,s),l=Math.sin((1-e)*c)/u,h=Math.sin(e*c)/u;return this._w=o*l+this._w*h,this._x=n*l+this._x*h,this._y=r*l+this._y*h,this._z=i*l+this._z*h,this._onChangeCallback(),this}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}class ao{constructor(t=0,e=0,n=0){Object.defineProperty(this,"isVector3",{value:!0}),this.x=t,this.y=e,this.z=n}set(t,e,n){return void 0===n&&(n=this.z),this.x=t,this.y=e,this.z=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t,e){return void 0!==e?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(t,e)):(this.x+=t.x,this.y+=t.y,this.z+=t.z,this)}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t,e){return void 0!==e?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(t,e)):(this.x-=t.x,this.y-=t.y,this.z-=t.z,this)}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(t,e)):(this.x*=t.x,this.y*=t.y,this.z*=t.z,this)}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return t&&t.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(co.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(co.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[3]*n+i[6]*r,this.y=i[1]*e+i[4]*n+i[7]*r,this.z=i[2]*e+i[5]*n+i[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,n=this.y,r=this.z,i=t.elements,o=1/(i[3]*e+i[7]*n+i[11]*r+i[15]);return this.x=(i[0]*e+i[4]*n+i[8]*r+i[12])*o,this.y=(i[1]*e+i[5]*n+i[9]*r+i[13])*o,this.z=(i[2]*e+i[6]*n+i[10]*r+i[14])*o,this}applyQuaternion(t){const e=this.x,n=this.y,r=this.z,i=t.x,o=t.y,s=t.z,a=t.w,u=a*e+o*r-s*n,c=a*n+s*e-i*r,l=a*r+i*n-o*e,h=-i*e-o*n-s*r;return this.x=u*a+h*-i+c*-s-l*-o,this.y=c*a+h*-o+l*-i-u*-s,this.z=l*a+h*-s+u*-o-c*-i,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,n=this.y,r=this.z,i=t.elements;return this.x=i[0]*e+i[4]*n+i[8]*r,this.y=i[1]*e+i[5]*n+i[9]*r,this.z=i[2]*e+i[6]*n+i[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(t,Math.min(e,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,n){return this.x=t.x+(e.x-t.x)*n,this.y=t.y+(e.y-t.y)*n,this.z=t.z+(e.z-t.z)*n,this}cross(t,e){return void 0!==e?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(t,e)):this.crossVectors(this,t)}crossVectors(t,e){const n=t.x,r=t.y,i=t.z,o=e.x,s=e.y,a=e.z;return this.x=r*a-i*s,this.y=i*o-n*a,this.z=n*s-r*o,this}projectOnVector(t){const e=t.lengthSq();if(0===e)return this.set(0,0,0);const n=t.dot(this)/e;return this.copy(t).multiplyScalar(n)}projectOnPlane(t){return uo.copy(this).projectOnVector(t),this.sub(uo)}reflect(t){return this.sub(uo.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(0===e)return Math.PI/2;const n=this.dot(t)/e;return Math.acos(Yi.clamp(n,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,n=this.y-t.y,r=this.z-t.z;return e*e+n*n+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,n){const r=Math.sin(e)*t;return this.x=r*Math.sin(n),this.y=Math.cos(e)*t,this.z=r*Math.cos(n),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,n){return this.x=t*Math.sin(e),this.y=n,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),n=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=n,this.z=r,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,4*e)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,3*e)}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e,n){return void 0!==n&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}}const uo=new ao,co=new so;class lo{constructor(t,e){Object.defineProperty(this,"isBox3",{value:!0}),this.min=void 0!==t?t:new ao(1/0,1/0,1/0),this.max=void 0!==e?e:new ao(-1/0,-1/0,-1/0)}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){let e=1/0,n=1/0,r=1/0,i=-1/0,o=-1/0,s=-1/0;for(let a=0,u=t.length;a<u;a+=3){const u=t[a],c=t[a+1],l=t[a+2];u<e&&(e=u),c<n&&(n=c),l<r&&(r=l),u>i&&(i=u),c>o&&(o=c),l>s&&(s=l)}return this.min.set(e,n,r),this.max.set(i,o,s),this}setFromBufferAttribute(t){let e=1/0,n=1/0,r=1/0,i=-1/0,o=-1/0,s=-1/0;for(let a=0,u=t.count;a<u;a++){const u=t.getX(a),c=t.getY(a),l=t.getZ(a);u<e&&(e=u),c<n&&(n=c),l<r&&(r=l),u>i&&(i=u),c>o&&(o=c),l>s&&(s=l)}return this.min.set(e,n,r),this.max.set(i,o,s),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=fo.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}setFromObject(t){return this.makeEmpty(),this.expandByObject(t)}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return void 0===t&&(console.warn("THREE.Box3: .getCenter() target is now required"),t=new ao),this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box3: .getSize() target is now required"),t=new ao),this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t){t.updateWorldMatrix(!1,!1);const e=t.geometry;void 0!==e&&(null===e.boundingBox&&e.computeBoundingBox(),mo.copy(e.boundingBox),mo.applyMatrix4(t.matrixWorld),this.union(mo));const n=t.children;for(let t=0,e=n.length;t<e;t++)this.expandByObject(n[t]);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box3: .getParameter() target is now required"),e=new ao),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,fo),fo.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,n;return t.normal.x>0?(e=t.normal.x*this.min.x,n=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,n=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,n+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,n+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,n+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,n+=t.normal.z*this.min.z),e<=-t.constant&&n>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(_o),So.subVectors(this.max,_o),go.subVectors(t.a,_o),yo.subVectors(t.b,_o),vo.subVectors(t.c,_o),xo.subVectors(yo,go),bo.subVectors(vo,yo),wo.subVectors(go,vo);let e=[0,-xo.z,xo.y,0,-bo.z,bo.y,0,-wo.z,wo.y,xo.z,0,-xo.x,bo.z,0,-bo.x,wo.z,0,-wo.x,-xo.y,xo.x,0,-bo.y,bo.x,0,-wo.y,wo.x,0];return!!ho(e,go,yo,vo,So)&&(e=[1,0,0,0,1,0,0,0,1],!!ho(e,go,yo,vo,So)&&(To.crossVectors(xo,bo),e=[To.x,To.y,To.z],ho(e,go,yo,vo,So)))}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box3: .clampPoint() target is now required"),e=new ao),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return fo.copy(t).clamp(this.min,this.max).sub(t).length()}getBoundingSphere(t){return void 0===t&&console.error("THREE.Box3: .getBoundingSphere() target is now required"),this.getCenter(t.center),t.radius=.5*this.getSize(fo).length(),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()||(po[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),po[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),po[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),po[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),po[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),po[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),po[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),po[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(po)),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}function ho(t,e,n,r,i){for(let o=0,s=t.length-3;o<=s;o+=3){Eo.fromArray(t,o);const s=i.x*Math.abs(Eo.x)+i.y*Math.abs(Eo.y)+i.z*Math.abs(Eo.z),a=e.dot(Eo),u=n.dot(Eo),c=r.dot(Eo);if(Math.max(-Math.max(a,u,c),Math.min(a,u,c))>s)return!1}return!0}const po=[new ao,new ao,new ao,new ao,new ao,new ao,new ao,new ao],fo=new ao,mo=new lo,go=new ao,yo=new ao,vo=new ao,xo=new ao,bo=new ao,wo=new ao,_o=new ao,So=new ao,To=new ao,Eo=new ao,Mo=new lo;class Co{constructor(t,e){this.center=void 0!==t?t:new ao,this.radius=void 0!==e?e:-1}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const n=this.center;void 0!==e?n.copy(e):Mo.setFromPoints(t).getCenter(n);let r=0;for(let e=0,i=t.length;e<i;e++)r=Math.max(r,n.distanceToSquared(t[e]));return this.radius=Math.sqrt(r),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const n=this.center.distanceToSquared(t);return void 0===e&&(console.warn("THREE.Sphere: .clampPoint() target is now required"),e=new ao),e.copy(t),n>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return void 0===t&&(console.warn("THREE.Sphere: .getBoundingBox() target is now required"),t=new lo),this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}}const Ao=new ao,No=new ao,Ro=new ao,Io=new ao,Do=new ao,Oo=new ao,Lo=new ao;class ko{constructor(t,e){this.origin=void 0!==t?t:new ao,this.direction=void 0!==e?e:new ao(0,0,-1)}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return void 0===e&&(console.warn("THREE.Ray: .at() target is now required"),e=new ao),e.copy(this.direction).multiplyScalar(t).add(this.origin)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Ao)),this}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Ray: .closestPointToPoint() target is now required"),e=new ao),e.subVectors(t,this.origin);const n=e.dot(this.direction);return n<0?e.copy(this.origin):e.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=Ao.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(Ao.copy(this.direction).multiplyScalar(e).add(this.origin),Ao.distanceToSquared(t))}distanceSqToSegment(t,e,n,r){No.copy(t).add(e).multiplyScalar(.5),Ro.copy(e).sub(t).normalize(),Io.copy(this.origin).sub(No);const i=.5*t.distanceTo(e),o=-this.direction.dot(Ro),s=Io.dot(this.direction),a=-Io.dot(Ro),u=Io.lengthSq(),c=Math.abs(1-o*o);let l,h,p,d;if(c>0)if(l=o*a-s,h=o*s-a,d=i*c,l>=0)if(h>=-d)if(h<=d){const t=1/c;l*=t,h*=t,p=l*(l+o*h+2*s)+h*(o*l+h+2*a)+u}else h=i,l=Math.max(0,-(o*h+s)),p=-l*l+h*(h+2*a)+u;else h=-i,l=Math.max(0,-(o*h+s)),p=-l*l+h*(h+2*a)+u;else h<=-d?(l=Math.max(0,-(-o*i+s)),h=l>0?-i:Math.min(Math.max(-i,-a),i),p=-l*l+h*(h+2*a)+u):h<=d?(l=0,h=Math.min(Math.max(-i,-a),i),p=h*(h+2*a)+u):(l=Math.max(0,-(o*i+s)),h=l>0?i:Math.min(Math.max(-i,-a),i),p=-l*l+h*(h+2*a)+u);else h=o>0?-i:i,l=Math.max(0,-(o*h+s)),p=-l*l+h*(h+2*a)+u;return n&&n.copy(this.direction).multiplyScalar(l).add(this.origin),r&&r.copy(Ro).multiplyScalar(h).add(No),p}intersectSphere(t,e){Ao.subVectors(t.center,this.origin);const n=Ao.dot(this.direction),r=Ao.dot(Ao)-n*n,i=t.radius*t.radius;if(r>i)return null;const o=Math.sqrt(i-r),s=n-o,a=n+o;return s<0&&a<0?null:s<0?this.at(a,e):this.at(s,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(0===e)return 0===t.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(t.normal)+t.constant)/e;return n>=0?n:null}intersectPlane(t,e){const n=this.distanceToPlane(t);return null===n?null:this.at(n,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return 0===e||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let n,r,i,o,s,a;const u=1/this.direction.x,c=1/this.direction.y,l=1/this.direction.z,h=this.origin;return u>=0?(n=(t.min.x-h.x)*u,r=(t.max.x-h.x)*u):(n=(t.max.x-h.x)*u,r=(t.min.x-h.x)*u),c>=0?(i=(t.min.y-h.y)*c,o=(t.max.y-h.y)*c):(i=(t.max.y-h.y)*c,o=(t.min.y-h.y)*c),n>o||i>r?null:((i>n||n!=n)&&(n=i),(o<r||r!=r)&&(r=o),l>=0?(s=(t.min.z-h.z)*l,a=(t.max.z-h.z)*l):(s=(t.max.z-h.z)*l,a=(t.min.z-h.z)*l),n>a||s>r?null:((s>n||n!=n)&&(n=s),(a<r||r!=r)&&(r=a),r<0?null:this.at(n>=0?n:r,e)))}intersectsBox(t){return null!==this.intersectBox(t,Ao)}intersectTriangle(t,e,n,r,i){Do.subVectors(e,t),Oo.subVectors(n,t),Lo.crossVectors(Do,Oo);let o,s=this.direction.dot(Lo);if(s>0){if(r)return null;o=1}else{if(!(s<0))return null;o=-1,s=-s}Io.subVectors(this.origin,t);const a=o*this.direction.dot(Oo.crossVectors(Io,Oo));if(a<0)return null;const u=o*this.direction.dot(Do.cross(Io));if(u<0)return null;if(a+u>s)return null;const c=-o*Io.dot(Lo);return c<0?null:this.at(c/s,i)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}}class Po{constructor(){Object.defineProperty(this,"isMatrix4",{value:!0}),this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(t,e,n,r,i,o,s,a,u,c,l,h,p,d,f,m){const g=this.elements;return g[0]=t,g[4]=e,g[8]=n,g[12]=r,g[1]=i,g[5]=o,g[9]=s,g[13]=a,g[2]=u,g[6]=c,g[10]=l,g[14]=h,g[3]=p,g[7]=d,g[11]=f,g[15]=m,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new Po).fromArray(this.elements)}copy(t){const e=this.elements,n=t.elements;return e[0]=n[0],e[1]=n[1],e[2]=n[2],e[3]=n[3],e[4]=n[4],e[5]=n[5],e[6]=n[6],e[7]=n[7],e[8]=n[8],e[9]=n[9],e[10]=n[10],e[11]=n[11],e[12]=n[12],e[13]=n[13],e[14]=n[14],e[15]=n[15],this}copyPosition(t){const e=this.elements,n=t.elements;return e[12]=n[12],e[13]=n[13],e[14]=n[14],this}extractBasis(t,e,n){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(t,e,n){return this.set(t.x,e.x,n.x,0,t.y,e.y,n.y,0,t.z,e.z,n.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,n=t.elements,r=1/$o.setFromMatrixColumn(t,0).length(),i=1/$o.setFromMatrixColumn(t,1).length(),o=1/$o.setFromMatrixColumn(t,2).length();return e[0]=n[0]*r,e[1]=n[1]*r,e[2]=n[2]*r,e[3]=0,e[4]=n[4]*i,e[5]=n[5]*i,e[6]=n[6]*i,e[7]=0,e[8]=n[8]*o,e[9]=n[9]*o,e[10]=n[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){t&&t.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const e=this.elements,n=t.x,r=t.y,i=t.z,o=Math.cos(n),s=Math.sin(n),a=Math.cos(r),u=Math.sin(r),c=Math.cos(i),l=Math.sin(i);if("XYZ"===t.order){const t=o*c,n=o*l,r=s*c,i=s*l;e[0]=a*c,e[4]=-a*l,e[8]=u,e[1]=n+r*u,e[5]=t-i*u,e[9]=-s*a,e[2]=i-t*u,e[6]=r+n*u,e[10]=o*a}else if("YXZ"===t.order){const t=a*c,n=a*l,r=u*c,i=u*l;e[0]=t+i*s,e[4]=r*s-n,e[8]=o*u,e[1]=o*l,e[5]=o*c,e[9]=-s,e[2]=n*s-r,e[6]=i+t*s,e[10]=o*a}else if("ZXY"===t.order){const t=a*c,n=a*l,r=u*c,i=u*l;e[0]=t-i*s,e[4]=-o*l,e[8]=r+n*s,e[1]=n+r*s,e[5]=o*c,e[9]=i-t*s,e[2]=-o*u,e[6]=s,e[10]=o*a}else if("ZYX"===t.order){const t=o*c,n=o*l,r=s*c,i=s*l;e[0]=a*c,e[4]=r*u-n,e[8]=t*u+i,e[1]=a*l,e[5]=i*u+t,e[9]=n*u-r,e[2]=-u,e[6]=s*a,e[10]=o*a}else if("YZX"===t.order){const t=o*a,n=o*u,r=s*a,i=s*u;e[0]=a*c,e[4]=i-t*l,e[8]=r*l+n,e[1]=l,e[5]=o*c,e[9]=-s*c,e[2]=-u*c,e[6]=n*l+r,e[10]=t-i*l}else if("XZY"===t.order){const t=o*a,n=o*u,r=s*a,i=s*u;e[0]=a*c,e[4]=-l,e[8]=u*c,e[1]=t*l+i,e[5]=o*c,e[9]=n*l-r,e[2]=r*l-n,e[6]=s*c,e[10]=i*l+t}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(Fo,t,Uo)}lookAt(t,e,n){const r=this.elements;return Wo.subVectors(t,e),0===Wo.lengthSq()&&(Wo.z=1),Wo.normalize(),zo.crossVectors(n,Wo),0===zo.lengthSq()&&(1===Math.abs(n.z)?Wo.x+=1e-4:Wo.z+=1e-4,Wo.normalize(),zo.crossVectors(n,Wo)),zo.normalize(),Vo.crossVectors(Wo,zo),r[0]=zo.x,r[4]=Vo.x,r[8]=Wo.x,r[1]=zo.y,r[5]=Vo.y,r[9]=Wo.y,r[2]=zo.z,r[6]=Vo.z,r[10]=Wo.z,this}multiply(t,e){return void 0!==e?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(t,e)):this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const n=t.elements,r=e.elements,i=this.elements,o=n[0],s=n[4],a=n[8],u=n[12],c=n[1],l=n[5],h=n[9],p=n[13],d=n[2],f=n[6],m=n[10],g=n[14],y=n[3],v=n[7],x=n[11],b=n[15],w=r[0],_=r[4],S=r[8],T=r[12],E=r[1],M=r[5],C=r[9],A=r[13],N=r[2],R=r[6],I=r[10],D=r[14],O=r[3],L=r[7],k=r[11],P=r[15];return i[0]=o*w+s*E+a*N+u*O,i[4]=o*_+s*M+a*R+u*L,i[8]=o*S+s*C+a*I+u*k,i[12]=o*T+s*A+a*D+u*P,i[1]=c*w+l*E+h*N+p*O,i[5]=c*_+l*M+h*R+p*L,i[9]=c*S+l*C+h*I+p*k,i[13]=c*T+l*A+h*D+p*P,i[2]=d*w+f*E+m*N+g*O,i[6]=d*_+f*M+m*R+g*L,i[10]=d*S+f*C+m*I+g*k,i[14]=d*T+f*A+m*D+g*P,i[3]=y*w+v*E+x*N+b*O,i[7]=y*_+v*M+x*R+b*L,i[11]=y*S+v*C+x*I+b*k,i[15]=y*T+v*A+x*D+b*P,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],n=t[4],r=t[8],i=t[12],o=t[1],s=t[5],a=t[9],u=t[13],c=t[2],l=t[6],h=t[10],p=t[14];return t[3]*(+i*a*l-r*u*l-i*s*h+n*u*h+r*s*p-n*a*p)+t[7]*(+e*a*p-e*u*h+i*o*h-r*o*p+r*u*c-i*a*c)+t[11]*(+e*u*l-e*s*p-i*o*l+n*o*p+i*s*c-n*u*c)+t[15]*(-r*s*c-e*a*l+e*s*h+r*o*l-n*o*h+n*a*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,n){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=e,r[14]=n),this}invert(){const t=this.elements,e=t[0],n=t[1],r=t[2],i=t[3],o=t[4],s=t[5],a=t[6],u=t[7],c=t[8],l=t[9],h=t[10],p=t[11],d=t[12],f=t[13],m=t[14],g=t[15],y=l*m*u-f*h*u+f*a*p-s*m*p-l*a*g+s*h*g,v=d*h*u-c*m*u-d*a*p+o*m*p+c*a*g-o*h*g,x=c*f*u-d*l*u+d*s*p-o*f*p-c*s*g+o*l*g,b=d*l*a-c*f*a-d*s*h+o*f*h+c*s*m-o*l*m,w=e*y+n*v+r*x+i*b;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const _=1/w;return t[0]=y*_,t[1]=(f*h*i-l*m*i-f*r*p+n*m*p+l*r*g-n*h*g)*_,t[2]=(s*m*i-f*a*i+f*r*u-n*m*u-s*r*g+n*a*g)*_,t[3]=(l*a*i-s*h*i-l*r*u+n*h*u+s*r*p-n*a*p)*_,t[4]=v*_,t[5]=(c*m*i-d*h*i+d*r*p-e*m*p-c*r*g+e*h*g)*_,t[6]=(d*a*i-o*m*i-d*r*u+e*m*u+o*r*g-e*a*g)*_,t[7]=(o*h*i-c*a*i+c*r*u-e*h*u-o*r*p+e*a*p)*_,t[8]=x*_,t[9]=(d*l*i-c*f*i-d*n*p+e*f*p+c*n*g-e*l*g)*_,t[10]=(o*f*i-d*s*i+d*n*u-e*f*u-o*n*g+e*s*g)*_,t[11]=(c*s*i-o*l*i-c*n*u+e*l*u+o*n*p-e*s*p)*_,t[12]=b*_,t[13]=(c*f*r-d*l*r+d*n*h-e*f*h-c*n*m+e*l*m)*_,t[14]=(d*s*r-o*f*r-d*n*a+e*f*a+o*n*m-e*s*m)*_,t[15]=(o*l*r-c*s*r+c*n*a-e*l*a-o*n*h+e*s*h)*_,this}scale(t){const e=this.elements,n=t.x,r=t.y,i=t.z;return e[0]*=n,e[4]*=r,e[8]*=i,e[1]*=n,e[5]*=r,e[9]*=i,e[2]*=n,e[6]*=r,e[10]*=i,e[3]*=n,e[7]*=r,e[11]*=i,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],n=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,n,r))}makeTranslation(t,e,n){return this.set(1,0,0,t,0,1,0,e,0,0,1,n,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),n=Math.sin(t);return this.set(1,0,0,0,0,e,-n,0,0,n,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,0,n,0,0,1,0,0,-n,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),n=Math.sin(t);return this.set(e,-n,0,0,n,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const n=Math.cos(e),r=Math.sin(e),i=1-n,o=t.x,s=t.y,a=t.z,u=i*o,c=i*s;return this.set(u*o+n,u*s-r*a,u*a+r*s,0,u*s+r*a,c*s+n,c*a-r*o,0,u*a-r*s,c*a+r*o,i*a*a+n,0,0,0,0,1),this}makeScale(t,e,n){return this.set(t,0,0,0,0,e,0,0,0,0,n,0,0,0,0,1),this}makeShear(t,e,n){return this.set(1,e,n,0,t,1,n,0,t,e,1,0,0,0,0,1),this}compose(t,e,n){const r=this.elements,i=e._x,o=e._y,s=e._z,a=e._w,u=i+i,c=o+o,l=s+s,h=i*u,p=i*c,d=i*l,f=o*c,m=o*l,g=s*l,y=a*u,v=a*c,x=a*l,b=n.x,w=n.y,_=n.z;return r[0]=(1-(f+g))*b,r[1]=(p+x)*b,r[2]=(d-v)*b,r[3]=0,r[4]=(p-x)*w,r[5]=(1-(h+g))*w,r[6]=(m+y)*w,r[7]=0,r[8]=(d+v)*_,r[9]=(m-y)*_,r[10]=(1-(h+f))*_,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,e,n){const r=this.elements;let i=$o.set(r[0],r[1],r[2]).length();const o=$o.set(r[4],r[5],r[6]).length(),s=$o.set(r[8],r[9],r[10]).length();this.determinant()<0&&(i=-i),t.x=r[12],t.y=r[13],t.z=r[14],Bo.copy(this);const a=1/i,u=1/o,c=1/s;return Bo.elements[0]*=a,Bo.elements[1]*=a,Bo.elements[2]*=a,Bo.elements[4]*=u,Bo.elements[5]*=u,Bo.elements[6]*=u,Bo.elements[8]*=c,Bo.elements[9]*=c,Bo.elements[10]*=c,e.setFromRotationMatrix(Bo),n.x=i,n.y=o,n.z=s,this}makePerspective(t,e,n,r,i,o){void 0===o&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const s=this.elements,a=2*i/(e-t),u=2*i/(n-r),c=(e+t)/(e-t),l=(n+r)/(n-r),h=-(o+i)/(o-i),p=-2*o*i/(o-i);return s[0]=a,s[4]=0,s[8]=c,s[12]=0,s[1]=0,s[5]=u,s[9]=l,s[13]=0,s[2]=0,s[6]=0,s[10]=h,s[14]=p,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(t,e,n,r,i,o){const s=this.elements,a=1/(e-t),u=1/(n-r),c=1/(o-i),l=(e+t)*a,h=(n+r)*u,p=(o+i)*c;return s[0]=2*a,s[4]=0,s[8]=0,s[12]=-l,s[1]=0,s[5]=2*u,s[9]=0,s[13]=-h,s[2]=0,s[6]=0,s[10]=-2*c,s[14]=-p,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(t){const e=this.elements,n=t.elements;for(let t=0;t<16;t++)if(e[t]!==n[t])return!1;return!0}fromArray(t,e=0){for(let n=0;n<16;n++)this.elements[n]=t[n+e];return this}toArray(t=[],e=0){const n=this.elements;return t[e]=n[0],t[e+1]=n[1],t[e+2]=n[2],t[e+3]=n[3],t[e+4]=n[4],t[e+5]=n[5],t[e+6]=n[6],t[e+7]=n[7],t[e+8]=n[8],t[e+9]=n[9],t[e+10]=n[10],t[e+11]=n[11],t[e+12]=n[12],t[e+13]=n[13],t[e+14]=n[14],t[e+15]=n[15],t}}const $o=new ao,Bo=new Po,Fo=new ao(0,0,0),Uo=new ao(1,1,1),zo=new ao,Vo=new ao,Wo=new ao;class Ho{constructor(t=0,e=0,n=0,r=Ho.DefaultOrder){Object.defineProperty(this,"isEuler",{value:!0}),this._x=t,this._y=e,this._z=n,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,n,r){return this._x=t,this._y=e,this._z=n,this._order=r||this._order,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e,n){const r=Yi.clamp,i=t.elements,o=i[0],s=i[4],a=i[8],u=i[1],c=i[5],l=i[9],h=i[2],p=i[6],d=i[10];switch(e=e||this._order){case"XYZ":this._y=Math.asin(r(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-l,d),this._z=Math.atan2(-s,o)):(this._x=Math.atan2(p,c),this._z=0);break;case"YXZ":this._x=Math.asin(-r(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(a,d),this._z=Math.atan2(u,c)):(this._y=Math.atan2(-h,o),this._z=0);break;case"ZXY":this._x=Math.asin(r(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-h,d),this._z=Math.atan2(-s,c)):(this._y=0,this._z=Math.atan2(u,o));break;case"ZYX":this._y=Math.asin(-r(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(p,d),this._z=Math.atan2(u,o)):(this._x=0,this._z=Math.atan2(-s,c));break;case"YZX":this._z=Math.asin(r(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-l,c),this._y=Math.atan2(-h,o)):(this._x=0,this._y=Math.atan2(a,d));break;case"XZY":this._z=Math.asin(-r(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(p,c),this._y=Math.atan2(a,o)):(this._x=Math.atan2(-l,d),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,!1!==n&&this._onChangeCallback(),this}setFromQuaternion(t,e,n){return Go.makeRotationFromQuaternion(t),this.setFromRotationMatrix(Go,e,n)}setFromVector3(t,e){return this.set(t.x,t.y,t.z,e||this._order)}reorder(t){return jo.setFromEuler(this),this.setFromQuaternion(jo,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],void 0!==t[3]&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}toVector3(t){return t?t.set(this._x,this._y,this._z):new ao(this._x,this._y,this._z)}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}}Ho.DefaultOrder="XYZ",Ho.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];const Go=new Po,jo=new so;class Xo{constructor(){this.mask=1}set(t){this.mask=1<<t|0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return 0!=(this.mask&t.mask)}}let qo=0;const Yo=new ao,Ko=new so,Zo=new Po,Jo=new ao,Qo=new ao,ts=new ao,es=new so,ns=new ao(1,0,0),rs=new ao(0,1,0),is=new ao(0,0,1),os={type:"added"},ss={type:"removed"};function as(){Object.defineProperty(this,"id",{value:qo++}),this.uuid=Yi.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=as.DefaultUp.clone();const t=new ao,e=new Ho,n=new so,r=new ao(1,1,1);e._onChange((function(){n.setFromEuler(e,!1)})),n._onChange((function(){e.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Po},normalMatrix:{value:new Zi}}),this.matrix=new Po,this.matrixWorld=new Po,this.matrixAutoUpdate=as.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new Xo,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}as.DefaultUp=new ao(0,1,0),as.DefaultMatrixAutoUpdate=!0,as.prototype=Object.assign(Object.create(ji.prototype),{constructor:as,isObject3D:!0,onBeforeRender:function(){},onAfterRender:function(){},applyMatrix4:function(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)},applyQuaternion:function(t){return this.quaternion.premultiply(t),this},setRotationFromAxisAngle:function(t,e){this.quaternion.setFromAxisAngle(t,e)},setRotationFromEuler:function(t){this.quaternion.setFromEuler(t,!0)},setRotationFromMatrix:function(t){this.quaternion.setFromRotationMatrix(t)},setRotationFromQuaternion:function(t){this.quaternion.copy(t)},rotateOnAxis:function(t,e){return Ko.setFromAxisAngle(t,e),this.quaternion.multiply(Ko),this},rotateOnWorldAxis:function(t,e){return Ko.setFromAxisAngle(t,e),this.quaternion.premultiply(Ko),this},rotateX:function(t){return this.rotateOnAxis(ns,t)},rotateY:function(t){return this.rotateOnAxis(rs,t)},rotateZ:function(t){return this.rotateOnAxis(is,t)},translateOnAxis:function(t,e){return Yo.copy(t).applyQuaternion(this.quaternion),this.position.add(Yo.multiplyScalar(e)),this},translateX:function(t){return this.translateOnAxis(ns,t)},translateY:function(t){return this.translateOnAxis(rs,t)},translateZ:function(t){return this.translateOnAxis(is,t)},localToWorld:function(t){return t.applyMatrix4(this.matrixWorld)},worldToLocal:function(t){return t.applyMatrix4(Zo.copy(this.matrixWorld).invert())},lookAt:function(t,e,n){t.isVector3?Jo.copy(t):Jo.set(t,e,n);const r=this.parent;this.updateWorldMatrix(!0,!1),Qo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Zo.lookAt(Qo,Jo,this.up):Zo.lookAt(Jo,Qo,this.up),this.quaternion.setFromRotationMatrix(Zo),r&&(Zo.extractRotation(r.matrixWorld),Ko.setFromRotationMatrix(Zo),this.quaternion.premultiply(Ko.invert()))},add:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(null!==t.parent&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(os)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)},remove:function(t){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.remove(arguments[t]);return this}const e=this.children.indexOf(t);return-1!==e&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(ss)),this},clear:function(){for(let t=0;t<this.children.length;t++){const e=this.children[t];e.parent=null,e.dispatchEvent(ss)}return this.children.length=0,this},attach:function(t){return this.updateWorldMatrix(!0,!1),Zo.copy(this.matrixWorld).invert(),null!==t.parent&&(t.parent.updateWorldMatrix(!0,!1),Zo.multiply(t.parent.matrixWorld)),t.applyMatrix4(Zo),t.updateWorldMatrix(!1,!1),this.add(t),this},getObjectById:function(t){return this.getObjectByProperty("id",t)},getObjectByName:function(t){return this.getObjectByProperty("name",t)},getObjectByProperty:function(t,e){if(this[t]===e)return this;for(let n=0,r=this.children.length;n<r;n++){const r=this.children[n].getObjectByProperty(t,e);if(void 0!==r)return r}},getWorldPosition:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldPosition() target is now required"),t=new ao),this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldQuaternion() target is now required"),t=new so),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Qo,t,ts),t},getWorldScale:function(t){return void 0===t&&(console.warn("THREE.Object3D: .getWorldScale() target is now required"),t=new ao),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Qo,es,t),t},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Object3D: .getWorldDirection() target is now required"),t=new ao),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()},raycast:function(){},traverse:function(t){t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverse(t)},traverseVisible:function(t){if(!1===this.visible)return;t(this);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].traverseVisible(t)},traverseAncestors:function(t){const e=this.parent;null!==e&&(t(e),e.traverseAncestors(t))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let n=0,r=e.length;n<r;n++)e[n].updateMatrixWorld(t)},updateWorldMatrix:function(t,e){const n=this.parent;if(!0===t&&null!==n&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===e){const t=this.children;for(let e=0,n=t.length;e<n;e++)t[e].updateWorldMatrix(!1,!0)}},toJSON:function(t){const e=void 0===t||"string"==typeof t,n={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const r={};function i(e,n){return void 0===e[n.uuid]&&(e[n.uuid]=n.toJSON(t)),n.uuid}if(r.uuid=this.uuid,r.type=this.type,""!==this.name&&(r.name=this.name),!0===this.castShadow&&(r.castShadow=!0),!0===this.receiveShadow&&(r.receiveShadow=!0),!1===this.visible&&(r.visible=!1),!1===this.frustumCulled&&(r.frustumCulled=!1),0!==this.renderOrder&&(r.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),!1===this.matrixAutoUpdate&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON()),this.isMesh||this.isLine||this.isPoints){r.geometry=i(t.geometries,this.geometry);const e=this.geometry.parameters;if(void 0!==e&&void 0!==e.shapes){const n=e.shapes;if(Array.isArray(n))for(let e=0,r=n.length;e<r;e++){const r=n[e];i(t.shapes,r)}else i(t.shapes,n)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(i(t.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const e=[];for(let n=0,r=this.material.length;n<r;n++)e.push(i(t.materials,this.material[n]));r.material=e}else r.material=i(t.materials,this.material);if(this.children.length>0){r.children=[];for(let e=0;e<this.children.length;e++)r.children.push(this.children[e].toJSON(t).object)}if(this.animations.length>0){r.animations=[];for(let e=0;e<this.animations.length;e++){const n=this.animations[e];r.animations.push(i(t.animations,n))}}if(e){const e=o(t.geometries),r=o(t.materials),i=o(t.textures),s=o(t.images),a=o(t.shapes),u=o(t.skeletons),c=o(t.animations);e.length>0&&(n.geometries=e),r.length>0&&(n.materials=r),i.length>0&&(n.textures=i),s.length>0&&(n.images=s),a.length>0&&(n.shapes=a),u.length>0&&(n.skeletons=u),c.length>0&&(n.animations=c)}return n.object=r,n;function o(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}},clone:function(t){return(new this.constructor).copy(this,t)},copy:function(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.userData=JSON.parse(JSON.stringify(t.userData)),!0===e)for(let e=0;e<t.children.length;e++){const n=t.children[e];this.add(n.clone())}return this}});const us=new ao,cs=new ao,ls=new Zi;class hs{constructor(t,e){Object.defineProperty(this,"isPlane",{value:!0}),this.normal=void 0!==t?t:new ao(1,0,0),this.constant=void 0!==e?e:0}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,n,r){return this.normal.set(t,e,n),this.constant=r,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,n){const r=us.subVectors(n,e).cross(cs.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return void 0===e&&(console.warn("THREE.Plane: .projectPoint() target is now required"),e=new ao),e.copy(this.normal).multiplyScalar(-this.distanceToPoint(t)).add(t)}intersectLine(t,e){void 0===e&&(console.warn("THREE.Plane: .intersectLine() target is now required"),e=new ao);const n=t.delta(us),r=this.normal.dot(n);if(0===r)return 0===this.distanceToPoint(t.start)?e.copy(t.start):void 0;const i=-(t.start.dot(this.normal)+this.constant)/r;return i<0||i>1?void 0:e.copy(n).multiplyScalar(i).add(t.start)}intersectsLine(t){const e=this.distanceToPoint(t.start),n=this.distanceToPoint(t.end);return e<0&&n>0||n<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return void 0===t&&(console.warn("THREE.Plane: .coplanarPoint() target is now required"),t=new ao),t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const n=e||ls.getNormalMatrix(t),r=this.coplanarPoint(us).applyMatrix4(t),i=this.normal.applyMatrix3(n).normalize();return this.constant=-r.dot(i),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}}const ps=new ao,ds=new ao,fs=new ao,ms=new ao,gs=new ao,ys=new ao,vs=new ao,xs=new ao,bs=new ao,ws=new ao;class _s{constructor(t,e,n){this.a=void 0!==t?t:new ao,this.b=void 0!==e?e:new ao,this.c=void 0!==n?n:new ao}static getNormal(t,e,n,r){void 0===r&&(console.warn("THREE.Triangle: .getNormal() target is now required"),r=new ao),r.subVectors(n,e),ps.subVectors(t,e),r.cross(ps);const i=r.lengthSq();return i>0?r.multiplyScalar(1/Math.sqrt(i)):r.set(0,0,0)}static getBarycoord(t,e,n,r,i){ps.subVectors(r,e),ds.subVectors(n,e),fs.subVectors(t,e);const o=ps.dot(ps),s=ps.dot(ds),a=ps.dot(fs),u=ds.dot(ds),c=ds.dot(fs),l=o*u-s*s;if(void 0===i&&(console.warn("THREE.Triangle: .getBarycoord() target is now required"),i=new ao),0===l)return i.set(-2,-1,-1);const h=1/l,p=(u*a-s*c)*h,d=(o*c-s*a)*h;return i.set(1-p-d,d,p)}static containsPoint(t,e,n,r){return this.getBarycoord(t,e,n,r,ms),ms.x>=0&&ms.y>=0&&ms.x+ms.y<=1}static getUV(t,e,n,r,i,o,s,a){return this.getBarycoord(t,e,n,r,ms),a.set(0,0),a.addScaledVector(i,ms.x),a.addScaledVector(o,ms.y),a.addScaledVector(s,ms.z),a}static isFrontFacing(t,e,n,r){return ps.subVectors(n,e),ds.subVectors(t,e),ps.cross(ds).dot(r)<0}set(t,e,n){return this.a.copy(t),this.b.copy(e),this.c.copy(n),this}setFromPointsAndIndices(t,e,n,r){return this.a.copy(t[e]),this.b.copy(t[n]),this.c.copy(t[r]),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return ps.subVectors(this.c,this.b),ds.subVectors(this.a,this.b),.5*ps.cross(ds).length()}getMidpoint(t){return void 0===t&&(console.warn("THREE.Triangle: .getMidpoint() target is now required"),t=new ao),t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return _s.getNormal(this.a,this.b,this.c,t)}getPlane(t){return void 0===t&&(console.warn("THREE.Triangle: .getPlane() target is now required"),t=new hs),t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return _s.getBarycoord(t,this.a,this.b,this.c,e)}getUV(t,e,n,r,i){return _s.getUV(t,this.a,this.b,this.c,e,n,r,i)}containsPoint(t){return _s.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return _s.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){void 0===e&&(console.warn("THREE.Triangle: .closestPointToPoint() target is now required"),e=new ao);const n=this.a,r=this.b,i=this.c;let o,s;gs.subVectors(r,n),ys.subVectors(i,n),xs.subVectors(t,n);const a=gs.dot(xs),u=ys.dot(xs);if(a<=0&&u<=0)return e.copy(n);bs.subVectors(t,r);const c=gs.dot(bs),l=ys.dot(bs);if(c>=0&&l<=c)return e.copy(r);const h=a*l-c*u;if(h<=0&&a>=0&&c<=0)return o=a/(a-c),e.copy(n).addScaledVector(gs,o);ws.subVectors(t,i);const p=gs.dot(ws),d=ys.dot(ws);if(d>=0&&p<=d)return e.copy(i);const f=p*u-a*d;if(f<=0&&u>=0&&d<=0)return s=u/(u-d),e.copy(n).addScaledVector(ys,s);const m=c*d-p*l;if(m<=0&&l-c>=0&&p-d>=0)return vs.subVectors(i,r),s=(l-c)/(l-c+(p-d)),e.copy(r).addScaledVector(vs,s);const g=1/(m+f+h);return o=f*g,s=h*g,e.copy(n).addScaledVector(gs,o).addScaledVector(ys,s)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const Ss={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ts={h:0,s:0,l:0},Es={h:0,s:0,l:0};function Ms(t,e,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?t+6*(e-t)*n:n<.5?e:n<2/3?t+6*(e-t)*(2/3-n):t}function Cs(t){return t<.04045?.0773993808*t:Math.pow(.9478672986*t+.0521327014,2.4)}function As(t){return t<.0031308?12.92*t:1.055*Math.pow(t,.41666)-.055}class Ns{constructor(t,e,n){return Object.defineProperty(this,"isColor",{value:!0}),void 0===e&&void 0===n?this.set(t):this.setRGB(t,e,n)}set(t){return t&&t.isColor?this.copy(t):"number"==typeof t?this.setHex(t):"string"==typeof t&&this.setStyle(t),this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(255&t)/255,this}setRGB(t,e,n){return this.r=t,this.g=e,this.b=n,this}setHSL(t,e,n){if(t=Yi.euclideanModulo(t,1),e=Yi.clamp(e,0,1),n=Yi.clamp(n,0,1),0===e)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+e):n+e-n*e,i=2*n-r;this.r=Ms(i,r,t+1/3),this.g=Ms(i,r,t),this.b=Ms(i,r,t-1/3)}return this}setStyle(t){function e(e){void 0!==e&&parseFloat(e)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(t)){let t;const r=n[1],i=n[2];switch(r){case"rgb":case"rgba":if(t=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(255,parseInt(t[1],10))/255,this.g=Math.min(255,parseInt(t[2],10))/255,this.b=Math.min(255,parseInt(t[3],10))/255,e(t[4]),this;if(t=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i))return this.r=Math.min(100,parseInt(t[1],10))/100,this.g=Math.min(100,parseInt(t[2],10))/100,this.b=Math.min(100,parseInt(t[3],10))/100,e(t[4]),this;break;case"hsl":case"hsla":if(t=/^(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(i)){const n=parseFloat(t[1])/360,r=parseInt(t[2],10)/100,i=parseInt(t[3],10)/100;return e(t[4]),this.setHSL(n,r,i)}}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const t=n[1],e=t.length;if(3===e)return this.r=parseInt(t.charAt(0)+t.charAt(0),16)/255,this.g=parseInt(t.charAt(1)+t.charAt(1),16)/255,this.b=parseInt(t.charAt(2)+t.charAt(2),16)/255,this;if(6===e)return this.r=parseInt(t.charAt(0)+t.charAt(1),16)/255,this.g=parseInt(t.charAt(2)+t.charAt(3),16)/255,this.b=parseInt(t.charAt(4)+t.charAt(5),16)/255,this}return t&&t.length>0?this.setColorName(t):this}setColorName(t){const e=Ss[t];return void 0!==e?this.setHex(e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copyGammaToLinear(t,e=2){return this.r=Math.pow(t.r,e),this.g=Math.pow(t.g,e),this.b=Math.pow(t.b,e),this}copyLinearToGamma(t,e=2){const n=e>0?1/e:1;return this.r=Math.pow(t.r,n),this.g=Math.pow(t.g,n),this.b=Math.pow(t.b,n),this}convertGammaToLinear(t){return this.copyGammaToLinear(this,t),this}convertLinearToGamma(t){return this.copyLinearToGamma(this,t),this}copySRGBToLinear(t){return this.r=Cs(t.r),this.g=Cs(t.g),this.b=Cs(t.b),this}copyLinearToSRGB(t){return this.r=As(t.r),this.g=As(t.g),this.b=As(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0}getHexString(){return("000000"+this.getHex().toString(16)).slice(-6)}getHSL(t){void 0===t&&(console.warn("THREE.Color: .getHSL() target is now required"),t={h:0,s:0,l:0});const e=this.r,n=this.g,r=this.b,i=Math.max(e,n,r),o=Math.min(e,n,r);let s,a;const u=(o+i)/2;if(o===i)s=0,a=0;else{const t=i-o;switch(a=u<=.5?t/(i+o):t/(2-i-o),i){case e:s=(n-r)/t+(n<r?6:0);break;case n:s=(r-e)/t+2;break;case r:s=(e-n)/t+4}s/=6}return t.h=s,t.s=a,t.l=u,t}getStyle(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"}offsetHSL(t,e,n){return this.getHSL(Ts),Ts.h+=t,Ts.s+=e,Ts.l+=n,this.setHSL(Ts.h,Ts.s,Ts.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpHSL(t,e){this.getHSL(Ts),t.getHSL(Es);const n=Yi.lerp(Ts.h,Es.h,e),r=Yi.lerp(Ts.s,Es.s,e),i=Yi.lerp(Ts.l,Es.l,e);return this.setHSL(n,r,i),this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),!0===t.normalized&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Ns.NAMES=Ss,Ns.prototype.r=1,Ns.prototype.g=1,Ns.prototype.b=1;class Rs{constructor(t,e,n,r,i,o=0){this.a=t,this.b=e,this.c=n,this.normal=r&&r.isVector3?r:new ao,this.vertexNormals=Array.isArray(r)?r:[],this.color=i&&i.isColor?i:new Ns,this.vertexColors=Array.isArray(i)?i:[],this.materialIndex=o}clone(){return(new this.constructor).copy(this)}copy(t){this.a=t.a,this.b=t.b,this.c=t.c,this.normal.copy(t.normal),this.color.copy(t.color),this.materialIndex=t.materialIndex;for(let e=0,n=t.vertexNormals.length;e<n;e++)this.vertexNormals[e]=t.vertexNormals[e].clone();for(let e=0,n=t.vertexColors.length;e<n;e++)this.vertexColors[e]=t.vertexColors[e].clone();return this}}let Is=0;function Ds(){Object.defineProperty(this,"id",{value:Is++}),this.uuid=Yi.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.blending=1,this.side=0,this.flatShading=!1,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=xi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Vi,this.stencilZFail=Vi,this.stencilZPass=Vi,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaTest=0,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0}function Os(t){Ds.call(this),this.type="MeshBasicMaterial",this.color=new Ns(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.setValues(t)}Ds.prototype=Object.assign(Object.create(ji.prototype),{constructor:Ds,isMaterial:!0,onBeforeCompile:function(){},customProgramCacheKey:function(){return this.onBeforeCompile.toString()},setValues:function(t){if(void 0!==t)for(const e in t){const n=t[e];if(void 0===n){console.warn("THREE.Material: '"+e+"' parameter is undefined.");continue}if("shading"===e){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===n;continue}const r=this[e];void 0!==r?r&&r.isColor?r.set(n):r&&r.isVector3&&n&&n.isVector3?r.copy(n):this[e]=n:console.warn("THREE."+this.type+": '"+e+"' is not a property of this material.")}},toJSON:function(t){const e=void 0===t||"string"==typeof t;e&&(t={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function r(t){const e=[];for(const n in t){const r=t[n];delete r.metadata,e.push(r)}return e}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),this.sheen&&this.sheen.isColor&&(n.sheen=this.sheen.getHex()),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(t).uuid),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(t).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(t).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(t).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(t).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(t).uuid,n.reflectivity=this.reflectivity,n.refractionRatio=this.refractionRatio,void 0!==this.combine&&(n.combine=this.combine),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity)),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(t).uuid),void 0!==this.size&&(n.size=this.size),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),!0===this.flatShading&&(n.flatShading=this.flatShading),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.morphTargets&&(n.morphTargets=!0),!0===this.morphNormals&&(n.morphNormals=!0),!0===this.skinning&&(n.skinning=!0),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),"{}"!==JSON.stringify(this.userData)&&(n.userData=this.userData),e){const e=r(t.textures),i=r(t.images);e.length>0&&(n.textures=e),i.length>0&&(n.images=i)}return n},clone:function(){return(new this.constructor).copy(this)},copy:function(t){this.name=t.name,this.fog=t.fog,this.blending=t.blending,this.side=t.side,this.flatShading=t.flatShading,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let n=null;if(null!==e){const t=e.length;n=new Array(t);for(let r=0;r!==t;++r)n[r]=e[r].clone()}return this.clippingPlanes=n,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.premultipliedAlpha=t.premultipliedAlpha,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Object.defineProperty(Ds.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Os.prototype=Object.create(Ds.prototype),Os.prototype.constructor=Os,Os.prototype.isMeshBasicMaterial=!0,Os.prototype.copy=function(t){return Ds.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this};const Ls=new ao,ks=new Ki;function Ps(t,e,n){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=t,this.itemSize=e,this.count=void 0!==t?t.length/e:0,this.normalized=!0===n,this.usage=Wi,this.updateRange={offset:0,count:-1},this.version=0}function $s(t,e,n){Ps.call(this,new Int8Array(t),e,n)}function Bs(t,e,n){Ps.call(this,new Uint8Array(t),e,n)}function Fs(t,e,n){Ps.call(this,new Uint8ClampedArray(t),e,n)}function Us(t,e,n){Ps.call(this,new Int16Array(t),e,n)}function zs(t,e,n){Ps.call(this,new Uint16Array(t),e,n)}function Vs(t,e,n){Ps.call(this,new Int32Array(t),e,n)}function Ws(t,e,n){Ps.call(this,new Uint32Array(t),e,n)}function Hs(t,e,n){Ps.call(this,new Uint16Array(t),e,n)}function Gs(t,e,n){Ps.call(this,new Float32Array(t),e,n)}function js(t,e,n){Ps.call(this,new Float64Array(t),e,n)}Object.defineProperty(Ps.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Ps.prototype,{isBufferAttribute:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.itemSize,n*=e.itemSize;for(let r=0,i=this.itemSize;r<i;r++)this.array[t+r]=e.array[n+r];return this},copyArray:function(t){return this.array.set(t),this},copyColorsArray:function(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",r),i=new Ns),e[n++]=i.r,e[n++]=i.g,e[n++]=i.b}return this},copyVector2sArray:function(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",r),i=new Ki),e[n++]=i.x,e[n++]=i.y}return this},copyVector3sArray:function(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",r),i=new ao),e[n++]=i.x,e[n++]=i.y,e[n++]=i.z}return this},copyVector4sArray:function(t){const e=this.array;let n=0;for(let r=0,i=t.length;r<i;r++){let i=t[r];void 0===i&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",r),i=new ro),e[n++]=i.x,e[n++]=i.y,e[n++]=i.z,e[n++]=i.w}return this},applyMatrix3:function(t){if(2===this.itemSize)for(let e=0,n=this.count;e<n;e++)ks.fromBufferAttribute(this,e),ks.applyMatrix3(t),this.setXY(e,ks.x,ks.y);else if(3===this.itemSize)for(let e=0,n=this.count;e<n;e++)Ls.fromBufferAttribute(this,e),Ls.applyMatrix3(t),this.setXYZ(e,Ls.x,Ls.y,Ls.z);return this},applyMatrix4:function(t){for(let e=0,n=this.count;e<n;e++)Ls.x=this.getX(e),Ls.y=this.getY(e),Ls.z=this.getZ(e),Ls.applyMatrix4(t),this.setXYZ(e,Ls.x,Ls.y,Ls.z);return this},applyNormalMatrix:function(t){for(let e=0,n=this.count;e<n;e++)Ls.x=this.getX(e),Ls.y=this.getY(e),Ls.z=this.getZ(e),Ls.applyNormalMatrix(t),this.setXYZ(e,Ls.x,Ls.y,Ls.z);return this},transformDirection:function(t){for(let e=0,n=this.count;e<n;e++)Ls.x=this.getX(e),Ls.y=this.getY(e),Ls.z=this.getZ(e),Ls.transformDirection(t),this.setXYZ(e,Ls.x,Ls.y,Ls.z);return this},set:function(t,e=0){return this.array.set(t,e),this},getX:function(t){return this.array[t*this.itemSize]},setX:function(t,e){return this.array[t*this.itemSize]=e,this},getY:function(t){return this.array[t*this.itemSize+1]},setY:function(t,e){return this.array[t*this.itemSize+1]=e,this},getZ:function(t){return this.array[t*this.itemSize+2]},setZ:function(t,e){return this.array[t*this.itemSize+2]=e,this},getW:function(t){return this.array[t*this.itemSize+3]},setW:function(t,e){return this.array[t*this.itemSize+3]=e,this},setXY:function(t,e,n){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this},setXYZ:function(t,e,n,r){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this},setXYZW:function(t,e,n,r,i){return t*=this.itemSize,this.array[t+0]=e,this.array[t+1]=n,this.array[t+2]=r,this.array[t+3]=i,this},onUpload:function(t){return this.onUploadCallback=t,this},clone:function(){return new this.constructor(this.array,this.itemSize).copy(this)},toJSON:function(){return{itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized}}}),$s.prototype=Object.create(Ps.prototype),$s.prototype.constructor=$s,Bs.prototype=Object.create(Ps.prototype),Bs.prototype.constructor=Bs,Fs.prototype=Object.create(Ps.prototype),Fs.prototype.constructor=Fs,Us.prototype=Object.create(Ps.prototype),Us.prototype.constructor=Us,zs.prototype=Object.create(Ps.prototype),zs.prototype.constructor=zs,Vs.prototype=Object.create(Ps.prototype),Vs.prototype.constructor=Vs,Ws.prototype=Object.create(Ps.prototype),Ws.prototype.constructor=Ws,Hs.prototype=Object.create(Ps.prototype),Hs.prototype.constructor=Hs,Hs.prototype.isFloat16BufferAttribute=!0,Gs.prototype=Object.create(Ps.prototype),Gs.prototype.constructor=Gs,js.prototype=Object.create(Ps.prototype),js.prototype.constructor=js;class Xs{constructor(){this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}computeGroups(t){const e=[];let n,r,i;const o=t.faces;for(r=0;r<o.length;r++){const t=o[r];t.materialIndex!==i&&(i=t.materialIndex,void 0!==n&&(n.count=3*r-n.start,e.push(n)),n={start:3*r,materialIndex:i})}void 0!==n&&(n.count=3*r-n.start,e.push(n)),this.groups=e}fromGeometry(t){const e=t.faces,n=t.vertices,r=t.faceVertexUvs,i=r[0]&&r[0].length>0,o=r[1]&&r[1].length>0,s=t.morphTargets,a=s.length;let u;if(a>0){u=[];for(let t=0;t<a;t++)u[t]={name:s[t].name,data:[]};this.morphTargets.position=u}const c=t.morphNormals,l=c.length;let h;if(l>0){h=[];for(let t=0;t<l;t++)h[t]={name:c[t].name,data:[]};this.morphTargets.normal=h}const p=t.skinIndices,d=t.skinWeights,f=p.length===n.length,m=d.length===n.length;n.length>0&&0===e.length&&console.error("THREE.DirectGeometry: Faceless geometries are not supported.");for(let t=0;t<e.length;t++){const g=e[t];this.vertices.push(n[g.a],n[g.b],n[g.c]);const y=g.vertexNormals;if(3===y.length)this.normals.push(y[0],y[1],y[2]);else{const t=g.normal;this.normals.push(t,t,t)}const v=g.vertexColors;if(3===v.length)this.colors.push(v[0],v[1],v[2]);else{const t=g.color;this.colors.push(t,t,t)}if(!0===i){const e=r[0][t];void 0!==e?this.uvs.push(e[0],e[1],e[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",t),this.uvs.push(new Ki,new Ki,new Ki))}if(!0===o){const e=r[1][t];void 0!==e?this.uvs2.push(e[0],e[1],e[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",t),this.uvs2.push(new Ki,new Ki,new Ki))}for(let t=0;t<a;t++){const e=s[t].vertices;u[t].data.push(e[g.a],e[g.b],e[g.c])}for(let e=0;e<l;e++){const n=c[e].vertexNormals[t];h[e].data.push(n.a,n.b,n.c)}f&&this.skinIndices.push(p[g.a],p[g.b],p[g.c]),m&&this.skinWeights.push(d[g.a],d[g.b],d[g.c])}return this.computeGroups(t),this.verticesNeedUpdate=t.verticesNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this}}function qs(t){if(0===t.length)return-1/0;let e=t[0];for(let n=1,r=t.length;n<r;++n)t[n]>e&&(e=t[n]);return e}const Ys={Int8Array:Int8Array,Uint8Array:Uint8Array,Uint8ClampedArray:"undefined"!=typeof Uint8ClampedArray?Uint8ClampedArray:Uint8Array,Int16Array:Int16Array,Uint16Array:Uint16Array,Int32Array:Int32Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array};function Ks(t,e){return new Ys[t](e)}let Zs=1;const Js=new Po,Qs=new as,ta=new ao,ea=new lo,na=new lo,ra=new ao;function ia(){Object.defineProperty(this,"id",{value:Zs+=2}),this.uuid=Yi.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}ia.prototype=Object.assign(Object.create(ji.prototype),{constructor:ia,isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(t){return Array.isArray(t)?this.index=new(qs(t)>65535?Ws:zs)(t,1):this.index=t,this},getAttribute:function(t){return this.attributes[t]},setAttribute:function(t,e){return this.attributes[t]=e,this},deleteAttribute:function(t){return delete this.attributes[t],this},hasAttribute:function(t){return void 0!==this.attributes[t]},addGroup:function(t,e,n=0){this.groups.push({start:t,count:e,materialIndex:n})},clearGroups:function(){this.groups=[]},setDrawRange:function(t,e){this.drawRange.start=t,this.drawRange.count=e},applyMatrix4:function(t){const e=this.attributes.position;void 0!==e&&(e.applyMatrix4(t),e.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const e=(new Zi).getNormalMatrix(t);n.applyNormalMatrix(e),n.needsUpdate=!0}const r=this.attributes.tangent;return void 0!==r&&(r.transformDirection(t),r.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this},rotateX:function(t){return Js.makeRotationX(t),this.applyMatrix4(Js),this},rotateY:function(t){return Js.makeRotationY(t),this.applyMatrix4(Js),this},rotateZ:function(t){return Js.makeRotationZ(t),this.applyMatrix4(Js),this},translate:function(t,e,n){return Js.makeTranslation(t,e,n),this.applyMatrix4(Js),this},scale:function(t,e,n){return Js.makeScale(t,e,n),this.applyMatrix4(Js),this},lookAt:function(t){return Qs.lookAt(t),Qs.updateMatrix(),this.applyMatrix4(Qs.matrix),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(ta).negate(),this.translate(ta.x,ta.y,ta.z),this},setFromObject:function(t){const e=t.geometry;if(t.isPoints||t.isLine){const t=new Gs(3*e.vertices.length,3),n=new Gs(3*e.colors.length,3);if(this.setAttribute("position",t.copyVector3sArray(e.vertices)),this.setAttribute("color",n.copyColorsArray(e.colors)),e.lineDistances&&e.lineDistances.length===e.vertices.length){const t=new Gs(e.lineDistances.length,1);this.setAttribute("lineDistance",t.copyArray(e.lineDistances))}null!==e.boundingSphere&&(this.boundingSphere=e.boundingSphere.clone()),null!==e.boundingBox&&(this.boundingBox=e.boundingBox.clone())}else t.isMesh&&e&&e.isGeometry&&this.fromGeometry(e);return this},setFromPoints:function(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n];e.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Gs(e,3)),this},updateFromObject:function(t){let e=t.geometry;if(t.isMesh){let t=e.__directGeometry;if(!0===e.elementsNeedUpdate&&(t=void 0,e.elementsNeedUpdate=!1),void 0===t)return this.fromGeometry(e);t.verticesNeedUpdate=e.verticesNeedUpdate,t.normalsNeedUpdate=e.normalsNeedUpdate,t.colorsNeedUpdate=e.colorsNeedUpdate,t.uvsNeedUpdate=e.uvsNeedUpdate,t.groupsNeedUpdate=e.groupsNeedUpdate,e.verticesNeedUpdate=!1,e.normalsNeedUpdate=!1,e.colorsNeedUpdate=!1,e.uvsNeedUpdate=!1,e.groupsNeedUpdate=!1,e=t}if(!0===e.verticesNeedUpdate){const t=this.attributes.position;void 0!==t&&(t.copyVector3sArray(e.vertices),t.needsUpdate=!0),e.verticesNeedUpdate=!1}if(!0===e.normalsNeedUpdate){const t=this.attributes.normal;void 0!==t&&(t.copyVector3sArray(e.normals),t.needsUpdate=!0),e.normalsNeedUpdate=!1}if(!0===e.colorsNeedUpdate){const t=this.attributes.color;void 0!==t&&(t.copyColorsArray(e.colors),t.needsUpdate=!0),e.colorsNeedUpdate=!1}if(e.uvsNeedUpdate){const t=this.attributes.uv;void 0!==t&&(t.copyVector2sArray(e.uvs),t.needsUpdate=!0),e.uvsNeedUpdate=!1}if(e.lineDistancesNeedUpdate){const t=this.attributes.lineDistance;void 0!==t&&(t.copyArray(e.lineDistances),t.needsUpdate=!0),e.lineDistancesNeedUpdate=!1}return e.groupsNeedUpdate&&(e.computeGroups(t.geometry),this.groups=e.groups,e.groupsNeedUpdate=!1),this},fromGeometry:function(t){return t.__directGeometry=(new Xs).fromGeometry(t),this.fromDirectGeometry(t.__directGeometry)},fromDirectGeometry:function(t){const e=new Float32Array(3*t.vertices.length);if(this.setAttribute("position",new Ps(e,3).copyVector3sArray(t.vertices)),t.normals.length>0){const e=new Float32Array(3*t.normals.length);this.setAttribute("normal",new Ps(e,3).copyVector3sArray(t.normals))}if(t.colors.length>0){const e=new Float32Array(3*t.colors.length);this.setAttribute("color",new Ps(e,3).copyColorsArray(t.colors))}if(t.uvs.length>0){const e=new Float32Array(2*t.uvs.length);this.setAttribute("uv",new Ps(e,2).copyVector2sArray(t.uvs))}if(t.uvs2.length>0){const e=new Float32Array(2*t.uvs2.length);this.setAttribute("uv2",new Ps(e,2).copyVector2sArray(t.uvs2))}this.groups=t.groups;for(const e in t.morphTargets){const n=[],r=t.morphTargets[e];for(let t=0,e=r.length;t<e;t++){const e=r[t],i=new Gs(3*e.data.length,3);i.name=e.name,n.push(i.copyVector3sArray(e.data))}this.morphAttributes[e]=n}if(t.skinIndices.length>0){const e=new Gs(4*t.skinIndices.length,4);this.setAttribute("skinIndex",e.copyVector4sArray(t.skinIndices))}if(t.skinWeights.length>0){const e=new Gs(4*t.skinWeights.length,4);this.setAttribute("skinWeight",e.copyVector4sArray(t.skinWeights))}return null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),this},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new lo);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new ao(-1/0,-1/0,-1/0),new ao(1/0,1/0,1/0));if(void 0!==t){if(this.boundingBox.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];ea.setFromBufferAttribute(n),this.morphTargetsRelative?(ra.addVectors(this.boundingBox.min,ea.min),this.boundingBox.expandByPoint(ra),ra.addVectors(this.boundingBox.max,ea.max),this.boundingBox.expandByPoint(ra)):(this.boundingBox.expandByPoint(ea.min),this.boundingBox.expandByPoint(ea.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Co);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new ao,1/0);if(t){const n=this.boundingSphere.center;if(ea.setFromBufferAttribute(t),e)for(let t=0,n=e.length;t<n;t++){const n=e[t];na.setFromBufferAttribute(n),this.morphTargetsRelative?(ra.addVectors(ea.min,na.min),ea.expandByPoint(ra),ra.addVectors(ea.max,na.max),ea.expandByPoint(ra)):(ea.expandByPoint(na.min),ea.expandByPoint(na.max))}ea.getCenter(n);let r=0;for(let e=0,i=t.count;e<i;e++)ra.fromBufferAttribute(t,e),r=Math.max(r,n.distanceToSquared(ra));if(e)for(let i=0,o=e.length;i<o;i++){const o=e[i],s=this.morphTargetsRelative;for(let e=0,i=o.count;e<i;e++)ra.fromBufferAttribute(o,e),s&&(ta.fromBufferAttribute(t,e),ra.add(ta)),r=Math.max(r,n.distanceToSquared(ra))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}},computeFaceNormals:function(){},computeVertexNormals:function(){const t=this.index,e=this.getAttribute("position");if(void 0!==e){let n=this.getAttribute("normal");if(void 0===n)n=new Ps(new Float32Array(3*e.count),3),this.setAttribute("normal",n);else for(let t=0,e=n.count;t<e;t++)n.setXYZ(t,0,0,0);const r=new ao,i=new ao,o=new ao,s=new ao,a=new ao,u=new ao,c=new ao,l=new ao;if(t)for(let h=0,p=t.count;h<p;h+=3){const p=t.getX(h+0),d=t.getX(h+1),f=t.getX(h+2);r.fromBufferAttribute(e,p),i.fromBufferAttribute(e,d),o.fromBufferAttribute(e,f),c.subVectors(o,i),l.subVectors(r,i),c.cross(l),s.fromBufferAttribute(n,p),a.fromBufferAttribute(n,d),u.fromBufferAttribute(n,f),s.add(c),a.add(c),u.add(c),n.setXYZ(p,s.x,s.y,s.z),n.setXYZ(d,a.x,a.y,a.z),n.setXYZ(f,u.x,u.y,u.z)}else for(let t=0,s=e.count;t<s;t+=3)r.fromBufferAttribute(e,t+0),i.fromBufferAttribute(e,t+1),o.fromBufferAttribute(e,t+2),c.subVectors(o,i),l.subVectors(r,i),c.cross(l),n.setXYZ(t+0,c.x,c.y,c.z),n.setXYZ(t+1,c.x,c.y,c.z),n.setXYZ(t+2,c.x,c.y,c.z);this.normalizeNormals(),n.needsUpdate=!0}},merge:function(t,e){if(!t||!t.isBufferGeometry)return void console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",t);void 0===e&&(e=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const r in n){if(void 0===t.attributes[r])continue;const i=n[r].array,o=t.attributes[r],s=o.array,a=o.itemSize*e,u=Math.min(s.length,i.length-a);for(let t=0,e=a;t<u;t++,e++)i[e]=s[t]}return this},normalizeNormals:function(){const t=this.attributes.normal;for(let e=0,n=t.count;e<n;e++)ra.fromBufferAttribute(t,e),ra.normalize(),t.setXYZ(e,ra.x,ra.y,ra.z)},toNonIndexed:function(){function t(t,e){const n=t.array,r=t.itemSize,i=t.normalized,o=new n.constructor(e.length*r);let s=0,a=0;for(let t=0,i=e.length;t<i;t++){s=e[t]*r;for(let t=0;t<r;t++)o[a++]=n[s++]}return new Ps(o,r,i)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;const e=new ia,n=this.index.array,r=this.attributes;for(const i in r){const o=t(r[i],n);e.setAttribute(i,o)}const i=this.morphAttributes;for(const r in i){const o=[],s=i[r];for(let e=0,r=s.length;e<r;e++){const r=t(s[e],n);o.push(r)}e.morphAttributes[r]=o}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let t=0,n=o.length;t<n;t++){const n=o[t];e.addGroup(n.start,n.count,n.materialIndex)}return e},toJSON:function(){const t={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}t.data={attributes:{}};const e=this.index;null!==e&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const n=this.attributes;for(const e in n){const r=n[e],i=r.toJSON(t.data);""!==r.name&&(i.name=r.name),t.data.attributes[e]=i}const r={};let i=!1;for(const e in this.morphAttributes){const n=this.morphAttributes[e],o=[];for(let e=0,r=n.length;e<r;e++){const r=n[e],i=r.toJSON(t.data);""!==r.name&&(i.name=r.name),o.push(i)}o.length>0&&(r[e]=o,i=!0)}i&&(t.data.morphAttributes=r,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const s=this.boundingSphere;return null!==s&&(t.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),t},clone:function(){return(new ia).copy(this)},copy:function(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const n=t.index;null!==n&&this.setIndex(n.clone(e));const r=t.attributes;for(const t in r){const n=r[t];this.setAttribute(t,n.clone(e))}const i=t.morphAttributes;for(const t in i){const n=[],r=i[t];for(let t=0,i=r.length;t<i;t++)n.push(r[t].clone(e));this.morphAttributes[t]=n}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let t=0,e=o.length;t<e;t++){const e=o[t];this.addGroup(e.start,e.count,e.materialIndex)}const s=t.boundingBox;null!==s&&(this.boundingBox=s.clone());const a=t.boundingSphere;return null!==a&&(this.boundingSphere=a.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});const oa=new Po,sa=new ko,aa=new Co,ua=new ao,ca=new ao,la=new ao,ha=new ao,pa=new ao,da=new ao,fa=new ao,ma=new ao,ga=new ao,ya=new Ki,va=new Ki,xa=new Ki,ba=new ao,wa=new ao;function _a(t=new ia,e=new Os){as.call(this),this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}function Sa(t,e,n,r,i,o,s,a){let u;if(u=1===e.side?r.intersectTriangle(s,o,i,!0,a):r.intersectTriangle(i,o,s,2!==e.side,a),null===u)return null;wa.copy(a),wa.applyMatrix4(t.matrixWorld);const c=n.ray.origin.distanceTo(wa);return c<n.near||c>n.far?null:{distance:c,point:wa.clone(),object:t}}function Ta(t,e,n,r,i,o,s,a,u,c,l,h){ua.fromBufferAttribute(i,c),ca.fromBufferAttribute(i,l),la.fromBufferAttribute(i,h);const p=t.morphTargetInfluences;if(e.morphTargets&&o&&p){fa.set(0,0,0),ma.set(0,0,0),ga.set(0,0,0);for(let t=0,e=o.length;t<e;t++){const e=p[t],n=o[t];0!==e&&(ha.fromBufferAttribute(n,c),pa.fromBufferAttribute(n,l),da.fromBufferAttribute(n,h),s?(fa.addScaledVector(ha,e),ma.addScaledVector(pa,e),ga.addScaledVector(da,e)):(fa.addScaledVector(ha.sub(ua),e),ma.addScaledVector(pa.sub(ca),e),ga.addScaledVector(da.sub(la),e)))}ua.add(fa),ca.add(ma),la.add(ga)}t.isSkinnedMesh&&(t.boneTransform(c,ua),t.boneTransform(l,ca),t.boneTransform(h,la));const d=Sa(t,e,n,r,ua,ca,la,ba);if(d){a&&(ya.fromBufferAttribute(a,c),va.fromBufferAttribute(a,l),xa.fromBufferAttribute(a,h),d.uv=_s.getUV(ba,ua,ca,la,ya,va,xa,new Ki)),u&&(ya.fromBufferAttribute(u,c),va.fromBufferAttribute(u,l),xa.fromBufferAttribute(u,h),d.uv2=_s.getUV(ba,ua,ca,la,ya,va,xa,new Ki));const t=new Rs(c,l,h);_s.getNormal(ua,ca,la,t.normal),d.face=t}return d}_a.prototype=Object.assign(Object.create(as.prototype),{constructor:_a,isMesh:!0,copy:function(t){return as.prototype.copy.call(this,t),void 0!==t.morphTargetInfluences&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),void 0!==t.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=t.material,this.geometry=t.geometry,this},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}},raycast:function(t,e){const n=this.geometry,r=this.material,i=this.matrixWorld;if(void 0===r)return;if(null===n.boundingSphere&&n.computeBoundingSphere(),aa.copy(n.boundingSphere),aa.applyMatrix4(i),!1===t.ray.intersectsSphere(aa))return;if(oa.copy(i).invert(),sa.copy(t.ray).applyMatrix4(oa),null!==n.boundingBox&&!1===sa.intersectsBox(n.boundingBox))return;let o;if(n.isBufferGeometry){const i=n.index,s=n.attributes.position,a=n.morphAttributes.position,u=n.morphTargetsRelative,c=n.attributes.uv,l=n.attributes.uv2,h=n.groups,p=n.drawRange;if(null!==i)if(Array.isArray(r))for(let n=0,d=h.length;n<d;n++){const d=h[n],f=r[d.materialIndex];for(let n=Math.max(d.start,p.start),r=Math.min(d.start+d.count,p.start+p.count);n<r;n+=3){const r=i.getX(n),h=i.getX(n+1),p=i.getX(n+2);o=Ta(this,f,t,sa,s,a,u,c,l,r,h,p),o&&(o.faceIndex=Math.floor(n/3),o.face.materialIndex=d.materialIndex,e.push(o))}}else for(let n=Math.max(0,p.start),h=Math.min(i.count,p.start+p.count);n<h;n+=3){const h=i.getX(n),p=i.getX(n+1),d=i.getX(n+2);o=Ta(this,r,t,sa,s,a,u,c,l,h,p,d),o&&(o.faceIndex=Math.floor(n/3),e.push(o))}else if(void 0!==s)if(Array.isArray(r))for(let n=0,i=h.length;n<i;n++){const i=h[n],d=r[i.materialIndex];for(let n=Math.max(i.start,p.start),r=Math.min(i.start+i.count,p.start+p.count);n<r;n+=3)o=Ta(this,d,t,sa,s,a,u,c,l,n,n+1,n+2),o&&(o.faceIndex=Math.floor(n/3),o.face.materialIndex=i.materialIndex,e.push(o))}else for(let n=Math.max(0,p.start),i=Math.min(s.count,p.start+p.count);n<i;n+=3)o=Ta(this,r,t,sa,s,a,u,c,l,n,n+1,n+2),o&&(o.faceIndex=Math.floor(n/3),e.push(o))}else if(n.isGeometry){const i=Array.isArray(r),s=n.vertices,a=n.faces;let u;const c=n.faceVertexUvs[0];c.length>0&&(u=c);for(let n=0,c=a.length;n<c;n++){const c=a[n],l=i?r[c.materialIndex]:r;if(void 0===l)continue;const h=s[c.a],p=s[c.b],d=s[c.c];if(o=Sa(this,l,t,sa,h,p,d,ba),o){if(u&&u[n]){const t=u[n];ya.copy(t[0]),va.copy(t[1]),xa.copy(t[2]),o.uv=_s.getUV(ba,h,p,d,ya,va,xa,new Ki)}o.face=c,o.faceIndex=n,e.push(o)}}}}});class Ea extends ia{constructor(t=1,e=1,n=1,r=1,i=1,o=1){super(),this.type="BoxBufferGeometry",this.parameters={width:t,height:e,depth:n,widthSegments:r,heightSegments:i,depthSegments:o};const s=this;r=Math.floor(r),i=Math.floor(i),o=Math.floor(o);const a=[],u=[],c=[],l=[];let h=0,p=0;function d(t,e,n,r,i,o,d,f,m,g,y){const v=o/m,x=d/g,b=o/2,w=d/2,_=f/2,S=m+1,T=g+1;let E=0,M=0;const C=new ao;for(let o=0;o<T;o++){const s=o*x-w;for(let a=0;a<S;a++){const h=a*v-b;C[t]=h*r,C[e]=s*i,C[n]=_,u.push(C.x,C.y,C.z),C[t]=0,C[e]=0,C[n]=f>0?1:-1,c.push(C.x,C.y,C.z),l.push(a/m),l.push(1-o/g),E+=1}}for(let t=0;t<g;t++)for(let e=0;e<m;e++){const n=h+e+S*t,r=h+e+S*(t+1),i=h+(e+1)+S*(t+1),o=h+(e+1)+S*t;a.push(n,r,o),a.push(r,i,o),M+=6}s.addGroup(p,M,y),p+=M,h+=E}d("z","y","x",-1,-1,n,e,t,o,i,0),d("z","y","x",1,-1,n,e,-t,o,i,1),d("x","z","y",1,1,t,n,e,r,o,2),d("x","z","y",1,-1,t,n,-e,r,o,3),d("x","y","z",1,-1,t,e,n,r,i,4),d("x","y","z",-1,-1,t,e,-n,r,i,5),this.setIndex(a),this.setAttribute("position",new Gs(u,3)),this.setAttribute("normal",new Gs(c,3)),this.setAttribute("uv",new Gs(l,2))}}function Ma(t){const e={};for(const n in t){e[n]={};for(const r in t[n]){const i=t[n][r];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture)?e[n][r]=i.clone():Array.isArray(i)?e[n][r]=i.slice():e[n][r]=i}}return e}function Ca(t){const e={};for(let n=0;n<t.length;n++){const r=Ma(t[n]);for(const t in r)e[t]=r[t]}return e}const Aa={clone:Ma,merge:Ca};function Na(t){Ds.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==t&&(void 0!==t.attributes&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(t))}function Ra(){as.call(this),this.type="Camera",this.matrixWorldInverse=new Po,this.projectionMatrix=new Po,this.projectionMatrixInverse=new Po}function Ia(t=50,e=1,n=.1,r=2e3){Ra.call(this),this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=n,this.far=r,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}Na.prototype=Object.create(Ds.prototype),Na.prototype.constructor=Na,Na.prototype.isShaderMaterial=!0,Na.prototype.copy=function(t){return Ds.prototype.copy.call(this,t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=Ma(t.uniforms),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.lights=t.lights,this.clipping=t.clipping,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this},Na.prototype.toJSON=function(t){const e=Ds.prototype.toJSON.call(this,t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const r=this.uniforms[n].value;r&&r.isTexture?e.uniforms[n]={type:"t",value:r.toJSON(t).uuid}:r&&r.isColor?e.uniforms[n]={type:"c",value:r.getHex()}:r&&r.isVector2?e.uniforms[n]={type:"v2",value:r.toArray()}:r&&r.isVector3?e.uniforms[n]={type:"v3",value:r.toArray()}:r&&r.isVector4?e.uniforms[n]={type:"v4",value:r.toArray()}:r&&r.isMatrix3?e.uniforms[n]={type:"m3",value:r.toArray()}:r&&r.isMatrix4?e.uniforms[n]={type:"m4",value:r.toArray()}:e.uniforms[n]={value:r}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader;const n={};for(const t in this.extensions)!0===this.extensions[t]&&(n[t]=!0);return Object.keys(n).length>0&&(e.extensions=n),e},Ra.prototype=Object.assign(Object.create(as.prototype),{constructor:Ra,isCamera:!0,copy:function(t,e){return as.prototype.copy.call(this,t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this},getWorldDirection:function(t){void 0===t&&(console.warn("THREE.Camera: .getWorldDirection() target is now required"),t=new ao),this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(-e[8],-e[9],-e[10]).normalize()},updateMatrixWorld:function(t){as.prototype.updateMatrixWorld.call(this,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()},updateWorldMatrix:function(t,e){as.prototype.updateWorldMatrix.call(this,t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()},clone:function(){return(new this.constructor).copy(this)}}),Ia.prototype=Object.assign(Object.create(Ra.prototype),{constructor:Ia,isPerspectiveCamera:!0,copy:function(t,e){return Ra.prototype.copy.call(this,t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=null===t.view?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this},setFocalLength:function(t){const e=.5*this.getFilmHeight()/t;this.fov=2*Yi.RAD2DEG*Math.atan(e),this.updateProjectionMatrix()},getFocalLength:function(){const t=Math.tan(.5*Yi.DEG2RAD*this.fov);return.5*this.getFilmHeight()/t},getEffectiveFOV:function(){return 2*Yi.RAD2DEG*Math.atan(Math.tan(.5*Yi.DEG2RAD*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(t,e,n,r,i,o){this.aspect=t/e,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=this.near;let e=t*Math.tan(.5*Yi.DEG2RAD*this.fov)/this.zoom,n=2*e,r=this.aspect*n,i=-.5*r;const o=this.view;if(null!==this.view&&this.view.enabled){const t=o.fullWidth,s=o.fullHeight;i+=o.offsetX*r/t,e-=o.offsetY*n/s,r*=o.width/t,n*=o.height/s}const s=this.filmOffset;0!==s&&(i+=t*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(i,i+r,e,e-n,t,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=as.prototype.toJSON.call(this,t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,null!==this.view&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}});const Da=90;function Oa(t,e,n){if(as.call(this),this.type="CubeCamera",!0!==n.isWebGLCubeRenderTarget)return void console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");this.renderTarget=n;const r=new Ia(Da,1,t,e);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new ao(1,0,0)),this.add(r);const i=new Ia(Da,1,t,e);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new ao(-1,0,0)),this.add(i);const o=new Ia(Da,1,t,e);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new ao(0,1,0)),this.add(o);const s=new Ia(Da,1,t,e);s.layers=this.layers,s.up.set(0,0,-1),s.lookAt(new ao(0,-1,0)),this.add(s);const a=new Ia(Da,1,t,e);a.layers=this.layers,a.up.set(0,-1,0),a.lookAt(new ao(0,0,1)),this.add(a);const u=new Ia(Da,1,t,e);u.layers=this.layers,u.up.set(0,-1,0),u.lookAt(new ao(0,0,-1)),this.add(u),this.update=function(t,e){null===this.parent&&this.updateMatrixWorld();const c=t.xr.enabled,l=t.getRenderTarget();t.xr.enabled=!1;const h=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,t.setRenderTarget(n,0),t.render(e,r),t.setRenderTarget(n,1),t.render(e,i),t.setRenderTarget(n,2),t.render(e,o),t.setRenderTarget(n,3),t.render(e,s),t.setRenderTarget(n,4),t.render(e,a),n.texture.generateMipmaps=h,t.setRenderTarget(n,5),t.render(e,u),t.setRenderTarget(l),t.xr.enabled=c}}function La(t,e,n,r,i,o,s,a,u,c){t=void 0!==t?t:[],e=void 0!==e?e:301,s=void 0!==s?s:Ii,eo.call(this,t,e,n,r,i,o,s,a,u,c),this.flipY=!1,this._needsFlipEnvMap=!0}function ka(t,e,n){Number.isInteger(e)&&(console.warn("THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )"),e=n),io.call(this,t,t,e),e=e||{},this.texture=new La(void 0,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.encoding),this.texture._needsFlipEnvMap=!1}function Pa(t,e,n,r,i,o,s,a,u,c,l,h){eo.call(this,null,o,s,a,u,c,r,i,l,h),this.image={data:t||null,width:e||1,height:n||1},this.magFilter=void 0!==u?u:Si,this.minFilter=void 0!==c?c:Si,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.needsUpdate=!0}Oa.prototype=Object.create(as.prototype),Oa.prototype.constructor=Oa,La.prototype=Object.create(eo.prototype),La.prototype.constructor=La,La.prototype.isCubeTexture=!0,Object.defineProperty(La.prototype,"images",{get:function(){return this.image},set:function(t){this.image=t}}),ka.prototype=Object.create(io.prototype),ka.prototype.constructor=ka,ka.prototype.isWebGLCubeRenderTarget=!0,ka.prototype.fromEquirectangularTexture=function(t,e){this.texture.type=e.type,this.texture.format=Di,this.texture.encoding=e.encoding,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const n={tEquirect:{value:null}},r="\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t#include <begin_vertex>\n\t\t\t\t#include <project_vertex>\n\n\t\t\t}\n\t\t",i="\n\n\t\t\tuniform sampler2D tEquirect;\n\n\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t}\n\t\t",o=new Ea(5,5,5),s=new Na({name:"CubemapFromEquirect",uniforms:Ma(n),vertexShader:r,fragmentShader:i,side:1,blending:0});s.uniforms.tEquirect.value=e;const a=new _a(o,s),u=e.minFilter;return e.minFilter===Ei&&(e.minFilter=Ti),new Oa(1,10,this).update(t,a),e.minFilter=u,a.geometry.dispose(),a.material.dispose(),this},ka.prototype.clear=function(t,e,n,r){const i=t.getRenderTarget();for(let i=0;i<6;i++)t.setRenderTarget(this,i),t.clear(e,n,r);t.setRenderTarget(i)},Pa.prototype=Object.create(eo.prototype),Pa.prototype.constructor=Pa,Pa.prototype.isDataTexture=!0;const $a=new Co,Ba=new ao;class Fa{constructor(t,e,n,r,i,o){this.planes=[void 0!==t?t:new hs,void 0!==e?e:new hs,void 0!==n?n:new hs,void 0!==r?r:new hs,void 0!==i?i:new hs,void 0!==o?o:new hs]}set(t,e,n,r,i,o){const s=this.planes;return s[0].copy(t),s[1].copy(e),s[2].copy(n),s[3].copy(r),s[4].copy(i),s[5].copy(o),this}clone(){return(new this.constructor).copy(this)}copy(t){const e=this.planes;for(let n=0;n<6;n++)e[n].copy(t.planes[n]);return this}setFromProjectionMatrix(t){const e=this.planes,n=t.elements,r=n[0],i=n[1],o=n[2],s=n[3],a=n[4],u=n[5],c=n[6],l=n[7],h=n[8],p=n[9],d=n[10],f=n[11],m=n[12],g=n[13],y=n[14],v=n[15];return e[0].setComponents(s-r,l-a,f-h,v-m).normalize(),e[1].setComponents(s+r,l+a,f+h,v+m).normalize(),e[2].setComponents(s+i,l+u,f+p,v+g).normalize(),e[3].setComponents(s-i,l-u,f-p,v-g).normalize(),e[4].setComponents(s-o,l-c,f-d,v-y).normalize(),e[5].setComponents(s+o,l+c,f+d,v+y).normalize(),this}intersectsObject(t){const e=t.geometry;return null===e.boundingSphere&&e.computeBoundingSphere(),$a.copy(e.boundingSphere).applyMatrix4(t.matrixWorld),this.intersectsSphere($a)}intersectsSprite(t){return $a.center.set(0,0,0),$a.radius=.7071067811865476,$a.applyMatrix4(t.matrixWorld),this.intersectsSphere($a)}intersectsSphere(t){const e=this.planes,n=t.center,r=-t.radius;for(let t=0;t<6;t++)if(e[t].distanceToPoint(n)<r)return!1;return!0}intersectsBox(t){const e=this.planes;for(let n=0;n<6;n++){const r=e[n];if(Ba.x=r.normal.x>0?t.max.x:t.min.x,Ba.y=r.normal.y>0?t.max.y:t.min.y,Ba.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(Ba)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let n=0;n<6;n++)if(e[n].distanceToPoint(t)<0)return!1;return!0}}function Ua(){let t=null,e=!1,n=null,r=null;function i(e,o){n(e,o),r=t.requestAnimationFrame(i)}return{start:function(){!0!==e&&null!==n&&(r=t.requestAnimationFrame(i),e=!0)},stop:function(){t.cancelAnimationFrame(r),e=!1},setAnimationLoop:function(t){n=t},setContext:function(e){t=e}}}function za(t,e){const n=e.isWebGL2,r=new WeakMap;return{get:function(t){return t.isInterleavedBufferAttribute&&(t=t.data),r.get(t)},remove:function(e){e.isInterleavedBufferAttribute&&(e=e.data);const n=r.get(e);n&&(t.deleteBuffer(n.buffer),r.delete(e))},update:function(e,i){if(e.isGLBufferAttribute){const t=r.get(e);return void((!t||t.version<e.version)&&r.set(e,{buffer:e.buffer,type:e.type,bytesPerElement:e.elementSize,version:e.version}))}e.isInterleavedBufferAttribute&&(e=e.data);const o=r.get(e);void 0===o?r.set(e,function(e,r){const i=e.array,o=e.usage,s=t.createBuffer();t.bindBuffer(r,s),t.bufferData(r,i,o),e.onUploadCallback();let a=5126;return i instanceof Float32Array?a=5126:i instanceof Float64Array?console.warn("THREE.WebGLAttributes: Unsupported data buffer format: Float64Array."):i instanceof Uint16Array?e.isFloat16BufferAttribute?n?a=5131:console.warn("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2."):a=5123:i instanceof Int16Array?a=5122:i instanceof Uint32Array?a=5125:i instanceof Int32Array?a=5124:i instanceof Int8Array?a=5120:i instanceof Uint8Array&&(a=5121),{buffer:s,type:a,bytesPerElement:i.BYTES_PER_ELEMENT,version:e.version}}(e,i)):o.version<e.version&&(function(e,r,i){const o=r.array,s=r.updateRange;t.bindBuffer(i,e),-1===s.count?t.bufferSubData(i,0,o):(n?t.bufferSubData(i,s.offset*o.BYTES_PER_ELEMENT,o,s.offset,s.count):t.bufferSubData(i,s.offset*o.BYTES_PER_ELEMENT,o.subarray(s.offset,s.offset+s.count)),s.count=-1)}(o.buffer,e,i),o.version=e.version)}}}class Va extends ia{constructor(t=1,e=1,n=1,r=1){super(),this.type="PlaneBufferGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r};const i=t/2,o=e/2,s=Math.floor(n),a=Math.floor(r),u=s+1,c=a+1,l=t/s,h=e/a,p=[],d=[],f=[],m=[];for(let t=0;t<c;t++){const e=t*h-o;for(let n=0;n<u;n++){const r=n*l-i;d.push(r,-e,0),f.push(0,0,1),m.push(n/s),m.push(1-t/a)}}for(let t=0;t<a;t++)for(let e=0;e<s;e++){const n=e+u*t,r=e+u*(t+1),i=e+1+u*(t+1),o=e+1+u*t;p.push(n,r,o),p.push(r,i,o)}this.setIndex(p),this.setAttribute("position",new Gs(d,3)),this.setAttribute("normal",new Gs(f,3)),this.setAttribute("uv",new Gs(m,2))}}const Wa={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef ALPHATEST\n\tif ( diffuseColor.a < ALPHATEST ) discard;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\n}\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\n\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\tif( cutoffDistance > 0.0 ) {\n\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t}\n\treturn distanceFalloff;\n#else\n\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t}\n\treturn 1.0;\n#endif\n}\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\n\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\n}\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\n\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\n\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\n\treturn Fr * fresnel + F0;\n}\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\treturn 1.0 / ( gl * gv );\n}\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\n\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( G * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\treturn specularColor * brdf.x + brdf.y;\n}\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\n\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\n\tvec3 FssEss = F * brdf.x + brdf.y;\n\tfloat Ess = brdf.x + brdf.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\nfloat G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\n\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\n\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, dotLH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n}\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\n\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\n}\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\n\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie(float roughness, float NoH) {\n\tfloat invAlpha = 1.0 / roughness;\n\tfloat cos2h = NoH * NoH;\n\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\n}\nfloat V_Neubelt(float NoV, float NoL) {\n\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\n}\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\n\tvec3 N = geometry.normal;\n\tvec3 V = geometry.viewDir;\n\tvec3 H = normalize( V + L );\n\tfloat dotNH = saturate( dot( N, H ) );\n\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\n}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vUv );\n\t\tvec2 dSTdy = dFdy( vUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\n\t\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\n\t\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 );\n\t\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#ifdef USE_COLOR\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor.xyz *= color.xyz;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract(sin(sn) * c);\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\tfloat distance = dot( planeNormal, point - pointOnPlane );\n\treturn - distance * planeNormal + point;\n}\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\n}\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\n\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat linearToRelativeLuminance( const in vec3 color ) {\n\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\n\treturn dot( weights, color.rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_maxMipLevel 8.0\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_maxTileSize 256.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\n\t\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\n\t\tvec2 f = fract( uv );\n\t\tuv += 0.5 - f;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tif ( mipInt < cubeUV_maxMipLevel ) {\n\t\t\tuv.y += 2.0 * cubeUV_maxTileSize;\n\t\t}\n\t\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\n\t\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\n\t\tuv *= texelSize;\n\t\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x += texelSize;\n\t\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.y += texelSize;\n\t\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tuv.x -= texelSize;\n\t\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\n\t\tvec3 tm = mix( tl, tr, f.x );\n\t\tvec3 bm = mix( bl, br, f.x );\n\t\treturn mix( tm, bm, f.y );\n\t}\n\t#define r0 1.0\n\t#define v0 0.339\n\t#define m0 - 2.0\n\t#define r1 0.8\n\t#define v1 0.276\n\t#define m1 - 1.0\n\t#define r4 0.4\n\t#define v4 0.046\n\t#define m4 2.0\n\t#define r5 0.305\n\t#define v5 0.016\n\t#define m5 3.0\n\t#define r6 0.21\n\t#define v6 0.0038\n\t#define m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= r1 ) {\n\t\t\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\n\t\t} else if ( roughness >= r4 ) {\n\t\t\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\n\t\t} else if ( roughness >= r5 ) {\n\t\t\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\n\t\t} else if ( roughness >= r6 ) {\n\t\t\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\n\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"\nvec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\n}\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\n\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\n}\nvec4 sRGBToLinear( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}\nvec4 RGBEToLinear( in vec4 value ) {\n\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\n}\nvec4 LinearToRGBE( in vec4 value ) {\n\tfloat maxComponent = max( max( value.r, value.g ), value.b );\n\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\n\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\n}\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\n}\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\n\tM = ceil( M * 255.0 ) / 255.0;\n\treturn vec4( value.rgb / ( M * maxRange ), M );\n}\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\n\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\n}\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\n\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\n\tfloat D = max( maxRange / maxRGB, 1.0 );\n\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\n\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\n}\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\nvec4 LinearToLogLuv( in vec4 value ) {\n\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\n\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\n\tvec4 vResult;\n\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\n\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\n\tvResult.w = fract( Le );\n\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\n\treturn vResult;\n}\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\nvec4 LogLuvToLinear( in vec4 value ) {\n\tfloat Le = value.z * 255.0 + value.w;\n\tvec3 Xp_Y_XYZp;\n\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\n\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\n\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\n\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\n\treturn vec4( max( vRGB, 0.0 ), 1.0 );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifndef ENVMAP_TYPE_CUBE_UV\n\t\tenvColor = envMapTexelToLinear( envColor );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\tuniform int maxMipLevel;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\t#ifdef ENVMAP_MODE_REFRACTION\n\t\tuniform float refractionRatio;\n\t#endif\n\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\n\t\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t#else\n\t\t\tvec4 envMapColor = vec4( 0.0 );\n\t\t#endif\n\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t}\n\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\n\t\tfloat maxMIPLevelScalar = float( maxMIPLevel );\n\t\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\n\t\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\n\t\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\t}\n\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( -viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\n\t\t#endif\n\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\n\t\t#ifdef ENVMAP_TYPE_CUBE\n\t\t\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\n\t\t\t#ifdef TEXTURE_LOD_EXT\n\t\t\t\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#else\n\t\t\t\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\n\t\t\t#endif\n\t\t\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\n\t\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t#endif\n\t\treturn envMapColor.rgb * envMapIntensity;\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tfogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float fogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float fogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn texture2D( gradientMap, coord ).rgb;\n\t#else\n\t\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_vertex:"vec3 diffuse = vec3( 1.0 );\nGeometricContext geometry;\ngeometry.position = mvPosition.xyz;\ngeometry.normal = normalize( transformedNormal );\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\nGeometricContext backGeometry;\nbackGeometry.position = geometry.position;\nbackGeometry.normal = -geometry.normal;\nbackGeometry.viewDir = geometry.viewDir;\nvLightFront = vec3( 0.0 );\nvIndirectFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\n\tvLightBack = vec3( 0.0 );\n\tvIndirectBack = vec3( 0.0 );\n#endif\nIncidentLight directLight;\nfloat dotNL;\nvec3 directLightColor_Diffuse;\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\n#ifdef DOUBLE_SIDED\n\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\n\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\n#endif\n#if NUM_POINT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_DIR_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\n\t\tdotNL = dot( geometry.normal, directLight.direction );\n\t\tdirectLightColor_Diffuse = PI * directLight.color;\n\t\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\n\t\t#endif\n\t}\n\t#pragma unroll_loop_end\n#endif",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\n\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treturn irradiance;\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tdirectLight.color = directionalLight.color;\n\t\tdirectLight.direction = directionalLight.direction;\n\t\tdirectLight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tdirectLight.color = pointLight.color;\n\t\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\n\t\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tdirectLight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tfloat angleCos = dot( directLight.direction, spotLight.direction );\n\t\tif ( angleCos > spotLight.coneCos ) {\n\t\t\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\t\tdirectLight.color = spotLight.color;\n\t\t\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tdirectLight.visible = true;\n\t\t} else {\n\t\t\tdirectLight.color = vec3( 0.0 );\n\t\t\tdirectLight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\n\t\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tirradiance *= PI;\n\t\t#endif\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon\n#define Material_LightProbeLOD( material )\t(0)",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong\n#define Material_LightProbeLOD( material )\t(0)",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\n#ifdef REFLECTIVITY\n\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\n#endif\n#ifdef CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheen;\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat specularRoughness;\n\tvec3 specularColor;\n#ifdef CLEARCOAT\n\tfloat clearcoat;\n\tfloat clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tvec3 sheenColor;\n#endif\n};\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\n\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.specularRoughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\tirradiance *= PI;\n\t#endif\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = ccDotNL * directLight.color;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tccIrradiance *= PI;\n\t\t#endif\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\n\t\t\tmaterial.specularRoughness,\n\t\t\tdirectLight.direction,\n\t\t\tgeometry,\n\t\t\tmaterial.sheenColor\n\t\t);\n\t#else\n\t\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\n\t#endif\n\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef CLEARCOAT\n\t\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\n\t\tfloat ccDotNL = ccDotNV;\n\t\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\n\t#else\n\t\tfloat clearcoatDHR = 0.0;\n\t#endif\n\tfloat clearcoatInv = 1.0 - clearcoatDHR;\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\n\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t\t#ifndef PHYSICALLY_CORRECT_LIGHTS\n\t\t\tlightMapIrradiance *= PI;\n\t\t#endif\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\n\t#ifdef CLEARCOAT\n\t\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tvec4 texelColor = texture2D( map, vUv );\n\ttexelColor = mapTexelToLinear( texelColor );\n\tdiffuseColor *= texelColor;\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n#endif\n#ifdef USE_MAP\n\tvec4 mapTexel = texture2D( map, uv );\n\tdiffuseColor *= mapTexelToLinear( mapTexel );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\tuniform mat3 uvTransform;\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifndef USE_MORPHNORMALS\n\t\tuniform float morphTargetInfluences[ 8 ];\n\t#else\n\t\tuniform float morphTargetInfluences[ 4 ];\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t#ifndef USE_MORPHNORMALS\n\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t#endif\n#endif",normal_fragment_begin:"#ifdef FLAT_SHADED\n\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\n\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\t#ifdef USE_TANGENT\n\t\tvec3 tangent = normalize( vTangent );\n\t\tvec3 bitangent = normalize( vBitangent );\n\t\t#ifdef DOUBLE_SIDED\n\t\t\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\t#endif\n\t\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\n\t\t\tmat3 vTBN = mat3( tangent, bitangent, normal );\n\t\t#endif\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef OBJECTSPACE_NORMALMAP\n\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( TANGENTSPACE_NORMALMAP )\n\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\t#ifdef USE_TANGENT\n\t\tnormal = normalize( vTBN * mapN );\n\t#else\n\t\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\n\t#endif\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef OBJECTSPACE_NORMALMAP\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\t\tmat3 tsn = mat3( S, T, N );\n\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\t\treturn normalize( tsn * mapN );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\t#ifdef USE_TANGENT\n\t\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\n\t#else\n\t\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\n\t#endif\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\n\treturn linearClipZ * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\n\t\tbool inFrustum = all( inFrustumVec );\n\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n\t\tbool frustumTest = all( frustumTestVec );\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\n\t\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\tvec4 shadowWorldPosition;\n\t#endif\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\t#ifdef BONE_TEXTURE\n\t\tuniform highp sampler2D boneTexture;\n\t\tuniform int boneTextureSize;\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tfloat j = i * 4.0;\n\t\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\t\ty = dy * ( y + 0.5 );\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\t\treturn bone;\n\t\t}\n\t#else\n\t\tuniform mat4 boneMatrices[ MAX_BONES ];\n\t\tmat4 getBoneMatrix( const in float i ) {\n\t\t\tmat4 bone = boneMatrices[ int(i) ];\n\t\t\treturn bone;\n\t\t}\n\t#endif\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate(a) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmissionmap_fragment:"#ifdef USE_TRANSMISSIONMAP\n\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\n#endif",transmissionmap_pars_fragment:"#ifdef USE_TRANSMISSIONMAP\n\tuniform sampler2D transmissionMap;\n#endif",uv_pars_fragment:"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\n\tvarying vec2 vUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\t#ifdef UVS_VERTEX_ONLY\n\t\tvec2 vUv;\n\t#else\n\t\tvarying vec2 vUv;\n\t#endif\n\tuniform mat3 uvTransform;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n#endif",uv2_pars_fragment:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvarying vec2 vUv2;\n#endif",uv2_pars_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tattribute vec2 uv2;\n\tvarying vec2 vUv2;\n\tuniform mat3 uv2Transform;\n#endif",uv2_vertex:"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\n\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_frag:"uniform sampler2D t2D;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",cube_frag:"#include <envmap_common_pars_fragment>\nuniform float opacity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\tvec3 vReflect = vWorldDirection;\n\t#include <envmap_fragment>\n\tgl_FragColor = envColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tvec4 texColor = texture2D( tEquirect, sampleUV );\n\tgl_FragColor = mapTexelToLinear( texColor );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\n\t\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\n\t\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_ENVMAP\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"uniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <fog_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <emissivemap_fragment>\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\n\t#else\n\t\treflectedLight.indirectDiffuse += vIndirectFront;\n\t#endif\n\t#include <lightmap_fragment>\n\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\n\t#ifdef DOUBLE_SIDED\n\t\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\n\t#else\n\t\treflectedLight.directDiffuse = vLightFront;\n\t#endif\n\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vLightFront;\nvarying vec3 vIndirectFront;\n#ifdef DOUBLE_SIDED\n\tvarying vec3 vLightBack;\n\tvarying vec3 vIndirectBack;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <envmap_pars_vertex>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <lights_lambert_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t\tmatcapColor = matcapTexelToLinear( matcapColor );\n\t#else\n\t\tvec4 matcapColor = vec4( 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#ifndef FLAT_SHADED\n\t\tvNormal = normalize( transformedNormal );\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <cube_uv_reflection_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define REFLECTIVITY\n\t#define CLEARCOAT\n\t#define TRANSMISSION\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef TRANSMISSION\n\tuniform float transmission;\n#endif\n#ifdef REFLECTIVITY\n\tuniform float reflectivity;\n#endif\n#ifdef CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheen;\n#endif\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <uv2_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <transmissionmap_pars_fragment>\n#include <bsdfs>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <lights_physical_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#ifdef TRANSMISSION\n\t\tfloat totalTransmission = transmission;\n\t#endif\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <transmissionmap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#ifdef TRANSMISSION\n\t\tdiffuseColor.a *= mix( saturate( 1. - totalTransmission + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) ), 1.0, metalness );\n\t#endif\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",normal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n}",normal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvarying vec3 vViewPosition;\n#endif\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <color_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}"},Ha={common:{diffuse:{value:new Ns(15658734)},opacity:{value:1},map:{value:null},uvTransform:{value:new Zi},uv2Transform:{value:new Zi},alphaMap:{value:null}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98},maxMipLevel:{value:0}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Ki(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ns(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ns(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Zi}},sprite:{diffuse:{value:new Ns(15658734)},opacity:{value:1},center:{value:new Ki(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},uvTransform:{value:new Zi}}},Ga={basic:{uniforms:Ca([Ha.common,Ha.specularmap,Ha.envmap,Ha.aomap,Ha.lightmap,Ha.fog]),vertexShader:Wa.meshbasic_vert,fragmentShader:Wa.meshbasic_frag},lambert:{uniforms:Ca([Ha.common,Ha.specularmap,Ha.envmap,Ha.aomap,Ha.lightmap,Ha.emissivemap,Ha.fog,Ha.lights,{emissive:{value:new Ns(0)}}]),vertexShader:Wa.meshlambert_vert,fragmentShader:Wa.meshlambert_frag},phong:{uniforms:Ca([Ha.common,Ha.specularmap,Ha.envmap,Ha.aomap,Ha.lightmap,Ha.emissivemap,Ha.bumpmap,Ha.normalmap,Ha.displacementmap,Ha.fog,Ha.lights,{emissive:{value:new Ns(0)},specular:{value:new Ns(1118481)},shininess:{value:30}}]),vertexShader:Wa.meshphong_vert,fragmentShader:Wa.meshphong_frag},standard:{uniforms:Ca([Ha.common,Ha.envmap,Ha.aomap,Ha.lightmap,Ha.emissivemap,Ha.bumpmap,Ha.normalmap,Ha.displacementmap,Ha.roughnessmap,Ha.metalnessmap,Ha.fog,Ha.lights,{emissive:{value:new Ns(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Wa.meshphysical_vert,fragmentShader:Wa.meshphysical_frag},toon:{uniforms:Ca([Ha.common,Ha.aomap,Ha.lightmap,Ha.emissivemap,Ha.bumpmap,Ha.normalmap,Ha.displacementmap,Ha.gradientmap,Ha.fog,Ha.lights,{emissive:{value:new Ns(0)}}]),vertexShader:Wa.meshtoon_vert,fragmentShader:Wa.meshtoon_frag},matcap:{uniforms:Ca([Ha.common,Ha.bumpmap,Ha.normalmap,Ha.displacementmap,Ha.fog,{matcap:{value:null}}]),vertexShader:Wa.meshmatcap_vert,fragmentShader:Wa.meshmatcap_frag},points:{uniforms:Ca([Ha.points,Ha.fog]),vertexShader:Wa.points_vert,fragmentShader:Wa.points_frag},dashed:{uniforms:Ca([Ha.common,Ha.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Wa.linedashed_vert,fragmentShader:Wa.linedashed_frag},depth:{uniforms:Ca([Ha.common,Ha.displacementmap]),vertexShader:Wa.depth_vert,fragmentShader:Wa.depth_frag},normal:{uniforms:Ca([Ha.common,Ha.bumpmap,Ha.normalmap,Ha.displacementmap,{opacity:{value:1}}]),vertexShader:Wa.normal_vert,fragmentShader:Wa.normal_frag},sprite:{uniforms:Ca([Ha.sprite,Ha.fog]),vertexShader:Wa.sprite_vert,fragmentShader:Wa.sprite_frag},background:{uniforms:{uvTransform:{value:new Zi},t2D:{value:null}},vertexShader:Wa.background_vert,fragmentShader:Wa.background_frag},cube:{uniforms:Ca([Ha.envmap,{opacity:{value:1}}]),vertexShader:Wa.cube_vert,fragmentShader:Wa.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Wa.equirect_vert,fragmentShader:Wa.equirect_frag},distanceRGBA:{uniforms:Ca([Ha.common,Ha.displacementmap,{referencePosition:{value:new ao},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Wa.distanceRGBA_vert,fragmentShader:Wa.distanceRGBA_frag},shadow:{uniforms:Ca([Ha.lights,Ha.fog,{color:{value:new Ns(0)},opacity:{value:1}}]),vertexShader:Wa.shadow_vert,fragmentShader:Wa.shadow_frag}};function ja(t,e,n,r,i){const o=new Ns(0);let s,a,u=0,c=null,l=0,h=null;function p(t,e){n.buffers.color.setClear(t.r,t.g,t.b,e,i)}return{getClearColor:function(){return o},setClearColor:function(t,e=1){o.set(t),u=e,p(o,u)},getClearAlpha:function(){return u},setClearAlpha:function(t){u=t,p(o,u)},render:function(n,i,d,f){let m=!0===i.isScene?i.background:null;m&&m.isTexture&&(m=e.get(m));const g=t.xr,y=g.getSession&&g.getSession();y&&"additive"===y.environmentBlendMode&&(m=null),null===m?p(o,u):m&&m.isColor&&(p(m,1),f=!0),(t.autoClear||f)&&t.clear(t.autoClearColor,t.autoClearDepth,t.autoClearStencil),m&&(m.isCubeTexture||m.isWebGLCubeRenderTarget||306===m.mapping)?(void 0===a&&(a=new _a(new Ea(1,1,1),new Na({name:"BackgroundCubeMaterial",uniforms:Ma(Ga.cube.uniforms),vertexShader:Ga.cube.vertexShader,fragmentShader:Ga.cube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),a.geometry.deleteAttribute("normal"),a.geometry.deleteAttribute("uv"),a.onBeforeRender=function(t,e,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(a.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(a)),m.isWebGLCubeRenderTarget&&(m=m.texture),a.material.uniforms.envMap.value=m,a.material.uniforms.flipEnvMap.value=m.isCubeTexture&&m._needsFlipEnvMap?-1:1,c===m&&l===m.version&&h===t.toneMapping||(a.material.needsUpdate=!0,c=m,l=m.version,h=t.toneMapping),n.unshift(a,a.geometry,a.material,0,0,null)):m&&m.isTexture&&(void 0===s&&(s=new _a(new Va(2,2),new Na({name:"BackgroundMaterial",uniforms:Ma(Ga.background.uniforms),vertexShader:Ga.background.vertexShader,fragmentShader:Ga.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),s.geometry.deleteAttribute("normal"),Object.defineProperty(s.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(s)),s.material.uniforms.t2D.value=m,!0===m.matrixAutoUpdate&&m.updateMatrix(),s.material.uniforms.uvTransform.value.copy(m.matrix),c===m&&l===m.version&&h===t.toneMapping||(s.material.needsUpdate=!0,c=m,l=m.version,h=t.toneMapping),n.unshift(s,s.geometry,s.material,0,0,null))}}}function Xa(t,e,n,r){const i=t.getParameter(34921),o=r.isWebGL2?null:e.get("OES_vertex_array_object"),s=r.isWebGL2||null!==o,a={},u=p(null);let c=u;function l(e){return r.isWebGL2?t.bindVertexArray(e):o.bindVertexArrayOES(e)}function h(e){return r.isWebGL2?t.deleteVertexArray(e):o.deleteVertexArrayOES(e)}function p(t){const e=[],n=[],r=[];for(let t=0;t<i;t++)e[t]=0,n[t]=0,r[t]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:e,enabledAttributes:n,attributeDivisors:r,object:t,attributes:{},index:null}}function d(){const t=c.newAttributes;for(let e=0,n=t.length;e<n;e++)t[e]=0}function f(t){m(t,0)}function m(n,i){const o=c.newAttributes,s=c.enabledAttributes,a=c.attributeDivisors;o[n]=1,0===s[n]&&(t.enableVertexAttribArray(n),s[n]=1),a[n]!==i&&((r.isWebGL2?t:e.get("ANGLE_instanced_arrays"))[r.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,i),a[n]=i)}function g(){const e=c.newAttributes,n=c.enabledAttributes;for(let r=0,i=n.length;r<i;r++)n[r]!==e[r]&&(t.disableVertexAttribArray(r),n[r]=0)}function y(e,n,i,o,s,a){!0!==r.isWebGL2||5124!==i&&5125!==i?t.vertexAttribPointer(e,n,i,o,s,a):t.vertexAttribIPointer(e,n,i,s,a)}function v(){x(),c!==u&&(c=u,l(c.object))}function x(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:function(i,u,h,v,x){let b=!1;if(s){const e=function(e,n,i){const s=!0===i.wireframe;let u=a[e.id];void 0===u&&(u={},a[e.id]=u);let c=u[n.id];void 0===c&&(c={},u[n.id]=c);let l=c[s];return void 0===l&&(l=p(r.isWebGL2?t.createVertexArray():o.createVertexArrayOES()),c[s]=l),l}(v,h,u);c!==e&&(c=e,l(c.object)),b=function(t,e){const n=c.attributes,r=t.attributes;let i=0;for(const t in r){const e=n[t],o=r[t];if(void 0===e)return!0;if(e.attribute!==o)return!0;if(e.data!==o.data)return!0;i++}return c.attributesNum!==i||c.index!==e}(v,x),b&&function(t,e){const n={},r=t.attributes;let i=0;for(const t in r){const e=r[t],o={};o.attribute=e,e.data&&(o.data=e.data),n[t]=o,i++}c.attributes=n,c.attributesNum=i,c.index=e}(v,x)}else{const t=!0===u.wireframe;c.geometry===v.id&&c.program===h.id&&c.wireframe===t||(c.geometry=v.id,c.program=h.id,c.wireframe=t,b=!0)}!0===i.isInstancedMesh&&(b=!0),null!==x&&n.update(x,34963),b&&(function(i,o,s,a){if(!1===r.isWebGL2&&(i.isInstancedMesh||a.isInstancedBufferGeometry)&&null===e.get("ANGLE_instanced_arrays"))return;d();const u=a.attributes,c=s.getAttributes(),l=o.defaultAttributeValues;for(const e in c){const r=c[e];if(r>=0){const o=u[e];if(void 0!==o){const e=o.normalized,i=o.itemSize,s=n.get(o);if(void 0===s)continue;const u=s.buffer,c=s.type,l=s.bytesPerElement;if(o.isInterleavedBufferAttribute){const n=o.data,s=n.stride,h=o.offset;n&&n.isInstancedInterleavedBuffer?(m(r,n.meshPerAttribute),void 0===a._maxInstanceCount&&(a._maxInstanceCount=n.meshPerAttribute*n.count)):f(r),t.bindBuffer(34962,u),y(r,i,c,e,s*l,h*l)}else o.isInstancedBufferAttribute?(m(r,o.meshPerAttribute),void 0===a._maxInstanceCount&&(a._maxInstanceCount=o.meshPerAttribute*o.count)):f(r),t.bindBuffer(34962,u),y(r,i,c,e,0,0)}else if("instanceMatrix"===e){const e=n.get(i.instanceMatrix);if(void 0===e)continue;const o=e.buffer,s=e.type;m(r+0,1),m(r+1,1),m(r+2,1),m(r+3,1),t.bindBuffer(34962,o),t.vertexAttribPointer(r+0,4,s,!1,64,0),t.vertexAttribPointer(r+1,4,s,!1,64,16),t.vertexAttribPointer(r+2,4,s,!1,64,32),t.vertexAttribPointer(r+3,4,s,!1,64,48)}else if("instanceColor"===e){const e=n.get(i.instanceColor);if(void 0===e)continue;const o=e.buffer,s=e.type;m(r,1),t.bindBuffer(34962,o),t.vertexAttribPointer(r,3,s,!1,12,0)}else if(void 0!==l){const n=l[e];if(void 0!==n)switch(n.length){case 2:t.vertexAttrib2fv(r,n);break;case 3:t.vertexAttrib3fv(r,n);break;case 4:t.vertexAttrib4fv(r,n);break;default:t.vertexAttrib1fv(r,n)}}}}g()}(i,u,h,v),null!==x&&t.bindBuffer(34963,n.get(x).buffer))},reset:v,resetDefaultState:x,dispose:function(){v();for(const t in a){const e=a[t];for(const t in e){const n=e[t];for(const t in n)h(n[t].object),delete n[t];delete e[t]}delete a[t]}},releaseStatesOfGeometry:function(t){if(void 0===a[t.id])return;const e=a[t.id];for(const t in e){const n=e[t];for(const t in n)h(n[t].object),delete n[t];delete e[t]}delete a[t.id]},releaseStatesOfProgram:function(t){for(const e in a){const n=a[e];if(void 0===n[t.id])continue;const r=n[t.id];for(const t in r)h(r[t].object),delete r[t];delete n[t.id]}},initAttributes:d,enableAttribute:f,disableUnusedAttributes:g}}function qa(t,e,n,r){const i=r.isWebGL2;let o;this.setMode=function(t){o=t},this.render=function(e,r){t.drawArrays(o,e,r),n.update(r,o,1)},this.renderInstances=function(r,s,a){if(0===a)return;let u,c;if(i)u=t,c="drawArraysInstanced";else if(u=e.get("ANGLE_instanced_arrays"),c="drawArraysInstancedANGLE",null===u)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");u[c](o,r,s,a),n.update(s,o,a)}}function Ya(t,e,n){let r;function i(e){if("highp"===e){if(t.getShaderPrecisionFormat(35633,36338).precision>0&&t.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";e="mediump"}return"mediump"===e&&t.getShaderPrecisionFormat(35633,36337).precision>0&&t.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const o="undefined"!=typeof WebGL2RenderingContext&&t instanceof WebGL2RenderingContext||"undefined"!=typeof WebGL2ComputeRenderingContext&&t instanceof WebGL2ComputeRenderingContext;let s=void 0!==n.precision?n.precision:"highp";const a=i(s);a!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",a,"instead."),s=a);const u=!0===n.logarithmicDepthBuffer,c=t.getParameter(34930),l=t.getParameter(35660),h=t.getParameter(3379),p=t.getParameter(34076),d=t.getParameter(34921),f=t.getParameter(36347),m=t.getParameter(36348),g=t.getParameter(36349),y=l>0,v=o||!!e.get("OES_texture_float");return{isWebGL2:o,getMaxAnisotropy:function(){if(void 0!==r)return r;const n=e.get("EXT_texture_filter_anisotropic");return r=null!==n?t.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,r},getMaxPrecision:i,precision:s,logarithmicDepthBuffer:u,maxTextures:c,maxVertexTextures:l,maxTextureSize:h,maxCubemapSize:p,maxAttributes:d,maxVertexUniforms:f,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:y,floatFragmentTextures:v,floatVertexTextures:y&&v,maxSamples:o?t.getParameter(36183):0}}function Ka(t){const e=this;let n=null,r=0,i=!1,o=!1;const s=new hs,a=new Zi,u={value:null,needsUpdate:!1};function c(){u.value!==n&&(u.value=n,u.needsUpdate=r>0),e.numPlanes=r,e.numIntersection=0}function l(t,n,r,i){const o=null!==t?t.length:0;let c=null;if(0!==o){if(c=u.value,!0!==i||null===c){const e=r+4*o,i=n.matrixWorldInverse;a.getNormalMatrix(i),(null===c||c.length<e)&&(c=new Float32Array(e));for(let e=0,n=r;e!==o;++e,n+=4)s.copy(t[e]).applyMatrix4(i,a),s.normal.toArray(c,n),c[n+3]=s.constant}u.value=c,u.needsUpdate=!0}return e.numPlanes=o,e.numIntersection=0,c}this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(t,e,o){const s=0!==t.length||e||0!==r||i;return i=e,n=l(t,o,0),r=t.length,s},this.beginShadows=function(){o=!0,l(null)},this.endShadows=function(){o=!1,c()},this.setState=function(e,s,a){const h=e.clippingPlanes,p=e.clipIntersection,d=e.clipShadows,f=t.get(e);if(!i||null===h||0===h.length||o&&!d)o?l(null):c();else{const t=o?0:r,e=4*t;let i=f.clippingState||null;u.value=i,i=l(h,s,e,a);for(let t=0;t!==e;++t)i[t]=n[t];f.clippingState=i,this.numIntersection=p?this.numPlanes:0,this.numPlanes+=t}}}function Za(t){let e=new WeakMap;function n(t,e){return 303===e?t.mapping=301:304===e&&(t.mapping=302),t}function r(t){const n=t.target;n.removeEventListener("dispose",r);const i=e.get(n);void 0!==i&&(e.delete(n),i.dispose())}return{get:function(i){if(i&&i.isTexture){const o=i.mapping;if(303===o||304===o){if(e.has(i))return n(e.get(i).texture,i.mapping);{const o=i.image;if(o&&o.height>0){const s=t.getRenderList(),a=t.getRenderTarget(),u=new ka(o.height/2);return u.fromEquirectangularTexture(t,i),e.set(i,u),t.setRenderTarget(a),t.setRenderList(s),i.addEventListener("dispose",r),n(u.texture,i.mapping)}return null}}}return i},dispose:function(){e=new WeakMap}}}function Ja(t){const e={};return{has:function(n){if(void 0!==e[n])return null!==e[n];let r;switch(n){case"WEBGL_depth_texture":r=t.getExtension("WEBGL_depth_texture")||t.getExtension("MOZ_WEBGL_depth_texture")||t.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=t.getExtension("EXT_texture_filter_anisotropic")||t.getExtension("MOZ_EXT_texture_filter_anisotropic")||t.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=t.getExtension("WEBGL_compressed_texture_s3tc")||t.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=t.getExtension("WEBGL_compressed_texture_pvrtc")||t.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=t.getExtension(n)}return e[n]=r,null!==r},get:function(t){return this.has(t)||console.warn("THREE.WebGLRenderer: "+t+" extension not supported."),e[t]}}}function Qa(t,e,n,r){const i=new WeakMap,o=new WeakMap;function s(t){const a=t.target,u=i.get(a);null!==u.index&&e.remove(u.index);for(const t in u.attributes)e.remove(u.attributes[t]);a.removeEventListener("dispose",s),i.delete(a);const c=o.get(u);c&&(e.remove(c),o.delete(u)),r.releaseStatesOfGeometry(u),!0===a.isInstancedBufferGeometry&&delete a._maxInstanceCount,n.memory.geometries--}function a(t){const n=[],r=t.index,i=t.attributes.position;let s=0;if(null!==r){const t=r.array;s=r.version;for(let e=0,r=t.length;e<r;e+=3){const r=t[e+0],i=t[e+1],o=t[e+2];n.push(r,i,i,o,o,r)}}else{const t=i.array;s=i.version;for(let e=0,r=t.length/3-1;e<r;e+=3){const t=e+0,r=e+1,i=e+2;n.push(t,r,r,i,i,t)}}const a=new(qs(n)>65535?Ws:zs)(n,1);a.version=s;const u=o.get(t);u&&e.remove(u),o.set(t,a)}return{get:function(t,e){let r=i.get(e);return r||(e.addEventListener("dispose",s),e.isBufferGeometry?r=e:e.isGeometry&&(void 0===e._bufferGeometry&&(e._bufferGeometry=(new ia).setFromObject(t)),r=e._bufferGeometry),i.set(e,r),n.memory.geometries++,r)},update:function(t){const n=t.attributes;for(const t in n)e.update(n[t],34962);const r=t.morphAttributes;for(const t in r){const n=r[t];for(let t=0,r=n.length;t<r;t++)e.update(n[t],34962)}},getWireframeAttribute:function(t){const e=o.get(t);if(e){const n=t.index;null!==n&&e.version<n.version&&a(t)}else a(t);return o.get(t)}}}function tu(t,e,n,r){const i=r.isWebGL2;let o,s,a;this.setMode=function(t){o=t},this.setIndex=function(t){s=t.type,a=t.bytesPerElement},this.render=function(e,r){t.drawElements(o,r,s,e*a),n.update(r,o,1)},this.renderInstances=function(r,u,c){if(0===c)return;let l,h;if(i)l=t,h="drawElementsInstanced";else if(l=e.get("ANGLE_instanced_arrays"),h="drawElementsInstancedANGLE",null===l)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");l[h](o,u,s,r*a,c),n.update(u,o,c)}}function eu(t){const e={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:e,programs:null,autoReset:!0,reset:function(){e.frame++,e.calls=0,e.triangles=0,e.points=0,e.lines=0},update:function(t,n,r){switch(e.calls++,n){case 4:e.triangles+=r*(t/3);break;case 1:e.lines+=r*(t/2);break;case 3:e.lines+=r*(t-1);break;case 2:e.lines+=r*t;break;case 0:e.points+=r*t;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",n)}}}}function nu(t,e){return t[0]-e[0]}function ru(t,e){return Math.abs(e[1])-Math.abs(t[1])}function iu(t){const e={},n=new Float32Array(8),r=[];for(let t=0;t<8;t++)r[t]=[t,0];return{update:function(i,o,s,a){const u=i.morphTargetInfluences,c=void 0===u?0:u.length;let l=e[o.id];if(void 0===l){l=[];for(let t=0;t<c;t++)l[t]=[t,0];e[o.id]=l}for(let t=0;t<c;t++){const e=l[t];e[0]=t,e[1]=u[t]}l.sort(ru);for(let t=0;t<8;t++)t<c&&l[t][1]?(r[t][0]=l[t][0],r[t][1]=l[t][1]):(r[t][0]=Number.MAX_SAFE_INTEGER,r[t][1]=0);r.sort(nu);const h=s.morphTargets&&o.morphAttributes.position,p=s.morphNormals&&o.morphAttributes.normal;let d=0;for(let t=0;t<8;t++){const e=r[t],i=e[0],s=e[1];i!==Number.MAX_SAFE_INTEGER&&s?(h&&o.getAttribute("morphTarget"+t)!==h[i]&&o.setAttribute("morphTarget"+t,h[i]),p&&o.getAttribute("morphNormal"+t)!==p[i]&&o.setAttribute("morphNormal"+t,p[i]),n[t]=s,d+=s):(h&&!0===o.hasAttribute("morphTarget"+t)&&o.deleteAttribute("morphTarget"+t),p&&!0===o.hasAttribute("morphNormal"+t)&&o.deleteAttribute("morphNormal"+t),n[t]=0)}const f=o.morphTargetsRelative?1:1-d;a.getUniforms().setValue(t,"morphTargetBaseInfluence",f),a.getUniforms().setValue(t,"morphTargetInfluences",n)}}}function ou(t,e,n,r){let i=new WeakMap;function o(t){const e=t.target;e.removeEventListener("dispose",o),n.remove(e.instanceMatrix),null!==e.instanceColor&&n.remove(e.instanceColor)}return{update:function(t){const s=r.render.frame,a=t.geometry,u=e.get(t,a);return i.get(u)!==s&&(a.isGeometry&&u.updateFromObject(t),e.update(u),i.set(u,s)),t.isInstancedMesh&&(!1===t.hasEventListener("dispose",o)&&t.addEventListener("dispose",o),n.update(t.instanceMatrix,34962),null!==t.instanceColor&&n.update(t.instanceColor,34962)),u},dispose:function(){i=new WeakMap}}}function su(t=null,e=1,n=1,r=1){eo.call(this,null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=Si,this.minFilter=Si,this.wrapR=wi,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}function au(t=null,e=1,n=1,r=1){eo.call(this,null),this.image={data:t,width:e,height:n,depth:r},this.magFilter=Si,this.minFilter=Si,this.wrapR=wi,this.generateMipmaps=!1,this.flipY=!1,this.needsUpdate=!0}Ga.physical={uniforms:Ca([Ga.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new Ki(1,1)},clearcoatNormalMap:{value:null},sheen:{value:new Ns(0)},transmission:{value:0},transmissionMap:{value:null}}]),vertexShader:Wa.meshphysical_vert,fragmentShader:Wa.meshphysical_frag},su.prototype=Object.create(eo.prototype),su.prototype.constructor=su,su.prototype.isDataTexture2DArray=!0,au.prototype=Object.create(eo.prototype),au.prototype.constructor=au,au.prototype.isDataTexture3D=!0;const uu=new eo,cu=new su,lu=new au,hu=new La,pu=[],du=[],fu=new Float32Array(16),mu=new Float32Array(9),gu=new Float32Array(4);function yu(t,e,n){const r=t[0];if(r<=0||r>0)return t;const i=e*n;let o=pu[i];if(void 0===o&&(o=new Float32Array(i),pu[i]=o),0!==e){r.toArray(o,0);for(let r=1,i=0;r!==e;++r)i+=n,t[r].toArray(o,i)}return o}function vu(t,e){if(t.length!==e.length)return!1;for(let n=0,r=t.length;n<r;n++)if(t[n]!==e[n])return!1;return!0}function xu(t,e){for(let n=0,r=e.length;n<r;n++)t[n]=e[n]}function bu(t,e){let n=du[e];void 0===n&&(n=new Int32Array(e),du[e]=n);for(let r=0;r!==e;++r)n[r]=t.allocateTextureUnit();return n}function wu(t,e){const n=this.cache;n[0]!==e&&(t.uniform1f(this.addr,e),n[0]=e)}function _u(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y||(t.uniform2f(this.addr,e.x,e.y),n[0]=e.x,n[1]=e.y);else{if(vu(n,e))return;t.uniform2fv(this.addr,e),xu(n,e)}}function Su(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z||(t.uniform3f(this.addr,e.x,e.y,e.z),n[0]=e.x,n[1]=e.y,n[2]=e.z);else if(void 0!==e.r)n[0]===e.r&&n[1]===e.g&&n[2]===e.b||(t.uniform3f(this.addr,e.r,e.g,e.b),n[0]=e.r,n[1]=e.g,n[2]=e.b);else{if(vu(n,e))return;t.uniform3fv(this.addr,e),xu(n,e)}}function Tu(t,e){const n=this.cache;if(void 0!==e.x)n[0]===e.x&&n[1]===e.y&&n[2]===e.z&&n[3]===e.w||(t.uniform4f(this.addr,e.x,e.y,e.z,e.w),n[0]=e.x,n[1]=e.y,n[2]=e.z,n[3]=e.w);else{if(vu(n,e))return;t.uniform4fv(this.addr,e),xu(n,e)}}function Eu(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(vu(n,e))return;t.uniformMatrix2fv(this.addr,!1,e),xu(n,e)}else{if(vu(n,r))return;gu.set(r),t.uniformMatrix2fv(this.addr,!1,gu),xu(n,r)}}function Mu(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(vu(n,e))return;t.uniformMatrix3fv(this.addr,!1,e),xu(n,e)}else{if(vu(n,r))return;mu.set(r),t.uniformMatrix3fv(this.addr,!1,mu),xu(n,r)}}function Cu(t,e){const n=this.cache,r=e.elements;if(void 0===r){if(vu(n,e))return;t.uniformMatrix4fv(this.addr,!1,e),xu(n,e)}else{if(vu(n,r))return;fu.set(r),t.uniformMatrix4fv(this.addr,!1,fu),xu(n,r)}}function Au(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.safeSetTexture2D(e||uu,i)}function Nu(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture2DArray(e||cu,i)}function Ru(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.setTexture3D(e||lu,i)}function Iu(t,e,n){const r=this.cache,i=n.allocateTextureUnit();r[0]!==i&&(t.uniform1i(this.addr,i),r[0]=i),n.safeSetTextureCube(e||hu,i)}function Du(t,e){const n=this.cache;n[0]!==e&&(t.uniform1i(this.addr,e),n[0]=e)}function Ou(t,e){const n=this.cache;vu(n,e)||(t.uniform2iv(this.addr,e),xu(n,e))}function Lu(t,e){const n=this.cache;vu(n,e)||(t.uniform3iv(this.addr,e),xu(n,e))}function ku(t,e){const n=this.cache;vu(n,e)||(t.uniform4iv(this.addr,e),xu(n,e))}function Pu(t,e){const n=this.cache;n[0]!==e&&(t.uniform1ui(this.addr,e),n[0]=e)}function $u(t,e){t.uniform1fv(this.addr,e)}function Bu(t,e){t.uniform1iv(this.addr,e)}function Fu(t,e){t.uniform2iv(this.addr,e)}function Uu(t,e){t.uniform3iv(this.addr,e)}function zu(t,e){t.uniform4iv(this.addr,e)}function Vu(t,e){const n=yu(e,this.size,2);t.uniform2fv(this.addr,n)}function Wu(t,e){const n=yu(e,this.size,3);t.uniform3fv(this.addr,n)}function Hu(t,e){const n=yu(e,this.size,4);t.uniform4fv(this.addr,n)}function Gu(t,e){const n=yu(e,this.size,4);t.uniformMatrix2fv(this.addr,!1,n)}function ju(t,e){const n=yu(e,this.size,9);t.uniformMatrix3fv(this.addr,!1,n)}function Xu(t,e){const n=yu(e,this.size,16);t.uniformMatrix4fv(this.addr,!1,n)}function qu(t,e,n){const r=e.length,i=bu(n,r);t.uniform1iv(this.addr,i);for(let t=0;t!==r;++t)n.safeSetTexture2D(e[t]||uu,i[t])}function Yu(t,e,n){const r=e.length,i=bu(n,r);t.uniform1iv(this.addr,i);for(let t=0;t!==r;++t)n.safeSetTextureCube(e[t]||hu,i[t])}function Ku(t,e,n){this.id=t,this.addr=n,this.cache=[],this.setValue=function(t){switch(t){case 5126:return wu;case 35664:return _u;case 35665:return Su;case 35666:return Tu;case 35674:return Eu;case 35675:return Mu;case 35676:return Cu;case 5124:case 35670:return Du;case 35667:case 35671:return Ou;case 35668:case 35672:return Lu;case 35669:case 35673:return ku;case 5125:return Pu;case 35678:case 36198:case 36298:case 36306:case 35682:return Au;case 35679:case 36299:case 36307:return Ru;case 35680:case 36300:case 36308:case 36293:return Iu;case 36289:case 36303:case 36311:case 36292:return Nu}}(e.type)}function Zu(t,e,n){this.id=t,this.addr=n,this.cache=[],this.size=e.size,this.setValue=function(t){switch(t){case 5126:return $u;case 35664:return Vu;case 35665:return Wu;case 35666:return Hu;case 35674:return Gu;case 35675:return ju;case 35676:return Xu;case 5124:case 35670:return Bu;case 35667:case 35671:return Fu;case 35668:case 35672:return Uu;case 35669:case 35673:return zu;case 35678:case 36198:case 36298:case 36306:case 35682:return qu;case 35680:case 36300:case 36308:case 36293:return Yu}}(e.type)}function Ju(t){this.id=t,this.seq=[],this.map={}}Zu.prototype.updateCache=function(t){const e=this.cache;t instanceof Float32Array&&e.length!==t.length&&(this.cache=new Float32Array(t.length)),xu(e,t)},Ju.prototype.setValue=function(t,e,n){const r=this.seq;for(let i=0,o=r.length;i!==o;++i){const o=r[i];o.setValue(t,e[o.id],n)}};const Qu=/(\w+)(\])?(\[|\.)?/g;function tc(t,e){t.seq.push(e),t.map[e.id]=e}function ec(t,e,n){const r=t.name,i=r.length;for(Qu.lastIndex=0;;){const o=Qu.exec(r),s=Qu.lastIndex;let a=o[1];const u="]"===o[2],c=o[3];if(u&&(a|=0),void 0===c||"["===c&&s+2===i){tc(n,void 0===c?new Ku(a,t,e):new Zu(a,t,e));break}{let t=n.map[a];void 0===t&&(t=new Ju(a),tc(n,t)),n=t}}}function nc(t,e){this.seq=[],this.map={};const n=t.getProgramParameter(e,35718);for(let r=0;r<n;++r){const n=t.getActiveUniform(e,r);ec(n,t.getUniformLocation(e,n.name),this)}}function rc(t,e,n){const r=t.createShader(e);return t.shaderSource(r,n),t.compileShader(r),r}nc.prototype.setValue=function(t,e,n,r){const i=this.map[e];void 0!==i&&i.setValue(t,n,r)},nc.prototype.setOptional=function(t,e,n){const r=e[n];void 0!==r&&this.setValue(t,n,r)},nc.upload=function(t,e,n,r){for(let i=0,o=e.length;i!==o;++i){const o=e[i],s=n[o.id];!1!==s.needsUpdate&&o.setValue(t,s.value,r)}},nc.seqWithValue=function(t,e){const n=[];for(let r=0,i=t.length;r!==i;++r){const i=t[r];i.id in e&&n.push(i)}return n};let ic=0;function oc(t){switch(t){case zi:return["Linear","( value )"];case 3001:return["sRGB","( value )"];case 3002:return["RGBE","( value )"];case 3004:return["RGBM","( value, 7.0 )"];case 3005:return["RGBM","( value, 16.0 )"];case 3006:return["RGBD","( value, 256.0 )"];case 3007:return["Gamma","( value, float( GAMMA_FACTOR ) )"];case 3003:return["LogLuv","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",t),["Linear","( value )"]}}function sc(t,e,n){const r=t.getShaderParameter(e,35713),i=t.getShaderInfoLog(e).trim();return r&&""===i?"":"THREE.WebGLShader: gl.getShaderInfoLog() "+n+"\n"+i+function(t){const e=t.split("\n");for(let t=0;t<e.length;t++)e[t]=t+1+": "+e[t];return e.join("\n")}(t.getShaderSource(e))}function ac(t,e){const n=oc(e);return"vec4 "+t+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function uc(t,e){const n=oc(e);return"vec4 "+t+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function cc(t,e){let n;switch(e){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),n="Linear"}return"vec3 "+t+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function lc(t){return""!==t}function hc(t,e){return t.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function pc(t,e){return t.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const dc=/^[ \t]*#include +<([\w\d./]+)>/gm;function fc(t){return t.replace(dc,mc)}function mc(t,e){const n=Wa[e];if(void 0===n)throw new Error("Can not resolve #include <"+e+">");return fc(n)}const gc=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,yc=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function vc(t){return t.replace(yc,bc).replace(gc,xc)}function xc(t,e,n,r){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),bc(0,e,n,r)}function bc(t,e,n,r){let i="";for(let t=parseInt(e);t<parseInt(n);t++)i+=r.replace(/\[\s*i\s*\]/g,"[ "+t+" ]").replace(/UNROLLED_LOOP_INDEX/g,t);return i}function wc(t){let e="precision "+t.precision+" float;\nprecision "+t.precision+" int;";return"highp"===t.precision?e+="\n#define HIGH_PRECISION":"mediump"===t.precision?e+="\n#define MEDIUM_PRECISION":"lowp"===t.precision&&(e+="\n#define LOW_PRECISION"),e}function _c(t,e,n,r){const i=t.getContext(),o=n.defines;let s=n.vertexShader,a=n.fragmentShader;const u=function(t){let e="SHADOWMAP_TYPE_BASIC";return 1===t.shadowMapType?e="SHADOWMAP_TYPE_PCF":2===t.shadowMapType?e="SHADOWMAP_TYPE_PCF_SOFT":3===t.shadowMapType&&(e="SHADOWMAP_TYPE_VSM"),e}(n),c=function(t){let e="ENVMAP_TYPE_CUBE";if(t.envMap)switch(t.envMapMode){case 301:case 302:e="ENVMAP_TYPE_CUBE";break;case 306:case 307:e="ENVMAP_TYPE_CUBE_UV"}return e}(n),l=function(t){let e="ENVMAP_MODE_REFLECTION";if(t.envMap)switch(t.envMapMode){case 302:case 307:e="ENVMAP_MODE_REFRACTION"}return e}(n),h=function(t){let e="ENVMAP_BLENDING_NONE";if(t.envMap)switch(t.combine){case 0:e="ENVMAP_BLENDING_MULTIPLY";break;case 1:e="ENVMAP_BLENDING_MIX";break;case 2:e="ENVMAP_BLENDING_ADD"}return e}(n),p=t.gammaFactor>0?t.gammaFactor:1,d=n.isWebGL2?"":function(t){return[t.extensionDerivatives||t.envMapCubeUV||t.bumpMap||t.tangentSpaceNormalMap||t.clearcoatNormalMap||t.flatShading||"physical"===t.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(t.extensionFragDepth||t.logarithmicDepthBuffer)&&t.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",t.extensionDrawBuffers&&t.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(t.extensionShaderTextureLOD||t.envMap)&&t.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(lc).join("\n")}(n),f=function(t){const e=[];for(const n in t){const r=t[n];!1!==r&&e.push("#define "+n+" "+r)}return e.join("\n")}(o),m=i.createProgram();let g,y,v=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(g=[f].filter(lc).join("\n"),g.length>0&&(g+="\n"),y=[d,f].filter(lc).join("\n"),y.length>0&&(y+="\n")):(g=[wc(n),"#define SHADER_NAME "+n.shaderName,f,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+p,"#define MAX_BONES "+n.maxBones,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.displacementMap&&n.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.useVertexTexture?"#define BONE_TEXTURE":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+u:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#ifdef USE_COLOR","\tattribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(lc).join("\n"),y=[d,wc(n),"#define SHADER_NAME "+n.shaderName,f,n.alphaTest?"#define ALPHATEST "+n.alphaTest+(n.alphaTest%1?"":".0"):"","#define GAMMA_FACTOR "+p,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+c:"",n.envMap?"#define "+l:"",n.envMap?"#define "+h:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMap&&n.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",n.normalMap&&n.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.sheen?"#define USE_SHEEN":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexUvs?"#define USE_UV":"",n.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+u:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"",(n.extensionShaderTextureLOD||n.envMap)&&n.rendererExtensionShaderTextureLod?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?Wa.tonemapping_pars_fragment:"",0!==n.toneMapping?cc("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",Wa.encodings_pars_fragment,n.map?ac("mapTexelToLinear",n.mapEncoding):"",n.matcap?ac("matcapTexelToLinear",n.matcapEncoding):"",n.envMap?ac("envMapTexelToLinear",n.envMapEncoding):"",n.emissiveMap?ac("emissiveMapTexelToLinear",n.emissiveMapEncoding):"",n.lightMap?ac("lightMapTexelToLinear",n.lightMapEncoding):"",uc("linearToOutputTexel",n.outputEncoding),n.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(lc).join("\n")),s=fc(s),s=hc(s,n),s=pc(s,n),a=fc(a),a=hc(a,n),a=pc(a,n),s=vc(s),a=vc(a),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(v="#version 300 es\n",g=["#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+g,y=["#define varying in",n.glslVersion===Gi?"":"out highp vec4 pc_fragColor;",n.glslVersion===Gi?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+y);const x=v+y+a,b=rc(i,35633,v+g+s),w=rc(i,35632,x);if(i.attachShader(m,b),i.attachShader(m,w),void 0!==n.index0AttributeName?i.bindAttribLocation(m,0,n.index0AttributeName):!0===n.morphTargets&&i.bindAttribLocation(m,0,"position"),i.linkProgram(m),t.debug.checkShaderErrors){const t=i.getProgramInfoLog(m).trim(),e=i.getShaderInfoLog(b).trim(),n=i.getShaderInfoLog(w).trim();let r=!0,o=!0;if(!1===i.getProgramParameter(m,35714)){r=!1;const e=sc(i,b,"vertex"),n=sc(i,w,"fragment");console.error("THREE.WebGLProgram: shader error: ",i.getError(),"35715",i.getProgramParameter(m,35715),"gl.getProgramInfoLog",t,e,n)}else""!==t?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",t):""!==e&&""!==n||(o=!1);o&&(this.diagnostics={runnable:r,programLog:t,vertexShader:{log:e,prefix:g},fragmentShader:{log:n,prefix:y}})}let _,S;return i.deleteShader(b),i.deleteShader(w),this.getUniforms=function(){return void 0===_&&(_=new nc(i,m)),_},this.getAttributes=function(){return void 0===S&&(S=function(t,e){const n={},r=t.getProgramParameter(e,35721);for(let i=0;i<r;i++){const r=t.getActiveAttrib(e,i).name;n[r]=t.getAttribLocation(e,r)}return n}(i,m)),S},this.destroy=function(){r.releaseStatesOfProgram(this),i.deleteProgram(m),this.program=void 0},this.name=n.shaderName,this.id=ic++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=b,this.fragmentShader=w,this}function Sc(t,e,n,r,i,o){const s=[],a=r.isWebGL2,u=r.logarithmicDepthBuffer,c=r.floatVertexTextures,l=r.maxVertexUniforms,h=r.vertexTextures;let p=r.precision;const d={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"},f=["precision","isWebGL2","supportsVertexTextures","outputEncoding","instancing","instancingColor","map","mapEncoding","matcap","matcapEncoding","envMap","envMapMode","envMapEncoding","envMapCubeUV","lightMap","lightMapEncoding","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","objectSpaceNormalMap","tangentSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","vertexTangents","vertexUvs","uvsVertexOnly","fog","useFog","fogExp2","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","numDirLightShadows","numPointLightShadows","numSpotLightShadows","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking","dithering","sheen","transmissionMap"];function m(t){let e;return t&&t.isTexture?e=t.encoding:t&&t.isWebGLRenderTarget?(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),e=t.texture.encoding):e=zi,e}return{getParameters:function(i,s,f,g,y){const v=g.fog,x=i.isMeshStandardMaterial?g.environment:null,b=e.get(i.envMap||x),w=d[i.type],_=y.isSkinnedMesh?function(t){const e=t.skeleton.bones;if(c)return 1024;{const t=l,n=Math.floor((t-20)/4),r=Math.min(n,e.length);return r<e.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+e.length+" bones. This GPU supports "+r+"."),0):r}}(y):0;let S,T;if(null!==i.precision&&(p=r.getMaxPrecision(i.precision),p!==i.precision&&console.warn("THREE.WebGLProgram.getParameters:",i.precision,"not supported, using",p,"instead.")),w){const t=Ga[w];S=t.vertexShader,T=t.fragmentShader}else S=i.vertexShader,T=i.fragmentShader;const E=t.getRenderTarget();return{isWebGL2:a,shaderID:w,shaderName:i.type,vertexShader:S,fragmentShader:T,defines:i.defines,isRawShaderMaterial:!0===i.isRawShaderMaterial,glslVersion:i.glslVersion,precision:p,instancing:!0===y.isInstancedMesh,instancingColor:!0===y.isInstancedMesh&&null!==y.instanceColor,supportsVertexTextures:h,outputEncoding:null!==E?m(E.texture):t.outputEncoding,map:!!i.map,mapEncoding:m(i.map),matcap:!!i.matcap,matcapEncoding:m(i.matcap),envMap:!!b,envMapMode:b&&b.mapping,envMapEncoding:m(b),envMapCubeUV:!!b&&(306===b.mapping||307===b.mapping),lightMap:!!i.lightMap,lightMapEncoding:m(i.lightMap),aoMap:!!i.aoMap,emissiveMap:!!i.emissiveMap,emissiveMapEncoding:m(i.emissiveMap),bumpMap:!!i.bumpMap,normalMap:!!i.normalMap,objectSpaceNormalMap:1===i.normalMapType,tangentSpaceNormalMap:0===i.normalMapType,clearcoatMap:!!i.clearcoatMap,clearcoatRoughnessMap:!!i.clearcoatRoughnessMap,clearcoatNormalMap:!!i.clearcoatNormalMap,displacementMap:!!i.displacementMap,roughnessMap:!!i.roughnessMap,metalnessMap:!!i.metalnessMap,specularMap:!!i.specularMap,alphaMap:!!i.alphaMap,gradientMap:!!i.gradientMap,sheen:!!i.sheen,transmissionMap:!!i.transmissionMap,combine:i.combine,vertexTangents:i.normalMap&&i.vertexTangents,vertexColors:i.vertexColors,vertexUvs:!!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatMap||i.clearcoatRoughnessMap||i.clearcoatNormalMap||i.displacementMap||i.transmissionMap),uvsVertexOnly:!(i.map||i.bumpMap||i.normalMap||i.specularMap||i.alphaMap||i.emissiveMap||i.roughnessMap||i.metalnessMap||i.clearcoatNormalMap||i.transmissionMap||!i.displacementMap),fog:!!v,useFog:i.fog,fogExp2:v&&v.isFogExp2,flatShading:i.flatShading,sizeAttenuation:i.sizeAttenuation,logarithmicDepthBuffer:u,skinning:i.skinning&&_>0,maxBones:_,useVertexTexture:c,morphTargets:i.morphTargets,morphNormals:i.morphNormals,maxMorphTargets:t.maxMorphTargets,maxMorphNormals:t.maxMorphNormals,numDirLights:s.directional.length,numPointLights:s.point.length,numSpotLights:s.spot.length,numRectAreaLights:s.rectArea.length,numHemiLights:s.hemi.length,numDirLightShadows:s.directionalShadowMap.length,numPointLightShadows:s.pointShadowMap.length,numSpotLightShadows:s.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:i.dithering,shadowMapEnabled:t.shadowMap.enabled&&f.length>0,shadowMapType:t.shadowMap.type,toneMapping:i.toneMapped?t.toneMapping:0,physicallyCorrectLights:t.physicallyCorrectLights,premultipliedAlpha:i.premultipliedAlpha,alphaTest:i.alphaTest,doubleSided:2===i.side,flipSided:1===i.side,depthPacking:void 0!==i.depthPacking&&i.depthPacking,index0AttributeName:i.index0AttributeName,extensionDerivatives:i.extensions&&i.extensions.derivatives,extensionFragDepth:i.extensions&&i.extensions.fragDepth,extensionDrawBuffers:i.extensions&&i.extensions.drawBuffers,extensionShaderTextureLOD:i.extensions&&i.extensions.shaderTextureLOD,rendererExtensionFragDepth:a||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:a||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:a||n.has("EXT_shader_texture_lod"),customProgramCacheKey:i.customProgramCacheKey()}},getProgramCacheKey:function(e){const n=[];if(e.shaderID?n.push(e.shaderID):(n.push(e.fragmentShader),n.push(e.vertexShader)),void 0!==e.defines)for(const t in e.defines)n.push(t),n.push(e.defines[t]);if(!1===e.isRawShaderMaterial){for(let t=0;t<f.length;t++)n.push(e[f[t]]);n.push(t.outputEncoding),n.push(t.gammaFactor)}return n.push(e.customProgramCacheKey),n.join()},getUniforms:function(t){const e=d[t.type];let n;if(e){const t=Ga[e];n=Aa.clone(t.uniforms)}else n=t.uniforms;return n},acquireProgram:function(e,n){let r;for(let t=0,e=s.length;t<e;t++){const e=s[t];if(e.cacheKey===n){r=e,++r.usedTimes;break}}return void 0===r&&(r=new _c(t,n,e,i),s.push(r)),r},releaseProgram:function(t){if(0==--t.usedTimes){const e=s.indexOf(t);s[e]=s[s.length-1],s.pop(),t.destroy()}},programs:s}}function Tc(){let t=new WeakMap;return{get:function(e){let n=t.get(e);return void 0===n&&(n={},t.set(e,n)),n},remove:function(e){t.delete(e)},update:function(e,n,r){t.get(e)[n]=r},dispose:function(){t=new WeakMap}}}function Ec(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.program!==e.program?t.program.id-e.program.id:t.material.id!==e.material.id?t.material.id-e.material.id:t.z!==e.z?t.z-e.z:t.id-e.id}function Mc(t,e){return t.groupOrder!==e.groupOrder?t.groupOrder-e.groupOrder:t.renderOrder!==e.renderOrder?t.renderOrder-e.renderOrder:t.z!==e.z?e.z-t.z:t.id-e.id}function Cc(t){const e=[];let n=0;const r=[],i=[],o={id:-1};function s(r,i,s,a,u,c){let l=e[n];const h=t.get(s);return void 0===l?(l={id:r.id,object:r,geometry:i,material:s,program:h.program||o,groupOrder:a,renderOrder:r.renderOrder,z:u,group:c},e[n]=l):(l.id=r.id,l.object=r,l.geometry=i,l.material=s,l.program=h.program||o,l.groupOrder=a,l.renderOrder=r.renderOrder,l.z=u,l.group=c),n++,l}return{opaque:r,transparent:i,init:function(){n=0,r.length=0,i.length=0},push:function(t,e,n,o,a,u){const c=s(t,e,n,o,a,u);(!0===n.transparent?i:r).push(c)},unshift:function(t,e,n,o,a,u){const c=s(t,e,n,o,a,u);(!0===n.transparent?i:r).unshift(c)},finish:function(){for(let t=n,r=e.length;t<r;t++){const n=e[t];if(null===n.id)break;n.id=null,n.object=null,n.geometry=null,n.material=null,n.program=null,n.group=null}},sort:function(t,e){r.length>1&&r.sort(t||Ec),i.length>1&&i.sort(e||Mc)}}}function Ac(t){let e=new WeakMap;return{get:function(n,r){const i=e.get(n);let o;return void 0===i?(o=new Cc(t),e.set(n,new WeakMap),e.get(n).set(r,o)):(o=i.get(r),void 0===o&&(o=new Cc(t),i.set(r,o))),o},dispose:function(){e=new WeakMap}}}function Nc(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":n={direction:new ao,color:new Ns};break;case"SpotLight":n={position:new ao,direction:new ao,color:new Ns,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new ao,color:new Ns,distance:0,decay:0};break;case"HemisphereLight":n={direction:new ao,skyColor:new Ns,groundColor:new Ns};break;case"RectAreaLight":n={color:new Ns,position:new ao,halfWidth:new ao,halfHeight:new ao}}return t[e.id]=n,n}}}let Rc=0;function Ic(t,e){return(e.castShadow?1:0)-(t.castShadow?1:0)}function Dc(t,e){const n=new Nc,r=function(){const t={};return{get:function(e){if(void 0!==t[e.id])return t[e.id];let n;switch(e.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ki};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Ki,shadowCameraNear:1,shadowCameraFar:1e3}}return t[e.id]=n,n}}}(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let t=0;t<9;t++)i.probe.push(new ao);const o=new ao,s=new Po,a=new Po;return{setup:function(o){let s=0,a=0,u=0;for(let t=0;t<9;t++)i.probe[t].set(0,0,0);let c=0,l=0,h=0,p=0,d=0,f=0,m=0,g=0;o.sort(Ic);for(let t=0,e=o.length;t<e;t++){const e=o[t],y=e.color,v=e.intensity,x=e.distance,b=e.shadow&&e.shadow.map?e.shadow.map.texture:null;if(e.isAmbientLight)s+=y.r*v,a+=y.g*v,u+=y.b*v;else if(e.isLightProbe)for(let t=0;t<9;t++)i.probe[t].addScaledVector(e.sh.coefficients[t],v);else if(e.isDirectionalLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,i.directionalShadow[c]=n,i.directionalShadowMap[c]=b,i.directionalShadowMatrix[c]=e.shadow.matrix,f++}i.directional[c]=t,c++}else if(e.isSpotLight){const t=n.get(e);if(t.position.setFromMatrixPosition(e.matrixWorld),t.color.copy(y).multiplyScalar(v),t.distance=x,t.coneCos=Math.cos(e.angle),t.penumbraCos=Math.cos(e.angle*(1-e.penumbra)),t.decay=e.decay,e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,i.spotShadow[h]=n,i.spotShadowMap[h]=b,i.spotShadowMatrix[h]=e.shadow.matrix,g++}i.spot[h]=t,h++}else if(e.isRectAreaLight){const t=n.get(e);t.color.copy(y).multiplyScalar(v),t.halfWidth.set(.5*e.width,0,0),t.halfHeight.set(0,.5*e.height,0),i.rectArea[p]=t,p++}else if(e.isPointLight){const t=n.get(e);if(t.color.copy(e.color).multiplyScalar(e.intensity),t.distance=e.distance,t.decay=e.decay,e.castShadow){const t=e.shadow,n=r.get(e);n.shadowBias=t.bias,n.shadowNormalBias=t.normalBias,n.shadowRadius=t.radius,n.shadowMapSize=t.mapSize,n.shadowCameraNear=t.camera.near,n.shadowCameraFar=t.camera.far,i.pointShadow[l]=n,i.pointShadowMap[l]=b,i.pointShadowMatrix[l]=e.shadow.matrix,m++}i.point[l]=t,l++}else if(e.isHemisphereLight){const t=n.get(e);t.skyColor.copy(e.color).multiplyScalar(v),t.groundColor.copy(e.groundColor).multiplyScalar(v),i.hemi[d]=t,d++}}p>0&&(e.isWebGL2||!0===t.has("OES_texture_float_linear")?(i.rectAreaLTC1=Ha.LTC_FLOAT_1,i.rectAreaLTC2=Ha.LTC_FLOAT_2):!0===t.has("OES_texture_half_float_linear")?(i.rectAreaLTC1=Ha.LTC_HALF_1,i.rectAreaLTC2=Ha.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=s,i.ambient[1]=a,i.ambient[2]=u;const y=i.hash;y.directionalLength===c&&y.pointLength===l&&y.spotLength===h&&y.rectAreaLength===p&&y.hemiLength===d&&y.numDirectionalShadows===f&&y.numPointShadows===m&&y.numSpotShadows===g||(i.directional.length=c,i.spot.length=h,i.rectArea.length=p,i.point.length=l,i.hemi.length=d,i.directionalShadow.length=f,i.directionalShadowMap.length=f,i.pointShadow.length=m,i.pointShadowMap.length=m,i.spotShadow.length=g,i.spotShadowMap.length=g,i.directionalShadowMatrix.length=f,i.pointShadowMatrix.length=m,i.spotShadowMatrix.length=g,y.directionalLength=c,y.pointLength=l,y.spotLength=h,y.rectAreaLength=p,y.hemiLength=d,y.numDirectionalShadows=f,y.numPointShadows=m,y.numSpotShadows=g,i.version=Rc++)},setupView:function(t,e){let n=0,r=0,u=0,c=0,l=0;const h=e.matrixWorldInverse;for(let e=0,p=t.length;e<p;e++){const p=t[e];if(p.isDirectionalLight){const t=i.directional[n];t.direction.setFromMatrixPosition(p.matrixWorld),o.setFromMatrixPosition(p.target.matrixWorld),t.direction.sub(o),t.direction.transformDirection(h),n++}else if(p.isSpotLight){const t=i.spot[u];t.position.setFromMatrixPosition(p.matrixWorld),t.position.applyMatrix4(h),t.direction.setFromMatrixPosition(p.matrixWorld),o.setFromMatrixPosition(p.target.matrixWorld),t.direction.sub(o),t.direction.transformDirection(h),u++}else if(p.isRectAreaLight){const t=i.rectArea[c];t.position.setFromMatrixPosition(p.matrixWorld),t.position.applyMatrix4(h),a.identity(),s.copy(p.matrixWorld),s.premultiply(h),a.extractRotation(s),t.halfWidth.set(.5*p.width,0,0),t.halfHeight.set(0,.5*p.height,0),t.halfWidth.applyMatrix4(a),t.halfHeight.applyMatrix4(a),c++}else if(p.isPointLight){const t=i.point[r];t.position.setFromMatrixPosition(p.matrixWorld),t.position.applyMatrix4(h),r++}else if(p.isHemisphereLight){const t=i.hemi[l];t.direction.setFromMatrixPosition(p.matrixWorld),t.direction.transformDirection(h),t.direction.normalize(),l++}}},state:i}}function Oc(t,e){const n=new Dc(t,e),r=[],i=[];return{init:function(){r.length=0,i.length=0},state:{lightsArray:r,shadowsArray:i,lights:n},setupLights:function(){n.setup(r)},setupLightsView:function(t){n.setupView(r,t)},pushLight:function(t){r.push(t)},pushShadow:function(t){i.push(t)}}}function Lc(t,e){let n=new WeakMap;return{get:function(r,i=0){let o;return!1===n.has(r)?(o=new Oc(t,e),n.set(r,[]),n.get(r).push(o)):i>=n.get(r).length?(o=new Oc(t,e),n.get(r).push(o)):o=n.get(r)[i],o},dispose:function(){n=new WeakMap}}}function kc(t){Ds.call(this),this.type="MeshDepthMaterial",this.depthPacking=3200,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(t)}function Pc(t){Ds.call(this),this.type="MeshDistanceMaterial",this.referencePosition=new ao,this.nearDistance=1,this.farDistance=1e3,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(t)}function $c(t,e,n){let r=new Fa;const i=new Ki,o=new Ki,s=new ro,a=[],u=[],c={},l={0:1,1:0,2:2},h=new Na({defines:{SAMPLE_RATE:2/8,HALF_SAMPLE_RATE:1/8},uniforms:{shadow_pass:{value:null},resolution:{value:new Ki},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\n\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean * HALF_SAMPLE_RATE;\n\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),p=h.clone();p.defines.HORIZONTAL_PASS=1;const d=new ia;d.setAttribute("position",new Ps(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const f=new _a(d,h),m=this;function g(n,r){const i=e.update(f);h.uniforms.shadow_pass.value=n.map.texture,h.uniforms.resolution.value=n.mapSize,h.uniforms.radius.value=n.radius,t.setRenderTarget(n.mapPass),t.clear(),t.renderBufferDirect(r,null,i,h,f,null),p.uniforms.shadow_pass.value=n.mapPass.texture,p.uniforms.resolution.value=n.mapSize,p.uniforms.radius.value=n.radius,t.setRenderTarget(n.map),t.clear(),t.renderBufferDirect(r,null,i,p,f,null)}function y(t,e,n){const r=t<<0|e<<1|n<<2;let i=a[r];return void 0===i&&(i=new kc({depthPacking:3201,morphTargets:t,skinning:e}),a[r]=i),i}function v(t,e,n){const r=t<<0|e<<1|n<<2;let i=u[r];return void 0===i&&(i=new Pc({morphTargets:t,skinning:e}),u[r]=i),i}function x(e,n,r,i,o,s,a){let u=null,h=y,p=e.customDepthMaterial;if(!0===i.isPointLight&&(h=v,p=e.customDistanceMaterial),void 0===p){let t=!1;!0===r.morphTargets&&(t=n.morphAttributes&&n.morphAttributes.position&&n.morphAttributes.position.length>0);let i=!1;!0===e.isSkinnedMesh&&(!0===r.skinning?i=!0:console.warn("THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:",e)),u=h(t,i,!0===e.isInstancedMesh)}else u=p;if(t.localClippingEnabled&&!0===r.clipShadows&&0!==r.clippingPlanes.length){const t=u.uuid,e=r.uuid;let n=c[t];void 0===n&&(n={},c[t]=n);let i=n[e];void 0===i&&(i=u.clone(),n[e]=i),u=i}return u.visible=r.visible,u.wireframe=r.wireframe,u.side=3===a?null!==r.shadowSide?r.shadowSide:r.side:null!==r.shadowSide?r.shadowSide:l[r.side],u.clipShadows=r.clipShadows,u.clippingPlanes=r.clippingPlanes,u.clipIntersection=r.clipIntersection,u.wireframeLinewidth=r.wireframeLinewidth,u.linewidth=r.linewidth,!0===i.isPointLight&&!0===u.isMeshDistanceMaterial&&(u.referencePosition.setFromMatrixPosition(i.matrixWorld),u.nearDistance=o,u.farDistance=s),u}function b(n,i,o,s,a){if(!1===n.visible)return;if(n.layers.test(i.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===a)&&(!n.frustumCulled||r.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(o.matrixWorldInverse,n.matrixWorld);const r=e.update(n),i=n.material;if(Array.isArray(i)){const e=r.groups;for(let u=0,c=e.length;u<c;u++){const c=e[u],l=i[c.materialIndex];if(l&&l.visible){const e=x(n,r,l,s,o.near,o.far,a);t.renderBufferDirect(o,null,r,e,n,c)}}}else if(i.visible){const e=x(n,r,i,s,o.near,o.far,a);t.renderBufferDirect(o,null,r,e,n,null)}}const u=n.children;for(let t=0,e=u.length;t<e;t++)b(u[t],i,o,s,a)}this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1,this.render=function(e,a,u){if(!1===m.enabled)return;if(!1===m.autoUpdate&&!1===m.needsUpdate)return;if(0===e.length)return;const c=t.getRenderTarget(),l=t.getActiveCubeFace(),h=t.getActiveMipmapLevel(),p=t.state;p.setBlending(0),p.buffers.color.setClear(1,1,1,1),p.buffers.depth.setTest(!0),p.setScissorTest(!1);for(let c=0,l=e.length;c<l;c++){const l=e[c],h=l.shadow;if(void 0===h){console.warn("THREE.WebGLShadowMap:",l,"has no shadow.");continue}if(!1===h.autoUpdate&&!1===h.needsUpdate)continue;i.copy(h.mapSize);const d=h.getFrameExtents();if(i.multiply(d),o.copy(h.mapSize),(i.x>n||i.y>n)&&(i.x>n&&(o.x=Math.floor(n/d.x),i.x=o.x*d.x,h.mapSize.x=o.x),i.y>n&&(o.y=Math.floor(n/d.y),i.y=o.y*d.y,h.mapSize.y=o.y)),null===h.map&&!h.isPointLightShadow&&3===this.type){const t={minFilter:Ti,magFilter:Ti,format:Di};h.map=new io(i.x,i.y,t),h.map.texture.name=l.name+".shadowMap",h.mapPass=new io(i.x,i.y,t),h.camera.updateProjectionMatrix()}if(null===h.map){const t={minFilter:Si,magFilter:Si,format:Di};h.map=new io(i.x,i.y,t),h.map.texture.name=l.name+".shadowMap",h.camera.updateProjectionMatrix()}t.setRenderTarget(h.map),t.clear();const f=h.getViewportCount();for(let t=0;t<f;t++){const e=h.getViewport(t);s.set(o.x*e.x,o.y*e.y,o.x*e.z,o.y*e.w),p.viewport(s),h.updateMatrices(l,t),r=h.getFrustum(),b(a,u,h.camera,l,this.type)}h.isPointLightShadow||3!==this.type||g(h,u),h.needsUpdate=!1}m.needsUpdate=!1,t.setRenderTarget(c,l,h)}}function Bc(t,e,n){const r=n.isWebGL2,i=new function(){let e=!1;const n=new ro;let r=null;const i=new ro(0,0,0,0);return{setMask:function(n){r===n||e||(t.colorMask(n,n,n,n),r=n)},setLocked:function(t){e=t},setClear:function(e,r,o,s,a){!0===a&&(e*=s,r*=s,o*=s),n.set(e,r,o,s),!1===i.equals(n)&&(t.clearColor(e,r,o,s),i.copy(n))},reset:function(){e=!1,r=null,i.set(-1,0,0,0)}}},o=new function(){let e=!1,n=null,r=null,i=null;return{setTest:function(t){t?O(2929):L(2929)},setMask:function(r){n===r||e||(t.depthMask(r),n=r)},setFunc:function(e){if(r!==e){if(e)switch(e){case 0:t.depthFunc(512);break;case 1:t.depthFunc(519);break;case 2:t.depthFunc(513);break;case 3:t.depthFunc(515);break;case 4:t.depthFunc(514);break;case 5:t.depthFunc(518);break;case 6:t.depthFunc(516);break;case 7:t.depthFunc(517);break;default:t.depthFunc(515)}else t.depthFunc(515);r=e}},setLocked:function(t){e=t},setClear:function(e){i!==e&&(t.clearDepth(e),i=e)},reset:function(){e=!1,n=null,r=null,i=null}}},s=new function(){let e=!1,n=null,r=null,i=null,o=null,s=null,a=null,u=null,c=null;return{setTest:function(t){e||(t?O(2960):L(2960))},setMask:function(r){n===r||e||(t.stencilMask(r),n=r)},setFunc:function(e,n,s){r===e&&i===n&&o===s||(t.stencilFunc(e,n,s),r=e,i=n,o=s)},setOp:function(e,n,r){s===e&&a===n&&u===r||(t.stencilOp(e,n,r),s=e,a=n,u=r)},setLocked:function(t){e=t},setClear:function(e){c!==e&&(t.clearStencil(e),c=e)},reset:function(){e=!1,n=null,r=null,i=null,o=null,s=null,a=null,u=null,c=null}}};let a={},u=null,c=null,l=null,h=null,p=null,d=null,f=null,m=null,g=null,y=!1,v=null,x=null,b=null,w=null,_=null;const S=t.getParameter(35661);let T=!1,E=0;const M=t.getParameter(7938);-1!==M.indexOf("WebGL")?(E=parseFloat(/^WebGL (\d)/.exec(M)[1]),T=E>=1):-1!==M.indexOf("OpenGL ES")&&(E=parseFloat(/^OpenGL ES (\d)/.exec(M)[1]),T=E>=2);let C=null,A={};const N=new ro,R=new ro;function I(e,n,r){const i=new Uint8Array(4),o=t.createTexture();t.bindTexture(e,o),t.texParameteri(e,10241,9728),t.texParameteri(e,10240,9728);for(let e=0;e<r;e++)t.texImage2D(n+e,0,6408,1,1,0,6408,5121,i);return o}const D={};function O(e){!0!==a[e]&&(t.enable(e),a[e]=!0)}function L(e){!1!==a[e]&&(t.disable(e),a[e]=!1)}D[3553]=I(3553,3553,1),D[34067]=I(34067,34069,6),i.setClear(0,0,0,1),o.setClear(1),s.setClear(0),O(2929),o.setFunc(3),B(!1),F(1),O(2884),$(0);const k={[xi]:32774,101:32778,102:32779};if(r)k[103]=32775,k[104]=32776;else{const t=e.get("EXT_blend_minmax");null!==t&&(k[103]=t.MIN_EXT,k[104]=t.MAX_EXT)}const P={200:0,201:1,202:768,204:770,210:776,208:774,206:772,203:769,205:771,209:775,207:773};function $(e,n,r,i,o,s,a,u){if(0!==e){if(c||(O(3042),c=!0),5===e)o=o||n,s=s||r,a=a||i,n===h&&o===f||(t.blendEquationSeparate(k[n],k[o]),h=n,f=o),r===p&&i===d&&s===m&&a===g||(t.blendFuncSeparate(P[r],P[i],P[s],P[a]),p=r,d=i,m=s,g=a),l=e,y=null;else if(e!==l||u!==y){if(h===xi&&f===xi||(t.blendEquation(32774),h=xi,f=xi),u)switch(e){case 1:t.blendFuncSeparate(1,771,1,771);break;case 2:t.blendFunc(1,1);break;case 3:t.blendFuncSeparate(0,0,769,771);break;case 4:t.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}else switch(e){case 1:t.blendFuncSeparate(770,771,1,771);break;case 2:t.blendFunc(770,1);break;case 3:t.blendFunc(0,769);break;case 4:t.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",e)}p=null,d=null,m=null,g=null,l=e,y=u}}else c&&(L(3042),c=!1)}function B(e){v!==e&&(e?t.frontFace(2304):t.frontFace(2305),v=e)}function F(e){0!==e?(O(2884),e!==x&&(1===e?t.cullFace(1029):2===e?t.cullFace(1028):t.cullFace(1032))):L(2884),x=e}function U(e,n,r){e?(O(32823),w===n&&_===r||(t.polygonOffset(n,r),w=n,_=r)):L(32823)}function z(e){void 0===e&&(e=33984+S-1),C!==e&&(t.activeTexture(e),C=e)}return{buffers:{color:i,depth:o,stencil:s},enable:O,disable:L,useProgram:function(e){return u!==e&&(t.useProgram(e),u=e,!0)},setBlending:$,setMaterial:function(t,e){2===t.side?L(2884):O(2884);let n=1===t.side;e&&(n=!n),B(n),1===t.blending&&!1===t.transparent?$(0):$(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),o.setFunc(t.depthFunc),o.setTest(t.depthTest),o.setMask(t.depthWrite),i.setMask(t.colorWrite);const r=t.stencilWrite;s.setTest(r),r&&(s.setMask(t.stencilWriteMask),s.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),s.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),U(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits)},setFlipSided:B,setCullFace:F,setLineWidth:function(e){e!==b&&(T&&t.lineWidth(e),b=e)},setPolygonOffset:U,setScissorTest:function(t){t?O(3089):L(3089)},activeTexture:z,bindTexture:function(e,n){null===C&&z();let r=A[C];void 0===r&&(r={type:void 0,texture:void 0},A[C]=r),r.type===e&&r.texture===n||(t.bindTexture(e,n||D[e]),r.type=e,r.texture=n)},unbindTexture:function(){const e=A[C];void 0!==e&&void 0!==e.type&&(t.bindTexture(e.type,null),e.type=void 0,e.texture=void 0)},compressedTexImage2D:function(){try{t.compressedTexImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage2D:function(){try{t.texImage2D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},texImage3D:function(){try{t.texImage3D.apply(t,arguments)}catch(t){console.error("THREE.WebGLState:",t)}},scissor:function(e){!1===N.equals(e)&&(t.scissor(e.x,e.y,e.z,e.w),N.copy(e))},viewport:function(e){!1===R.equals(e)&&(t.viewport(e.x,e.y,e.z,e.w),R.copy(e))},reset:function(){a={},C=null,A={},u=null,c=null,l=null,h=null,p=null,d=null,f=null,m=null,g=null,y=!1,v=null,x=null,b=null,w=null,_=null,i.reset(),o.reset(),s.reset()}}}function Fc(t,e,n,r,i,o,s){const a=i.isWebGL2,u=i.maxTextures,c=i.maxCubemapSize,l=i.maxTextureSize,h=i.maxSamples,p=new WeakMap;let d,f=!1;try{f="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(t){}function m(t,e){return f?new OffscreenCanvas(t,e):document.createElementNS("http://www.w3.org/1999/xhtml","canvas")}function g(t,e,n,r){let i=1;if((t.width>r||t.height>r)&&(i=r/Math.max(t.width,t.height)),i<1||!0===e){if("undefined"!=typeof HTMLImageElement&&t instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&t instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&t instanceof ImageBitmap){const r=e?Yi.floorPowerOfTwo:Math.floor,o=r(i*t.width),s=r(i*t.height);void 0===d&&(d=m(o,s));const a=n?m(o,s):d;return a.width=o,a.height=s,a.getContext("2d").drawImage(t,0,0,o,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+t.width+"x"+t.height+") to ("+o+"x"+s+")."),a}return"data"in t&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+t.width+"x"+t.height+")."),t}return t}function y(t){return Yi.isPowerOfTwo(t.width)&&Yi.isPowerOfTwo(t.height)}function v(t,e){return t.generateMipmaps&&e&&t.minFilter!==Si&&t.minFilter!==Ti}function x(e,n,i,o){t.generateMipmap(e),r.get(n).__maxMipLevel=Math.log(Math.max(i,o))*Math.LOG2E}function b(n,r,i){if(!1===a)return r;if(null!==n){if(void 0!==t[n])return t[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let o=r;return 6403===r&&(5126===i&&(o=33326),5131===i&&(o=33325),5121===i&&(o=33321)),6407===r&&(5126===i&&(o=34837),5131===i&&(o=34843),5121===i&&(o=32849)),6408===r&&(5126===i&&(o=34836),5131===i&&(o=34842),5121===i&&(o=32856)),33325!==o&&33326!==o&&34842!==o&&34836!==o||e.get("EXT_color_buffer_float"),o}function w(t){return t===Si||1004===t||1005===t?9728:9729}function _(e){const n=e.target;n.removeEventListener("dispose",_),function(e){const n=r.get(e);void 0!==n.__webglInit&&(t.deleteTexture(n.__webglTexture),r.remove(e))}(n),n.isVideoTexture&&p.delete(n),s.memory.textures--}function S(e){const n=e.target;n.removeEventListener("dispose",S),function(e){const n=r.get(e),i=r.get(e.texture);if(e){if(void 0!==i.__webglTexture&&t.deleteTexture(i.__webglTexture),e.depthTexture&&e.depthTexture.dispose(),e.isWebGLCubeRenderTarget)for(let e=0;e<6;e++)t.deleteFramebuffer(n.__webglFramebuffer[e]),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer[e]);else t.deleteFramebuffer(n.__webglFramebuffer),n.__webglDepthbuffer&&t.deleteRenderbuffer(n.__webglDepthbuffer),n.__webglMultisampledFramebuffer&&t.deleteFramebuffer(n.__webglMultisampledFramebuffer),n.__webglColorRenderbuffer&&t.deleteRenderbuffer(n.__webglColorRenderbuffer),n.__webglDepthRenderbuffer&&t.deleteRenderbuffer(n.__webglDepthRenderbuffer);r.remove(e.texture),r.remove(e)}}(n),s.memory.textures--}let T=0;function E(t,e){const i=r.get(t);if(t.isVideoTexture&&function(t){const e=s.render.frame;p.get(t)!==e&&(p.set(t,e),t.update())}(t),t.version>0&&i.__version!==t.version){const n=t.image;if(void 0===n)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined");else{if(!1!==n.complete)return void I(i,t,e);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.activeTexture(33984+e),n.bindTexture(3553,i.__webglTexture)}function M(e,i){const s=r.get(e);e.version>0&&s.__version!==e.version?function(e,r,i){if(6!==r.image.length)return;R(e,r),n.activeTexture(33984+i),n.bindTexture(34067,e.__webglTexture),t.pixelStorei(37440,r.flipY);const s=r&&(r.isCompressedTexture||r.image[0].isCompressedTexture),u=r.image[0]&&r.image[0].isDataTexture,l=[];for(let t=0;t<6;t++)l[t]=s||u?u?r.image[t].image:r.image[t]:g(r.image[t],!1,!0,c);const h=l[0],p=y(h)||a,d=o.convert(r.format),f=o.convert(r.type),m=b(r.internalFormat,d,f);let w;if(N(34067,r,p),s){for(let t=0;t<6;t++){w=l[t].mipmaps;for(let e=0;e<w.length;e++){const i=w[e];r.format!==Di&&r.format!==Ii?null!==d?n.compressedTexImage2D(34069+t,e,m,i.width,i.height,0,i.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(34069+t,e,m,i.width,i.height,0,d,f,i.data)}}e.__maxMipLevel=w.length-1}else{w=r.mipmaps;for(let t=0;t<6;t++)if(u){n.texImage2D(34069+t,0,m,l[t].width,l[t].height,0,d,f,l[t].data);for(let e=0;e<w.length;e++){const r=w[e].image[t].image;n.texImage2D(34069+t,e+1,m,r.width,r.height,0,d,f,r.data)}}else{n.texImage2D(34069+t,0,m,d,f,l[t]);for(let e=0;e<w.length;e++){const r=w[e];n.texImage2D(34069+t,e+1,m,d,f,r.image[t])}}e.__maxMipLevel=w.length}v(r,p)&&x(34067,r,h.width,h.height),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}(s,e,i):(n.activeTexture(33984+i),n.bindTexture(34067,s.__webglTexture))}const C={[bi]:10497,[wi]:33071,[_i]:33648},A={[Si]:9728,1004:9984,1005:9986,[Ti]:9729,1007:9985,[Ei]:9987};function N(n,o,s){s?(t.texParameteri(n,10242,C[o.wrapS]),t.texParameteri(n,10243,C[o.wrapT]),32879!==n&&35866!==n||t.texParameteri(n,32882,C[o.wrapR]),t.texParameteri(n,10240,A[o.magFilter]),t.texParameteri(n,10241,A[o.minFilter])):(t.texParameteri(n,10242,33071),t.texParameteri(n,10243,33071),32879!==n&&35866!==n||t.texParameteri(n,32882,33071),o.wrapS===wi&&o.wrapT===wi||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),t.texParameteri(n,10240,w(o.magFilter)),t.texParameteri(n,10241,w(o.minFilter)),o.minFilter!==Si&&o.minFilter!==Ti&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter."));const u=e.get("EXT_texture_filter_anisotropic");if(u){if(o.type===Ai&&null===e.get("OES_texture_float_linear"))return;if(o.type===Ni&&null===(a||e.get("OES_texture_half_float_linear")))return;(o.anisotropy>1||r.get(o).__currentAnisotropy)&&(t.texParameterf(n,u.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(o.anisotropy,i.getMaxAnisotropy())),r.get(o).__currentAnisotropy=o.anisotropy)}}function R(e,n){void 0===e.__webglInit&&(e.__webglInit=!0,n.addEventListener("dispose",_),e.__webglTexture=t.createTexture(),s.memory.textures++)}function I(e,r,i){let s=3553;r.isDataTexture2DArray&&(s=35866),r.isDataTexture3D&&(s=32879),R(e,r),n.activeTexture(33984+i),n.bindTexture(s,e.__webglTexture),t.pixelStorei(37440,r.flipY),t.pixelStorei(37441,r.premultiplyAlpha),t.pixelStorei(3317,r.unpackAlignment);const u=function(t){return!a&&(t.wrapS!==wi||t.wrapT!==wi||t.minFilter!==Si&&t.minFilter!==Ti)}(r)&&!1===y(r.image),c=g(r.image,u,!1,l),h=y(c)||a,p=o.convert(r.format);let d,f=o.convert(r.type),m=b(r.internalFormat,p,f);N(s,r,h);const w=r.mipmaps;if(r.isDepthTexture)m=6402,a?m=r.type===Ai?36012:r.type===Ci?33190:r.type===Ri?35056:33189:r.type===Ai&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===Oi&&6402===m&&r.type!==Mi&&r.type!==Ci&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=Mi,f=o.convert(r.type)),r.format===Li&&6402===m&&(m=34041,r.type!==Ri&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=Ri,f=o.convert(r.type))),n.texImage2D(3553,0,m,c.width,c.height,0,p,f,null);else if(r.isDataTexture)if(w.length>0&&h){for(let t=0,e=w.length;t<e;t++)d=w[t],n.texImage2D(3553,t,m,d.width,d.height,0,p,f,d.data);r.generateMipmaps=!1,e.__maxMipLevel=w.length-1}else n.texImage2D(3553,0,m,c.width,c.height,0,p,f,c.data),e.__maxMipLevel=0;else if(r.isCompressedTexture){for(let t=0,e=w.length;t<e;t++)d=w[t],r.format!==Di&&r.format!==Ii?null!==p?n.compressedTexImage2D(3553,t,m,d.width,d.height,0,d.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(3553,t,m,d.width,d.height,0,p,f,d.data);e.__maxMipLevel=w.length-1}else if(r.isDataTexture2DArray)n.texImage3D(35866,0,m,c.width,c.height,c.depth,0,p,f,c.data),e.__maxMipLevel=0;else if(r.isDataTexture3D)n.texImage3D(32879,0,m,c.width,c.height,c.depth,0,p,f,c.data),e.__maxMipLevel=0;else if(w.length>0&&h){for(let t=0,e=w.length;t<e;t++)d=w[t],n.texImage2D(3553,t,m,p,f,d);r.generateMipmaps=!1,e.__maxMipLevel=w.length-1}else n.texImage2D(3553,0,m,p,f,c),e.__maxMipLevel=0;v(r,h)&&x(s,r,c.width,c.height),e.__version=r.version,r.onUpdate&&r.onUpdate(r)}function D(e,i,s,a){const u=o.convert(i.texture.format),c=o.convert(i.texture.type),l=b(i.texture.internalFormat,u,c);n.texImage2D(a,0,l,i.width,i.height,0,u,c,null),t.bindFramebuffer(36160,e),t.framebufferTexture2D(36160,s,a,r.get(i.texture).__webglTexture,0),t.bindFramebuffer(36160,null)}function O(e,n,r){if(t.bindRenderbuffer(36161,e),n.depthBuffer&&!n.stencilBuffer){let i=33189;if(r){const e=n.depthTexture;e&&e.isDepthTexture&&(e.type===Ai?i=36012:e.type===Ci&&(i=33190));const r=L(n);t.renderbufferStorageMultisample(36161,r,i,n.width,n.height)}else t.renderbufferStorage(36161,i,n.width,n.height);t.framebufferRenderbuffer(36160,36096,36161,e)}else if(n.depthBuffer&&n.stencilBuffer){if(r){const e=L(n);t.renderbufferStorageMultisample(36161,e,35056,n.width,n.height)}else t.renderbufferStorage(36161,34041,n.width,n.height);t.framebufferRenderbuffer(36160,33306,36161,e)}else{const e=o.convert(n.texture.format),i=o.convert(n.texture.type),s=b(n.texture.internalFormat,e,i);if(r){const e=L(n);t.renderbufferStorageMultisample(36161,e,s,n.width,n.height)}else t.renderbufferStorage(36161,s,n.width,n.height)}t.bindRenderbuffer(36161,null)}function L(t){return a&&t.isWebGLMultisampleRenderTarget?Math.min(h,t.samples):0}let k=!1,P=!1;this.allocateTextureUnit=function(){const t=T;return t>=u&&console.warn("THREE.WebGLTextures: Trying to use "+t+" texture units while this GPU supports only "+u),T+=1,t},this.resetTextureUnits=function(){T=0},this.setTexture2D=E,this.setTexture2DArray=function(t,e){const i=r.get(t);t.version>0&&i.__version!==t.version?I(i,t,e):(n.activeTexture(33984+e),n.bindTexture(35866,i.__webglTexture))},this.setTexture3D=function(t,e){const i=r.get(t);t.version>0&&i.__version!==t.version?I(i,t,e):(n.activeTexture(33984+e),n.bindTexture(32879,i.__webglTexture))},this.setTextureCube=M,this.setupRenderTarget=function(e){const i=r.get(e),u=r.get(e.texture);e.addEventListener("dispose",S),u.__webglTexture=t.createTexture(),s.memory.textures++;const c=!0===e.isWebGLCubeRenderTarget,l=!0===e.isWebGLMultisampleRenderTarget,h=y(e)||a;if(!a||e.texture.format!==Ii||e.texture.type!==Ai&&e.texture.type!==Ni||(e.texture.format=Di,console.warn("THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.")),c){i.__webglFramebuffer=[];for(let e=0;e<6;e++)i.__webglFramebuffer[e]=t.createFramebuffer()}else if(i.__webglFramebuffer=t.createFramebuffer(),l)if(a){i.__webglMultisampledFramebuffer=t.createFramebuffer(),i.__webglColorRenderbuffer=t.createRenderbuffer(),t.bindRenderbuffer(36161,i.__webglColorRenderbuffer);const n=o.convert(e.texture.format),r=o.convert(e.texture.type),s=b(e.texture.internalFormat,n,r),a=L(e);t.renderbufferStorageMultisample(36161,a,s,e.width,e.height),t.bindFramebuffer(36160,i.__webglMultisampledFramebuffer),t.framebufferRenderbuffer(36160,36064,36161,i.__webglColorRenderbuffer),t.bindRenderbuffer(36161,null),e.depthBuffer&&(i.__webglDepthRenderbuffer=t.createRenderbuffer(),O(i.__webglDepthRenderbuffer,e,!0)),t.bindFramebuffer(36160,null)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.");if(c){n.bindTexture(34067,u.__webglTexture),N(34067,e.texture,h);for(let t=0;t<6;t++)D(i.__webglFramebuffer[t],e,36064,34069+t);v(e.texture,h)&&x(34067,e.texture,e.width,e.height),n.bindTexture(34067,null)}else n.bindTexture(3553,u.__webglTexture),N(3553,e.texture,h),D(i.__webglFramebuffer,e,36064,3553),v(e.texture,h)&&x(3553,e.texture,e.width,e.height),n.bindTexture(3553,null);e.depthBuffer&&function(e){const n=r.get(e),i=!0===e.isWebGLCubeRenderTarget;if(e.depthTexture){if(i)throw new Error("target.depthTexture not supported in Cube render targets");!function(e,n){if(n&&n.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,e),!n.depthTexture||!n.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");r.get(n.depthTexture).__webglTexture&&n.depthTexture.image.width===n.width&&n.depthTexture.image.height===n.height||(n.depthTexture.image.width=n.width,n.depthTexture.image.height=n.height,n.depthTexture.needsUpdate=!0),E(n.depthTexture,0);const i=r.get(n.depthTexture).__webglTexture;if(n.depthTexture.format===Oi)t.framebufferTexture2D(36160,36096,3553,i,0);else{if(n.depthTexture.format!==Li)throw new Error("Unknown depthTexture format");t.framebufferTexture2D(36160,33306,3553,i,0)}}(n.__webglFramebuffer,e)}else if(i){n.__webglDepthbuffer=[];for(let r=0;r<6;r++)t.bindFramebuffer(36160,n.__webglFramebuffer[r]),n.__webglDepthbuffer[r]=t.createRenderbuffer(),O(n.__webglDepthbuffer[r],e,!1)}else t.bindFramebuffer(36160,n.__webglFramebuffer),n.__webglDepthbuffer=t.createRenderbuffer(),O(n.__webglDepthbuffer,e,!1);t.bindFramebuffer(36160,null)}(e)},this.updateRenderTargetMipmap=function(t){const e=t.texture;if(v(e,y(t)||a)){const i=t.isWebGLCubeRenderTarget?34067:3553,o=r.get(e).__webglTexture;n.bindTexture(i,o),x(i,e,t.width,t.height),n.bindTexture(i,null)}},this.updateMultisampleRenderTarget=function(e){if(e.isWebGLMultisampleRenderTarget)if(a){const n=r.get(e);t.bindFramebuffer(36008,n.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,n.__webglFramebuffer);const i=e.width,o=e.height;let s=16384;e.depthBuffer&&(s|=256),e.stencilBuffer&&(s|=1024),t.blitFramebuffer(0,0,i,o,0,0,i,o,s,9728),t.bindFramebuffer(36160,n.__webglMultisampledFramebuffer)}else console.warn("THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.")},this.safeSetTexture2D=function(t,e){t&&t.isWebGLRenderTarget&&(!1===k&&(console.warn("THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead."),k=!0),t=t.texture),E(t,e)},this.safeSetTextureCube=function(t,e){t&&t.isWebGLCubeRenderTarget&&(!1===P&&(console.warn("THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead."),P=!0),t=t.texture),M(t,e)}}function Uc(t,e,n){const r=n.isWebGL2;return{convert:function(t){let n;if(1009===t)return 5121;if(1017===t)return 32819;if(1018===t)return 32820;if(1019===t)return 33635;if(1010===t)return 5120;if(1011===t)return 5122;if(t===Mi)return 5123;if(1013===t)return 5124;if(t===Ci)return 5125;if(t===Ai)return 5126;if(t===Ni)return r?5131:(n=e.get("OES_texture_half_float"),null!==n?n.HALF_FLOAT_OES:null);if(1021===t)return 6406;if(t===Ii)return 6407;if(t===Di)return 6408;if(1024===t)return 6409;if(1025===t)return 6410;if(t===Oi)return 6402;if(t===Li)return 34041;if(1028===t)return 6403;if(1029===t)return 36244;if(1030===t)return 33319;if(1031===t)return 33320;if(1032===t)return 36248;if(1033===t)return 36249;if(33776===t||33777===t||33778===t||33779===t){if(n=e.get("WEBGL_compressed_texture_s3tc"),null===n)return null;if(33776===t)return n.COMPRESSED_RGB_S3TC_DXT1_EXT;if(33777===t)return n.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(33778===t)return n.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(33779===t)return n.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===t||35841===t||35842===t||35843===t){if(n=e.get("WEBGL_compressed_texture_pvrtc"),null===n)return null;if(35840===t)return n.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===t)return n.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===t)return n.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===t)return n.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===t)return n=e.get("WEBGL_compressed_texture_etc1"),null!==n?n.COMPRESSED_RGB_ETC1_WEBGL:null;if((37492===t||37496===t)&&(n=e.get("WEBGL_compressed_texture_etc"),null!==n)){if(37492===t)return n.COMPRESSED_RGB8_ETC2;if(37496===t)return n.COMPRESSED_RGBA8_ETC2_EAC}return 37808===t||37809===t||37810===t||37811===t||37812===t||37813===t||37814===t||37815===t||37816===t||37817===t||37818===t||37819===t||37820===t||37821===t||37840===t||37841===t||37842===t||37843===t||37844===t||37845===t||37846===t||37847===t||37848===t||37849===t||37850===t||37851===t||37852===t||37853===t?(n=e.get("WEBGL_compressed_texture_astc"),null!==n?t:null):36492===t?(n=e.get("EXT_texture_compression_bptc"),null!==n?t:null):t===Ri?r?34042:(n=e.get("WEBGL_depth_texture"),null!==n?n.UNSIGNED_INT_24_8_WEBGL:null):void 0}}}function zc(t=[]){Ia.call(this),this.cameras=t}function Vc(){as.call(this),this.type="Group"}function Wc(){this._targetRay=null,this._grip=null,this._hand=null}function Hc(t,e){const n=this;let r=null,i=1,o=null,s="local-floor",a=null;const u=[],c=new Map,l=new Ia;l.layers.enable(1),l.viewport=new ro;const h=new Ia;h.layers.enable(2),h.viewport=new ro;const p=[l,h],d=new zc;d.layers.enable(1),d.layers.enable(2);let f=null,m=null;function g(t){const e=c.get(t.inputSource);e&&e.dispatchEvent({type:t.type,data:t.inputSource})}function y(){c.forEach((function(t,e){t.disconnect(e)})),c.clear(),t.setFramebuffer(null),t.setRenderTarget(t.getRenderTarget()),T.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function v(t){o=t,T.setContext(r),T.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}function x(t){const e=r.inputSources;for(let t=0;t<u.length;t++)c.set(e[t],u[t]);for(let e=0;e<t.removed.length;e++){const n=t.removed[e],r=c.get(n);r&&(r.dispatchEvent({type:"disconnected",data:n}),c.delete(n))}for(let e=0;e<t.added.length;e++){const n=t.added[e],r=c.get(n);r&&r.dispatchEvent({type:"connected",data:n})}}this.enabled=!1,this.isPresenting=!1,this.getController=function(t){let e=u[t];return void 0===e&&(e=new Wc,u[t]=e),e.getTargetRaySpace()},this.getControllerGrip=function(t){let e=u[t];return void 0===e&&(e=new Wc,u[t]=e),e.getGripSpace()},this.getHand=function(t){let e=u[t];return void 0===e&&(e=new Wc,u[t]=e),e.getHandSpace()},this.setFramebufferScaleFactor=function(t){i=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(t){s=t,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getSession=function(){return r},this.setSession=function(t){if(r=t,null!==r){r.addEventListener("select",g),r.addEventListener("selectstart",g),r.addEventListener("selectend",g),r.addEventListener("squeeze",g),r.addEventListener("squeezestart",g),r.addEventListener("squeezeend",g),r.addEventListener("end",y);const t=e.getContextAttributes();!0!==t.xrCompatible&&e.makeXRCompatible();const n={antialias:t.antialias,alpha:t.alpha,depth:t.depth,stencil:t.stencil,framebufferScaleFactor:i},o=new XRWebGLLayer(r,e,n);r.updateRenderState({baseLayer:o}),r.requestReferenceSpace(s).then(v),r.addEventListener("inputsourceschange",x)}};const b=new ao,w=new ao;function _(t,e){null===e?t.matrixWorld.copy(t.matrix):t.matrixWorld.multiplyMatrices(e.matrixWorld,t.matrix),t.matrixWorldInverse.copy(t.matrixWorld).invert()}this.getCamera=function(t){d.near=h.near=l.near=t.near,d.far=h.far=l.far=t.far,f===d.near&&m===d.far||(r.updateRenderState({depthNear:d.near,depthFar:d.far}),f=d.near,m=d.far);const e=t.parent,n=d.cameras;_(d,e);for(let t=0;t<n.length;t++)_(n[t],e);t.matrixWorld.copy(d.matrixWorld);const i=t.children;for(let t=0,e=i.length;t<e;t++)i[t].updateMatrixWorld(!0);return 2===n.length?function(t,e,n){b.setFromMatrixPosition(e.matrixWorld),w.setFromMatrixPosition(n.matrixWorld);const r=b.distanceTo(w),i=e.projectionMatrix.elements,o=n.projectionMatrix.elements,s=i[14]/(i[10]-1),a=i[14]/(i[10]+1),u=(i[9]+1)/i[5],c=(i[9]-1)/i[5],l=(i[8]-1)/i[0],h=(o[8]+1)/o[0],p=s*l,d=s*h,f=r/(-l+h),m=f*-l;e.matrixWorld.decompose(t.position,t.quaternion,t.scale),t.translateX(m),t.translateZ(f),t.matrixWorld.compose(t.position,t.quaternion,t.scale),t.matrixWorldInverse.copy(t.matrixWorld).invert();const g=s+f,y=a+f,v=p-m,x=d+(r-m),_=u*a/y*g,S=c*a/y*g;t.projectionMatrix.makePerspective(v,x,_,S,g,y)}(d,l,h):d.projectionMatrix.copy(l.projectionMatrix),d};let S=null;const T=new Ua;T.setAnimationLoop((function(e,n){if(a=n.getViewerPose(o),null!==a){const e=a.views,n=r.renderState.baseLayer;t.setFramebuffer(n.framebuffer);let i=!1;e.length!==d.cameras.length&&(d.cameras.length=0,i=!0);for(let t=0;t<e.length;t++){const r=e[t],o=n.getViewport(r),s=p[t];s.matrix.fromArray(r.transform.matrix),s.projectionMatrix.fromArray(r.projectionMatrix),s.viewport.set(o.x,o.y,o.width,o.height),0===t&&d.matrix.copy(s.matrix),!0===i&&d.cameras.push(s)}}const i=r.inputSources;for(let t=0;t<u.length;t++){const e=u[t],r=i[t];e.update(r,n,o)}S&&S(e,n)})),this.setAnimationLoop=function(t){S=t},this.dispose=function(){}}function Gc(t){function e(e,n){e.opacity.value=n.opacity,n.color&&e.diffuse.value.copy(n.color),n.emissive&&e.emissive.value.copy(n.emissive).multiplyScalar(n.emissiveIntensity),n.map&&(e.map.value=n.map),n.alphaMap&&(e.alphaMap.value=n.alphaMap),n.specularMap&&(e.specularMap.value=n.specularMap);const r=t.get(n).envMap;if(r){e.envMap.value=r,e.flipEnvMap.value=r.isCubeTexture&&r._needsFlipEnvMap?-1:1,e.reflectivity.value=n.reflectivity,e.refractionRatio.value=n.refractionRatio;const i=t.get(r).__maxMipLevel;void 0!==i&&(e.maxMipLevel.value=i)}let i,o;n.lightMap&&(e.lightMap.value=n.lightMap,e.lightMapIntensity.value=n.lightMapIntensity),n.aoMap&&(e.aoMap.value=n.aoMap,e.aoMapIntensity.value=n.aoMapIntensity),n.map?i=n.map:n.specularMap?i=n.specularMap:n.displacementMap?i=n.displacementMap:n.normalMap?i=n.normalMap:n.bumpMap?i=n.bumpMap:n.roughnessMap?i=n.roughnessMap:n.metalnessMap?i=n.metalnessMap:n.alphaMap?i=n.alphaMap:n.emissiveMap?i=n.emissiveMap:n.clearcoatMap?i=n.clearcoatMap:n.clearcoatNormalMap?i=n.clearcoatNormalMap:n.clearcoatRoughnessMap&&(i=n.clearcoatRoughnessMap),void 0!==i&&(i.isWebGLRenderTarget&&(i=i.texture),!0===i.matrixAutoUpdate&&i.updateMatrix(),e.uvTransform.value.copy(i.matrix)),n.aoMap?o=n.aoMap:n.lightMap&&(o=n.lightMap),void 0!==o&&(o.isWebGLRenderTarget&&(o=o.texture),!0===o.matrixAutoUpdate&&o.updateMatrix(),e.uv2Transform.value.copy(o.matrix))}function n(e,n){e.roughness.value=n.roughness,e.metalness.value=n.metalness,n.roughnessMap&&(e.roughnessMap.value=n.roughnessMap),n.metalnessMap&&(e.metalnessMap.value=n.metalnessMap),n.emissiveMap&&(e.emissiveMap.value=n.emissiveMap),n.bumpMap&&(e.bumpMap.value=n.bumpMap,e.bumpScale.value=n.bumpScale,1===n.side&&(e.bumpScale.value*=-1)),n.normalMap&&(e.normalMap.value=n.normalMap,e.normalScale.value.copy(n.normalScale),1===n.side&&e.normalScale.value.negate()),n.displacementMap&&(e.displacementMap.value=n.displacementMap,e.displacementScale.value=n.displacementScale,e.displacementBias.value=n.displacementBias),t.get(n).envMap&&(e.envMapIntensity.value=n.envMapIntensity)}return{refreshFogUniforms:function(t,e){t.fogColor.value.copy(e.color),e.isFog?(t.fogNear.value=e.near,t.fogFar.value=e.far):e.isFogExp2&&(t.fogDensity.value=e.density)},refreshMaterialUniforms:function(t,r,i,o){r.isMeshBasicMaterial?e(t,r):r.isMeshLambertMaterial?(e(t,r),function(t,e){e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap)}(t,r)):r.isMeshToonMaterial?(e(t,r),function(t,e){e.gradientMap&&(t.gradientMap.value=e.gradientMap),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshPhongMaterial?(e(t,r),function(t,e){t.specular.value.copy(e.specular),t.shininess.value=Math.max(e.shininess,1e-4),e.emissiveMap&&(t.emissiveMap.value=e.emissiveMap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshStandardMaterial?(e(t,r),r.isMeshPhysicalMaterial?function(t,e){n(t,e),t.reflectivity.value=e.reflectivity,t.clearcoat.value=e.clearcoat,t.clearcoatRoughness.value=e.clearcoatRoughness,e.sheen&&t.sheen.value.copy(e.sheen),e.clearcoatMap&&(t.clearcoatMap.value=e.clearcoatMap),e.clearcoatRoughnessMap&&(t.clearcoatRoughnessMap.value=e.clearcoatRoughnessMap),e.clearcoatNormalMap&&(t.clearcoatNormalScale.value.copy(e.clearcoatNormalScale),t.clearcoatNormalMap.value=e.clearcoatNormalMap,1===e.side&&t.clearcoatNormalScale.value.negate()),t.transmission.value=e.transmission,e.transmissionMap&&(t.transmissionMap.value=e.transmissionMap)}(t,r):n(t,r)):r.isMeshMatcapMaterial?(e(t,r),function(t,e){e.matcap&&(t.matcap.value=e.matcap),e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshDepthMaterial?(e(t,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isMeshDistanceMaterial?(e(t,r),function(t,e){e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias),t.referencePosition.value.copy(e.referencePosition),t.nearDistance.value=e.nearDistance,t.farDistance.value=e.farDistance}(t,r)):r.isMeshNormalMaterial?(e(t,r),function(t,e){e.bumpMap&&(t.bumpMap.value=e.bumpMap,t.bumpScale.value=e.bumpScale,1===e.side&&(t.bumpScale.value*=-1)),e.normalMap&&(t.normalMap.value=e.normalMap,t.normalScale.value.copy(e.normalScale),1===e.side&&t.normalScale.value.negate()),e.displacementMap&&(t.displacementMap.value=e.displacementMap,t.displacementScale.value=e.displacementScale,t.displacementBias.value=e.displacementBias)}(t,r)):r.isLineBasicMaterial?(function(t,e){t.diffuse.value.copy(e.color),t.opacity.value=e.opacity}(t,r),r.isLineDashedMaterial&&function(t,e){t.dashSize.value=e.dashSize,t.totalSize.value=e.dashSize+e.gapSize,t.scale.value=e.scale}(t,r)):r.isPointsMaterial?function(t,e,n,r){let i;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.size.value=e.size*n,t.scale.value=.5*r,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?i=e.map:e.alphaMap&&(i=e.alphaMap),void 0!==i&&(!0===i.matrixAutoUpdate&&i.updateMatrix(),t.uvTransform.value.copy(i.matrix))}(t,r,i,o):r.isSpriteMaterial?function(t,e){let n;t.diffuse.value.copy(e.color),t.opacity.value=e.opacity,t.rotation.value=e.rotation,e.map&&(t.map.value=e.map),e.alphaMap&&(t.alphaMap.value=e.alphaMap),e.map?n=e.map:e.alphaMap&&(n=e.alphaMap),void 0!==n&&(!0===n.matrixAutoUpdate&&n.updateMatrix(),t.uvTransform.value.copy(n.matrix))}(t,r):r.isShadowMaterial?(t.color.value.copy(r.color),t.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function jc(t){const e=void 0!==(t=t||{}).canvas?t.canvas:function(){const t=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");return t.style.display="block",t}(),n=void 0!==t.context?t.context:null,r=void 0!==t.alpha&&t.alpha,i=void 0===t.depth||t.depth,o=void 0===t.stencil||t.stencil,s=void 0!==t.antialias&&t.antialias,a=void 0===t.premultipliedAlpha||t.premultipliedAlpha,u=void 0!==t.preserveDrawingBuffer&&t.preserveDrawingBuffer,c=void 0!==t.powerPreference?t.powerPreference:"default",l=void 0!==t.failIfMajorPerformanceCaveat&&t.failIfMajorPerformanceCaveat;let h=null,p=null;const d=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.outputEncoding=zi,this.physicallyCorrectLights=!1,this.toneMapping=0,this.toneMappingExposure=1,this.maxMorphTargets=8,this.maxMorphNormals=4;const f=this;let m=!1,g=null,y=0,v=0,x=null,b=null,w=-1,_=null;const S=new ro,T=new ro;let E=null,M=e.width,C=e.height,A=1,N=null,R=null;const I=new ro(0,0,M,C),D=new ro(0,0,M,C);let O=!1;const L=new Fa;let k=!1,P=!1;const $=new Po,B=new ao,F={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function U(){return null===x?A:1}let z,V,W,H,G,j,X,q,Y,K,Z,J,Q,tt,et,nt,rt,it,ot,st,at,ut=n;function ct(t,n){for(let r=0;r<t.length;r++){const i=t[r],o=e.getContext(i,n);if(null!==o)return o}return null}try{const t={alpha:r,depth:i,stencil:o,antialias:s,premultipliedAlpha:a,preserveDrawingBuffer:u,powerPreference:c,failIfMajorPerformanceCaveat:l};if(e.addEventListener("webglcontextlost",dt,!1),e.addEventListener("webglcontextrestored",ft,!1),null===ut){const e=["webgl2","webgl","experimental-webgl"];if(!0===f.isWebGL1Renderer&&e.shift(),ut=ct(e,t),null===ut)throw ct(e)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===ut.getShaderPrecisionFormat&&(ut.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(t){throw console.error("THREE.WebGLRenderer: "+t.message),t}function lt(){z=new Ja(ut),V=new Ya(ut,z,t),!1===V.isWebGL2&&(z.get("WEBGL_depth_texture"),z.get("OES_texture_float"),z.get("OES_texture_half_float"),z.get("OES_texture_half_float_linear"),z.get("OES_standard_derivatives"),z.get("OES_element_index_uint"),z.get("OES_vertex_array_object"),z.get("ANGLE_instanced_arrays")),z.get("OES_texture_float_linear"),st=new Uc(ut,z,V),W=new Bc(ut,z,V),W.scissor(T.copy(D).multiplyScalar(A).floor()),W.viewport(S.copy(I).multiplyScalar(A).floor()),H=new eu(ut),G=new Tc,j=new Fc(ut,z,W,G,V,st,H),X=new Za(f),q=new za(ut,V),at=new Xa(ut,z,q,V),Y=new Qa(ut,q,H,at),K=new ou(ut,Y,q,H),rt=new iu(ut),et=new Ka(G),Z=new Sc(f,X,z,V,at,et),J=new Gc(G),Q=new Ac(G),tt=new Lc(z,V),nt=new ja(f,X,W,K,a),it=new qa(ut,z,H,V),ot=new tu(ut,z,H,V),H.programs=Z.programs,f.capabilities=V,f.extensions=z,f.properties=G,f.renderLists=Q,f.state=W,f.info=H}lt();const ht=new Hc(f,ut);this.xr=ht;const pt=new $c(f,K,V.maxTextureSize);function dt(t){t.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),m=!0}function ft(){console.log("THREE.WebGLRenderer: Context Restored."),m=!1,lt()}function mt(t){const e=t.target;e.removeEventListener("dispose",mt),function(t){gt(t),G.remove(t)}(e)}function gt(t){const e=G.get(t).program;void 0!==e&&Z.releaseProgram(e)}this.shadowMap=pt,this.getContext=function(){return ut},this.getContextAttributes=function(){return ut.getContextAttributes()},this.forceContextLoss=function(){const t=z.get("WEBGL_lose_context");t&&t.loseContext()},this.forceContextRestore=function(){const t=z.get("WEBGL_lose_context");t&&t.restoreContext()},this.getPixelRatio=function(){return A},this.setPixelRatio=function(t){void 0!==t&&(A=t,this.setSize(M,C,!1))},this.getSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getsize() now requires a Vector2 as an argument"),t=new Ki),t.set(M,C)},this.setSize=function(t,n,r){ht.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(M=t,C=n,e.width=Math.floor(t*A),e.height=Math.floor(n*A),!1!==r&&(e.style.width=t+"px",e.style.height=n+"px"),this.setViewport(0,0,t,n))},this.getDrawingBufferSize=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument"),t=new Ki),t.set(M*A,C*A).floor()},this.setDrawingBufferSize=function(t,n,r){M=t,C=n,A=r,e.width=Math.floor(t*r),e.height=Math.floor(n*r),this.setViewport(0,0,t,n)},this.getCurrentViewport=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument"),t=new ro),t.copy(S)},this.getViewport=function(t){return t.copy(I)},this.setViewport=function(t,e,n,r){t.isVector4?I.set(t.x,t.y,t.z,t.w):I.set(t,e,n,r),W.viewport(S.copy(I).multiplyScalar(A).floor())},this.getScissor=function(t){return t.copy(D)},this.setScissor=function(t,e,n,r){t.isVector4?D.set(t.x,t.y,t.z,t.w):D.set(t,e,n,r),W.scissor(T.copy(D).multiplyScalar(A).floor())},this.getScissorTest=function(){return O},this.setScissorTest=function(t){W.setScissorTest(O=t)},this.setOpaqueSort=function(t){N=t},this.setTransparentSort=function(t){R=t},this.getClearColor=function(t){return void 0===t&&(console.warn("WebGLRenderer: .getClearColor() now requires a Color as an argument"),t=new Ns),t.copy(nt.getClearColor())},this.setClearColor=function(){nt.setClearColor.apply(nt,arguments)},this.getClearAlpha=function(){return nt.getClearAlpha()},this.setClearAlpha=function(){nt.setClearAlpha.apply(nt,arguments)},this.clear=function(t,e,n){let r=0;(void 0===t||t)&&(r|=16384),(void 0===e||e)&&(r|=256),(void 0===n||n)&&(r|=1024),ut.clear(r)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",dt,!1),e.removeEventListener("webglcontextrestored",ft,!1),Q.dispose(),tt.dispose(),G.dispose(),X.dispose(),K.dispose(),at.dispose(),ht.dispose(),vt.stop()},this.renderBufferImmediate=function(t,e){at.initAttributes();const n=G.get(t);t.hasPositions&&!n.position&&(n.position=ut.createBuffer()),t.hasNormals&&!n.normal&&(n.normal=ut.createBuffer()),t.hasUvs&&!n.uv&&(n.uv=ut.createBuffer()),t.hasColors&&!n.color&&(n.color=ut.createBuffer());const r=e.getAttributes();t.hasPositions&&(ut.bindBuffer(34962,n.position),ut.bufferData(34962,t.positionArray,35048),at.enableAttribute(r.position),ut.vertexAttribPointer(r.position,3,5126,!1,0,0)),t.hasNormals&&(ut.bindBuffer(34962,n.normal),ut.bufferData(34962,t.normalArray,35048),at.enableAttribute(r.normal),ut.vertexAttribPointer(r.normal,3,5126,!1,0,0)),t.hasUvs&&(ut.bindBuffer(34962,n.uv),ut.bufferData(34962,t.uvArray,35048),at.enableAttribute(r.uv),ut.vertexAttribPointer(r.uv,2,5126,!1,0,0)),t.hasColors&&(ut.bindBuffer(34962,n.color),ut.bufferData(34962,t.colorArray,35048),at.enableAttribute(r.color),ut.vertexAttribPointer(r.color,3,5126,!1,0,0)),at.disableUnusedAttributes(),ut.drawArrays(4,0,t.count),t.count=0},this.renderBufferDirect=function(t,e,n,r,i,o){null===e&&(e=F);const s=i.isMesh&&i.matrixWorld.determinant()<0,a=St(t,e,r,i);W.setMaterial(r,s);let u=n.index;const c=n.attributes.position;if(null===u){if(void 0===c||0===c.count)return}else if(0===u.count)return;let l,h=1;!0===r.wireframe&&(u=Y.getWireframeAttribute(n),h=2),(r.morphTargets||r.morphNormals)&&rt.update(i,n,r,a),at.setup(i,r,a,n,u);let p=it;null!==u&&(l=q.get(u),p=ot,p.setIndex(l));const d=null!==u?u.count:c.count,f=n.drawRange.start*h,m=n.drawRange.count*h,g=null!==o?o.start*h:0,y=null!==o?o.count*h:1/0,v=Math.max(f,g),x=Math.min(d,f+m,g+y)-1,b=Math.max(0,x-v+1);if(0!==b){if(i.isMesh)!0===r.wireframe?(W.setLineWidth(r.wireframeLinewidth*U()),p.setMode(1)):p.setMode(4);else if(i.isLine){let t=r.linewidth;void 0===t&&(t=1),W.setLineWidth(t*U()),i.isLineSegments?p.setMode(1):i.isLineLoop?p.setMode(2):p.setMode(3)}else i.isPoints?p.setMode(0):i.isSprite&&p.setMode(4);if(i.isInstancedMesh)p.renderInstances(v,b,i.count);else if(n.isInstancedBufferGeometry){const t=Math.min(n.instanceCount,n._maxInstanceCount);p.renderInstances(v,b,t)}else p.render(v,b)}},this.compile=function(t,e){p=tt.get(t),p.init(),t.traverseVisible((function(t){t.isLight&&t.layers.test(e.layers)&&(p.pushLight(t),t.castShadow&&p.pushShadow(t))})),p.setupLights();const n=new WeakMap;t.traverse((function(e){const r=e.material;if(r)if(Array.isArray(r))for(let i=0;i<r.length;i++){const o=r[i];!1===n.has(o)&&(_t(o,t,e),n.set(o))}else!1===n.has(r)&&(_t(r,t,e),n.set(r))}))};let yt=null;const vt=new Ua;function xt(t,e,n,r){if(!1===t.visible)return;if(t.layers.test(e.layers))if(t.isGroup)n=t.renderOrder;else if(t.isLOD)!0===t.autoUpdate&&t.update(e);else if(t.isLight)p.pushLight(t),t.castShadow&&p.pushShadow(t);else if(t.isSprite){if(!t.frustumCulled||L.intersectsSprite(t)){r&&B.setFromMatrixPosition(t.matrixWorld).applyMatrix4($);const e=K.update(t),i=t.material;i.visible&&h.push(t,e,i,n,B.z,null)}}else if(t.isImmediateRenderObject)r&&B.setFromMatrixPosition(t.matrixWorld).applyMatrix4($),h.push(t,null,t.material,n,B.z,null);else if((t.isMesh||t.isLine||t.isPoints)&&(t.isSkinnedMesh&&t.skeleton.frame!==H.render.frame&&(t.skeleton.update(),t.skeleton.frame=H.render.frame),!t.frustumCulled||L.intersectsObject(t))){r&&B.setFromMatrixPosition(t.matrixWorld).applyMatrix4($);const e=K.update(t),i=t.material;if(Array.isArray(i)){const r=e.groups;for(let o=0,s=r.length;o<s;o++){const s=r[o],a=i[s.materialIndex];a&&a.visible&&h.push(t,e,a,n,B.z,s)}}else i.visible&&h.push(t,e,i,n,B.z,null)}const i=t.children;for(let t=0,o=i.length;t<o;t++)xt(i[t],e,n,r)}function bt(t,e,n){const r=!0===e.isScene?e.overrideMaterial:null;for(let i=0,o=t.length;i<o;i++){const o=t[i],s=o.object,a=o.geometry,u=null===r?o.material:r,c=o.group;if(n.isArrayCamera){const t=n.cameras;for(let n=0,r=t.length;n<r;n++){const r=t[n];s.layers.test(r.layers)&&(W.viewport(S.copy(r.viewport)),p.setupLightsView(r),wt(s,e,r,a,u,c))}}else wt(s,e,n,a,u,c)}}function wt(t,e,n,r,i,o){if(t.onBeforeRender(f,e,n,r,i,o),t.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,t.matrixWorld),t.normalMatrix.getNormalMatrix(t.modelViewMatrix),t.isImmediateRenderObject){const r=St(n,e,i,t);W.setMaterial(i),at.reset(),function(t,e){t.render((function(t){f.renderBufferImmediate(t,e)}))}(t,r)}else f.renderBufferDirect(n,e,r,i,t,o);t.onAfterRender(f,e,n,r,i,o)}function _t(t,e,n){!0!==e.isScene&&(e=F);const r=G.get(t),i=p.state.lights,o=p.state.shadowsArray,s=i.state.version,a=Z.getParameters(t,i.state,o,e,n),u=Z.getProgramCacheKey(a);let c=r.program,l=!0;if(void 0===c)t.addEventListener("dispose",mt);else if(c.cacheKey!==u)gt(t);else if(r.lightsStateVersion!==s)l=!1;else{if(void 0!==a.shaderID){const n=t.isMeshStandardMaterial?e.environment:null;return void(r.envMap=X.get(t.envMap||n))}l=!1}l&&(a.uniforms=Z.getUniforms(t),t.onBeforeCompile(a,f),c=Z.acquireProgram(a,u),r.program=c,r.uniforms=a.uniforms,r.outputEncoding=a.outputEncoding);const h=r.uniforms;(t.isShaderMaterial||t.isRawShaderMaterial)&&!0!==t.clipping||(r.numClippingPlanes=et.numPlanes,r.numIntersection=et.numIntersection,h.clippingPlanes=et.uniform),r.environment=t.isMeshStandardMaterial?e.environment:null,r.fog=e.fog,r.envMap=X.get(t.envMap||r.environment),r.needsLights=function(t){return t.isMeshLambertMaterial||t.isMeshToonMaterial||t.isMeshPhongMaterial||t.isMeshStandardMaterial||t.isShadowMaterial||t.isShaderMaterial&&!0===t.lights}(t),r.lightsStateVersion=s,r.needsLights&&(h.ambientLightColor.value=i.state.ambient,h.lightProbe.value=i.state.probe,h.directionalLights.value=i.state.directional,h.directionalLightShadows.value=i.state.directionalShadow,h.spotLights.value=i.state.spot,h.spotLightShadows.value=i.state.spotShadow,h.rectAreaLights.value=i.state.rectArea,h.ltc_1.value=i.state.rectAreaLTC1,h.ltc_2.value=i.state.rectAreaLTC2,h.pointLights.value=i.state.point,h.pointLightShadows.value=i.state.pointShadow,h.hemisphereLights.value=i.state.hemi,h.directionalShadowMap.value=i.state.directionalShadowMap,h.directionalShadowMatrix.value=i.state.directionalShadowMatrix,h.spotShadowMap.value=i.state.spotShadowMap,h.spotShadowMatrix.value=i.state.spotShadowMatrix,h.pointShadowMap.value=i.state.pointShadowMap,h.pointShadowMatrix.value=i.state.pointShadowMatrix);const d=r.program.getUniforms(),m=nc.seqWithValue(d.seq,h);r.uniformsList=m}function St(t,e,n,r){!0!==e.isScene&&(e=F),j.resetTextureUnits();const i=e.fog,o=n.isMeshStandardMaterial?e.environment:null,s=null===x?f.outputEncoding:x.texture.encoding,a=X.get(n.envMap||o),u=G.get(n),c=p.state.lights;if(!0===k&&(!0===P||t!==_)){const e=t===_&&n.id===w;et.setState(n,t,e)}n.version===u.__version?n.fog&&u.fog!==i||u.environment!==o||u.needsLights&&u.lightsStateVersion!==c.state.version?_t(n,e,r):void 0===u.numClippingPlanes||u.numClippingPlanes===et.numPlanes&&u.numIntersection===et.numIntersection?(u.outputEncoding!==s||u.envMap!==a)&&_t(n,e,r):_t(n,e,r):(_t(n,e,r),u.__version=n.version);let l=!1,h=!1,d=!1;const m=u.program,g=m.getUniforms(),y=u.uniforms;if(W.useProgram(m.program)&&(l=!0,h=!0,d=!0),n.id!==w&&(w=n.id,h=!0),l||_!==t){if(g.setValue(ut,"projectionMatrix",t.projectionMatrix),V.logarithmicDepthBuffer&&g.setValue(ut,"logDepthBufFC",2/(Math.log(t.far+1)/Math.LN2)),_!==t&&(_=t,h=!0,d=!0),n.isShaderMaterial||n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshStandardMaterial||n.envMap){const e=g.map.cameraPosition;void 0!==e&&e.setValue(ut,B.setFromMatrixPosition(t.matrixWorld))}(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial)&&g.setValue(ut,"isOrthographic",!0===t.isOrthographicCamera),(n.isMeshPhongMaterial||n.isMeshToonMaterial||n.isMeshLambertMaterial||n.isMeshBasicMaterial||n.isMeshStandardMaterial||n.isShaderMaterial||n.isShadowMaterial||n.skinning)&&g.setValue(ut,"viewMatrix",t.matrixWorldInverse)}if(n.skinning){g.setOptional(ut,r,"bindMatrix"),g.setOptional(ut,r,"bindMatrixInverse");const t=r.skeleton;if(t){const e=t.bones;if(V.floatVertexTextures){if(null===t.boneTexture){let n=Math.sqrt(4*e.length);n=Yi.ceilPowerOfTwo(n),n=Math.max(n,4);const r=new Float32Array(n*n*4);r.set(t.boneMatrices);const i=new Pa(r,n,n,Di,Ai);t.boneMatrices=r,t.boneTexture=i,t.boneTextureSize=n}g.setValue(ut,"boneTexture",t.boneTexture,j),g.setValue(ut,"boneTextureSize",t.boneTextureSize)}else g.setOptional(ut,t,"boneMatrices")}}var v,b;return(h||u.receiveShadow!==r.receiveShadow)&&(u.receiveShadow=r.receiveShadow,g.setValue(ut,"receiveShadow",r.receiveShadow)),h&&(g.setValue(ut,"toneMappingExposure",f.toneMappingExposure),u.needsLights&&(b=d,(v=y).ambientLightColor.needsUpdate=b,v.lightProbe.needsUpdate=b,v.directionalLights.needsUpdate=b,v.directionalLightShadows.needsUpdate=b,v.pointLights.needsUpdate=b,v.pointLightShadows.needsUpdate=b,v.spotLights.needsUpdate=b,v.spotLightShadows.needsUpdate=b,v.rectAreaLights.needsUpdate=b,v.hemisphereLights.needsUpdate=b),i&&n.fog&&J.refreshFogUniforms(y,i),J.refreshMaterialUniforms(y,n,A,C),nc.upload(ut,u.uniformsList,y,j)),n.isShaderMaterial&&!0===n.uniformsNeedUpdate&&(nc.upload(ut,u.uniformsList,y,j),n.uniformsNeedUpdate=!1),n.isSpriteMaterial&&g.setValue(ut,"center",r.center),g.setValue(ut,"modelViewMatrix",r.modelViewMatrix),g.setValue(ut,"normalMatrix",r.normalMatrix),g.setValue(ut,"modelMatrix",r.matrixWorld),m}vt.setAnimationLoop((function(t){ht.isPresenting||yt&&yt(t)})),"undefined"!=typeof window&&vt.setContext(window),this.setAnimationLoop=function(t){yt=t,ht.setAnimationLoop(t),null===t?vt.stop():vt.start()},this.render=function(t,e){let n,r;if(void 0!==arguments[2]&&(console.warn("THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead."),n=arguments[2]),void 0!==arguments[3]&&(console.warn("THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead."),r=arguments[3]),void 0!==e&&!0!==e.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===m)return;at.resetDefaultState(),w=-1,_=null,!0===t.autoUpdate&&t.updateMatrixWorld(),null===e.parent&&e.updateMatrixWorld(),!0===ht.enabled&&!0===ht.isPresenting&&(e=ht.getCamera(e)),!0===t.isScene&&t.onBeforeRender(f,t,e,n||x),p=tt.get(t,d.length),p.init(),d.push(p),$.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),L.setFromProjectionMatrix($),P=this.localClippingEnabled,k=et.init(this.clippingPlanes,P,e),h=Q.get(t,e),h.init(),xt(t,e,0,f.sortObjects),h.finish(),!0===f.sortObjects&&h.sort(N,R),!0===k&&et.beginShadows();const i=p.state.shadowsArray;pt.render(i,t,e),p.setupLights(),p.setupLightsView(e),!0===k&&et.endShadows(),!0===this.info.autoReset&&this.info.reset(),void 0!==n&&this.setRenderTarget(n),nt.render(h,t,e,r);const o=h.opaque,s=h.transparent;o.length>0&&bt(o,t,e),s.length>0&&bt(s,t,e),!0===t.isScene&&t.onAfterRender(f,t,e),null!==x&&(j.updateRenderTargetMipmap(x),j.updateMultisampleRenderTarget(x)),W.buffers.depth.setTest(!0),W.buffers.depth.setMask(!0),W.buffers.color.setMask(!0),W.setPolygonOffset(!1),d.pop(),p=d.length>0?d[d.length-1]:null,h=null},this.setFramebuffer=function(t){g!==t&&null===x&&ut.bindFramebuffer(36160,t),g=t},this.getActiveCubeFace=function(){return y},this.getActiveMipmapLevel=function(){return v},this.getRenderList=function(){return h},this.setRenderList=function(t){h=t},this.getRenderTarget=function(){return x},this.setRenderTarget=function(t,e=0,n=0){x=t,y=e,v=n,t&&void 0===G.get(t).__webglFramebuffer&&j.setupRenderTarget(t);let r=g,i=!1;if(t){const n=G.get(t).__webglFramebuffer;t.isWebGLCubeRenderTarget?(r=n[e],i=!0):r=t.isWebGLMultisampleRenderTarget?G.get(t).__webglMultisampledFramebuffer:n,S.copy(t.viewport),T.copy(t.scissor),E=t.scissorTest}else S.copy(I).multiplyScalar(A).floor(),T.copy(D).multiplyScalar(A).floor(),E=O;if(b!==r&&(ut.bindFramebuffer(36160,r),b=r),W.viewport(S),W.scissor(T),W.setScissorTest(E),i){const r=G.get(t.texture);ut.framebufferTexture2D(36160,36064,34069+e,r.__webglTexture,n)}},this.readRenderTargetPixels=function(t,e,n,r,i,o,s){if(!t||!t.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let a=G.get(t).__webglFramebuffer;if(t.isWebGLCubeRenderTarget&&void 0!==s&&(a=a[s]),a){let s=!1;a!==b&&(ut.bindFramebuffer(36160,a),s=!0);try{const a=t.texture,u=a.format,c=a.type;if(u!==Di&&st.convert(u)!==ut.getParameter(35739))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");if(!(1009===c||st.convert(c)===ut.getParameter(35738)||c===Ai&&(V.isWebGL2||z.get("OES_texture_float")||z.get("WEBGL_color_buffer_float"))||c===Ni&&(V.isWebGL2?z.get("EXT_color_buffer_float"):z.get("EXT_color_buffer_half_float"))))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");36053===ut.checkFramebufferStatus(36160)?e>=0&&e<=t.width-r&&n>=0&&n<=t.height-i&&ut.readPixels(e,n,r,i,st.convert(u),st.convert(c),o):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{s&&ut.bindFramebuffer(36160,b)}}},this.copyFramebufferToTexture=function(t,e,n=0){const r=Math.pow(2,-n),i=Math.floor(e.image.width*r),o=Math.floor(e.image.height*r),s=st.convert(e.format);j.setTexture2D(e,0),ut.copyTexImage2D(3553,n,s,t.x,t.y,i,o,0),W.unbindTexture()},this.copyTextureToTexture=function(t,e,n,r=0){const i=e.image.width,o=e.image.height,s=st.convert(n.format),a=st.convert(n.type);j.setTexture2D(n,0),ut.pixelStorei(37440,n.flipY),ut.pixelStorei(37441,n.premultiplyAlpha),ut.pixelStorei(3317,n.unpackAlignment),e.isDataTexture?ut.texSubImage2D(3553,r,t.x,t.y,i,o,s,a,e.image.data):e.isCompressedTexture?ut.compressedTexSubImage2D(3553,r,t.x,t.y,e.mipmaps[0].width,e.mipmaps[0].height,s,e.mipmaps[0].data):ut.texSubImage2D(3553,r,t.x,t.y,s,a,e.image),0===r&&n.generateMipmaps&&ut.generateMipmap(3553),W.unbindTexture()},this.initTexture=function(t){j.setTexture2D(t,0),W.unbindTexture()},this.resetState=function(){W.reset(),at.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}function Xc(t){jc.call(this,t)}kc.prototype=Object.create(Ds.prototype),kc.prototype.constructor=kc,kc.prototype.isMeshDepthMaterial=!0,kc.prototype.copy=function(t){return Ds.prototype.copy.call(this,t),this.depthPacking=t.depthPacking,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this},Pc.prototype=Object.create(Ds.prototype),Pc.prototype.constructor=Pc,Pc.prototype.isMeshDistanceMaterial=!0,Pc.prototype.copy=function(t){return Ds.prototype.copy.call(this,t),this.referencePosition.copy(t.referencePosition),this.nearDistance=t.nearDistance,this.farDistance=t.farDistance,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this},zc.prototype=Object.assign(Object.create(Ia.prototype),{constructor:zc,isArrayCamera:!0}),Vc.prototype=Object.assign(Object.create(as.prototype),{constructor:Vc,isGroup:!0}),Object.assign(Wc.prototype,{constructor:Wc,getHandSpace:function(){if(null===this._hand&&(this._hand=new Vc,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints=[],this._hand.inputState={pinching:!1},window.XRHand))for(let t=0;t<=window.XRHand.LITTLE_PHALANX_TIP;t++){const t=new Vc;t.matrixAutoUpdate=!1,t.visible=!1,this._hand.joints.push(t),this._hand.add(t)}return this._hand},getTargetRaySpace:function(){return null===this._targetRay&&(this._targetRay=new Vc,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1),this._targetRay},getGripSpace:function(){return null===this._grip&&(this._grip=new Vc,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1),this._grip},dispatchEvent:function(t){return null!==this._targetRay&&this._targetRay.dispatchEvent(t),null!==this._grip&&this._grip.dispatchEvent(t),null!==this._hand&&this._hand.dispatchEvent(t),this},disconnect:function(t){return this.dispatchEvent({type:"disconnected",data:t}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this},update:function(t,e,n){let r=null,i=null,o=null;const s=this._targetRay,a=this._grip,u=this._hand;if(t&&"visible-blurred"!==e.session.visibilityState)if(u&&t.hand){o=!0;for(let r=0;r<=window.XRHand.LITTLE_PHALANX_TIP;r++)if(t.hand[r]){const i=e.getJointPose(t.hand[r],n),o=u.joints[r];null!==i&&(o.matrix.fromArray(i.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.jointRadius=i.radius),o.visible=null!==i;const s=u.joints[window.XRHand.INDEX_PHALANX_TIP],a=u.joints[window.XRHand.THUMB_PHALANX_TIP],c=s.position.distanceTo(a.position),l=.02,h=.005;u.inputState.pinching&&c>l+h?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!u.inputState.pinching&&c<=l-h&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}}else null!==s&&(r=e.getPose(t.targetRaySpace,n),null!==r&&(s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale))),null!==a&&t.gripSpace&&(i=e.getPose(t.gripSpace,n),null!==i&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale)));return null!==s&&(s.visible=null!==r),null!==a&&(a.visible=null!==i),null!==u&&(u.visible=null!==o),this}}),Object.assign(Hc.prototype,ji.prototype),Xc.prototype=Object.assign(Object.create(jc.prototype),{constructor:Xc,isWebGL1Renderer:!0});class qc extends as{constructor(){super(),Object.defineProperty(this,"isScene",{value:!0}),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),null!==t.background&&(this.background=t.background.clone()),null!==t.environment&&(this.environment=t.environment.clone()),null!==t.fog&&(this.fog=t.fog.clone()),null!==t.overrideMaterial&&(this.overrideMaterial=t.overrideMaterial.clone()),this.autoUpdate=t.autoUpdate,this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return null!==this.background&&(e.object.background=this.background.toJSON(t)),null!==this.environment&&(e.object.environment=this.environment.toJSON(t)),null!==this.fog&&(e.object.fog=this.fog.toJSON()),e}}function Yc(t,e){this.array=t,this.stride=e,this.count=void 0!==t?t.length/e:0,this.usage=Wi,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Yi.generateUUID()}Object.defineProperty(Yc.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Yc.prototype,{isInterleavedBuffer:!0,onUploadCallback:function(){},setUsage:function(t){return this.usage=t,this},copy:function(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this},copyAt:function(t,e,n){t*=this.stride,n*=e.stride;for(let r=0,i=this.stride;r<i;r++)this.array[t+r]=e.array[n+r];return this},set:function(t,e=0){return this.array.set(t,e),this},clone:function(t){void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Yi.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new Yc(new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),this.stride);return e.setUsage(this.usage),e},onUpload:function(t){return this.onUploadCallback=t,this},toJSON:function(t){return void 0===t.arrayBuffers&&(t.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=Yi.generateUUID()),void 0===t.arrayBuffers[this.array.buffer._uuid]&&(t.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}});const Kc=new ao;function Zc(t,e,n,r){this.name="",this.data=t,this.itemSize=e,this.offset=n,this.normalized=!0===r}function Jc(t){Ds.call(this),this.type="SpriteMaterial",this.color=new Ns(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(t)}let Qc;Object.defineProperties(Zc.prototype,{count:{get:function(){return this.data.count}},array:{get:function(){return this.data.array}},needsUpdate:{set:function(t){this.data.needsUpdate=t}}}),Object.assign(Zc.prototype,{isInterleavedBufferAttribute:!0,applyMatrix4:function(t){for(let e=0,n=this.data.count;e<n;e++)Kc.x=this.getX(e),Kc.y=this.getY(e),Kc.z=this.getZ(e),Kc.applyMatrix4(t),this.setXYZ(e,Kc.x,Kc.y,Kc.z);return this},setX:function(t,e){return this.data.array[t*this.data.stride+this.offset]=e,this},setY:function(t,e){return this.data.array[t*this.data.stride+this.offset+1]=e,this},setZ:function(t,e){return this.data.array[t*this.data.stride+this.offset+2]=e,this},setW:function(t,e){return this.data.array[t*this.data.stride+this.offset+3]=e,this},getX:function(t){return this.data.array[t*this.data.stride+this.offset]},getY:function(t){return this.data.array[t*this.data.stride+this.offset+1]},getZ:function(t){return this.data.array[t*this.data.stride+this.offset+2]},getW:function(t){return this.data.array[t*this.data.stride+this.offset+3]},setXY:function(t,e,n){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this},setXYZ:function(t,e,n,r){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this},setXYZW:function(t,e,n,r,i){return t=t*this.data.stride+this.offset,this.data.array[t+0]=e,this.data.array[t+1]=n,this.data.array[t+2]=r,this.data.array[t+3]=i,this},clone:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return new Ps(new this.array.constructor(t),this.itemSize,this.normalized)}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new Zc(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)},toJSON:function(t){if(void 0===t){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let e=0;e<this.count;e++){const n=e*this.data.stride+this.offset;for(let e=0;e<this.itemSize;e++)t.push(this.data.array[n+e])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}return void 0===t.interleavedBuffers&&(t.interleavedBuffers={}),void 0===t.interleavedBuffers[this.data.uuid]&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}),Jc.prototype=Object.create(Ds.prototype),Jc.prototype.constructor=Jc,Jc.prototype.isSpriteMaterial=!0,Jc.prototype.copy=function(t){return Ds.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this};const tl=new ao,el=new ao,nl=new ao,rl=new Ki,il=new Ki,ol=new Po,sl=new ao,al=new ao,ul=new ao,cl=new Ki,ll=new Ki,hl=new Ki;function pl(t){if(as.call(this),this.type="Sprite",void 0===Qc){Qc=new ia;const t=new Yc(new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),5);Qc.setIndex([0,1,2,0,2,3]),Qc.setAttribute("position",new Zc(t,3,0,!1)),Qc.setAttribute("uv",new Zc(t,2,3,!1))}this.geometry=Qc,this.material=void 0!==t?t:new Jc,this.center=new Ki(.5,.5)}function dl(t,e,n,r,i,o){rl.subVectors(t,n).addScalar(.5).multiply(r),void 0!==i?(il.x=o*rl.x-i*rl.y,il.y=i*rl.x+o*rl.y):il.copy(rl),t.copy(e),t.x+=il.x,t.y+=il.y,t.applyMatrix4(ol)}pl.prototype=Object.assign(Object.create(as.prototype),{constructor:pl,isSprite:!0,raycast:function(t,e){null===t.camera&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),el.setFromMatrixScale(this.matrixWorld),ol.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),nl.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&!1===this.material.sizeAttenuation&&el.multiplyScalar(-nl.z);const n=this.material.rotation;let r,i;0!==n&&(i=Math.cos(n),r=Math.sin(n));const o=this.center;dl(sl.set(-.5,-.5,0),nl,o,el,r,i),dl(al.set(.5,-.5,0),nl,o,el,r,i),dl(ul.set(.5,.5,0),nl,o,el,r,i),cl.set(0,0),ll.set(1,0),hl.set(1,1);let s=t.ray.intersectTriangle(sl,al,ul,!1,tl);if(null===s&&(dl(al.set(-.5,.5,0),nl,o,el,r,i),ll.set(0,1),s=t.ray.intersectTriangle(sl,ul,al,!1,tl),null===s))return;const a=t.ray.origin.distanceTo(tl);a<t.near||a>t.far||e.push({distance:a,point:tl.clone(),uv:_s.getUV(tl,sl,al,ul,cl,ll,hl,new Ki),face:null,object:this})},copy:function(t){return as.prototype.copy.call(this,t),void 0!==t.center&&this.center.copy(t.center),this.material=t.material,this}});const fl=new ao,ml=new ao;function gl(){as.call(this),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}}),this.autoUpdate=!0}gl.prototype=Object.assign(Object.create(as.prototype),{constructor:gl,isLOD:!0,copy:function(t){as.prototype.copy.call(this,t,!1);const e=t.levels;for(let t=0,n=e.length;t<n;t++){const n=e[t];this.addLevel(n.object.clone(),n.distance)}return this.autoUpdate=t.autoUpdate,this},addLevel:function(t,e=0){e=Math.abs(e);const n=this.levels;let r;for(r=0;r<n.length&&!(e<n[r].distance);r++);return n.splice(r,0,{distance:e,object:t}),this.add(t),this},getCurrentLevel:function(){return this._currentLevel},getObjectForDistance:function(t){const e=this.levels;if(e.length>0){let n,r;for(n=1,r=e.length;n<r&&!(t<e[n].distance);n++);return e[n-1].object}return null},raycast:function(t,e){if(this.levels.length>0){fl.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(fl);this.getObjectForDistance(n).raycast(t,e)}},update:function(t){const e=this.levels;if(e.length>1){fl.setFromMatrixPosition(t.matrixWorld),ml.setFromMatrixPosition(this.matrixWorld);const n=fl.distanceTo(ml)/t.zoom;let r,i;for(e[0].object.visible=!0,r=1,i=e.length;r<i&&n>=e[r].distance;r++)e[r-1].object.visible=!1,e[r].object.visible=!0;for(this._currentLevel=r-1;r<i;r++)e[r].object.visible=!1}},toJSON:function(t){const e=as.prototype.toJSON.call(this,t);!1===this.autoUpdate&&(e.object.autoUpdate=!1),e.object.levels=[];const n=this.levels;for(let t=0,r=n.length;t<r;t++){const r=n[t];e.object.levels.push({object:r.object.uuid,distance:r.distance})}return e}});const yl=new ao,vl=new ro,xl=new ro,bl=new ao,wl=new Po;function _l(t,e){t&&t.isGeometry&&console.error("THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead."),_a.call(this,t,e),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Po,this.bindMatrixInverse=new Po}function Sl(){as.call(this),this.type="Bone"}_l.prototype=Object.assign(Object.create(_a.prototype),{constructor:_l,isSkinnedMesh:!0,copy:function(t){return _a.prototype.copy.call(this,t),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,this},bind:function(t,e){this.skeleton=t,void 0===e&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){const t=new ro,e=this.geometry.attributes.skinWeight;for(let n=0,r=e.count;n<r;n++){t.x=e.getX(n),t.y=e.getY(n),t.z=e.getZ(n),t.w=e.getW(n);const r=1/t.manhattanLength();r!==1/0?t.multiplyScalar(r):t.set(1,0,0,0),e.setXYZW(n,t.x,t.y,t.z,t.w)}},updateMatrixWorld:function(t){_a.prototype.updateMatrixWorld.call(this,t),"attached"===this.bindMode?this.bindMatrixInverse.copy(this.matrixWorld).invert():"detached"===this.bindMode?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)},boneTransform:function(t,e){const n=this.skeleton,r=this.geometry;vl.fromBufferAttribute(r.attributes.skinIndex,t),xl.fromBufferAttribute(r.attributes.skinWeight,t),yl.fromBufferAttribute(r.attributes.position,t).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let t=0;t<4;t++){const r=xl.getComponent(t);if(0!==r){const i=vl.getComponent(t);wl.multiplyMatrices(n.bones[i].matrixWorld,n.boneInverses[i]),e.addScaledVector(bl.copy(yl).applyMatrix4(wl),r)}}return e.applyMatrix4(this.bindMatrixInverse)}}),Sl.prototype=Object.assign(Object.create(as.prototype),{constructor:Sl,isBone:!0});const Tl=new Po,El=new Po;function Ml(t=[],e=[]){this.uuid=Yi.generateUUID(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}Object.assign(Ml.prototype,{init:function(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(16*t.length),0===e.length)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let t=0,e=this.bones.length;t<e;t++)this.boneInverses.push(new Po)}},calculateInverses:function(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const e=new Po;this.bones[t]&&e.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(e)}},pose:function(){for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&e.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const e=this.bones[t];e&&(e.parent&&e.parent.isBone?(e.matrix.copy(e.parent.matrixWorld).invert(),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))}},update:function(){const t=this.bones,e=this.boneInverses,n=this.boneMatrices,r=this.boneTexture;for(let r=0,i=t.length;r<i;r++){const i=t[r]?t[r].matrixWorld:El;Tl.multiplyMatrices(i,e[r]),Tl.toArray(n,16*r)}null!==r&&(r.needsUpdate=!0)},clone:function(){return new Ml(this.bones,this.boneInverses)},getBoneByName:function(t){for(let e=0,n=this.bones.length;e<n;e++){const n=this.bones[e];if(n.name===t)return n}},dispose:function(){null!==this.boneTexture&&(this.boneTexture.dispose(),this.boneTexture=null)},fromJSON:function(t,e){this.uuid=t.uuid;for(let n=0,r=t.bones.length;n<r;n++){const r=t.bones[n];let i=e[r];void 0===i&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),i=new Sl),this.bones.push(i),this.boneInverses.push((new Po).fromArray(t.boneInverses[n]))}return this.init(),this},toJSON:function(){const t={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,n=this.boneInverses;for(let r=0,i=e.length;r<i;r++){const i=e[r];t.bones.push(i.uuid);const o=n[r];t.boneInverses.push(o.toArray())}return t}});const Cl=new Po,Al=new Po,Nl=[],Rl=new _a;function Il(t,e,n){_a.call(this,t,e),this.instanceMatrix=new Ps(new Float32Array(16*n),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}function Dl(t){Ds.call(this),this.type="LineBasicMaterial",this.color=new Ns(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.morphTargets=!1,this.setValues(t)}Il.prototype=Object.assign(Object.create(_a.prototype),{constructor:Il,isInstancedMesh:!0,copy:function(t){return _a.prototype.copy.call(this,t),this.instanceMatrix.copy(t.instanceMatrix),this.count=t.count,this},getColorAt:function(t,e){e.fromArray(this.instanceColor.array,3*t)},getMatrixAt:function(t,e){e.fromArray(this.instanceMatrix.array,16*t)},raycast:function(t,e){const n=this.matrixWorld,r=this.count;if(Rl.geometry=this.geometry,Rl.material=this.material,void 0!==Rl.material)for(let i=0;i<r;i++){this.getMatrixAt(i,Cl),Al.multiplyMatrices(n,Cl),Rl.matrixWorld=Al,Rl.raycast(t,Nl);for(let t=0,n=Nl.length;t<n;t++){const n=Nl[t];n.instanceId=i,n.object=this,e.push(n)}Nl.length=0}},setColorAt:function(t,e){null===this.instanceColor&&(this.instanceColor=new Ps(new Float32Array(3*this.count),3)),e.toArray(this.instanceColor.array,3*t)},setMatrixAt:function(t,e){e.toArray(this.instanceMatrix.array,16*t)},updateMorphTargets:function(){},dispose:function(){this.dispatchEvent({type:"dispose"})}}),Dl.prototype=Object.create(Ds.prototype),Dl.prototype.constructor=Dl,Dl.prototype.isLineBasicMaterial=!0,Dl.prototype.copy=function(t){return Ds.prototype.copy.call(this,t),this.color.copy(t.color),this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.morphTargets=t.morphTargets,this};const Ol=new ao,Ll=new ao,kl=new Po,Pl=new ko,$l=new Co;function Bl(t=new ia,e=new Dl){as.call(this),this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}Bl.prototype=Object.assign(Object.create(as.prototype),{constructor:Bl,isLine:!0,copy:function(t){return as.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[0];for(let t=1,r=e.count;t<r;t++)Ol.fromBufferAttribute(e,t-1),Ll.fromBufferAttribute(e,t),n[t]=n[t-1],n[t]+=Ol.distanceTo(Ll);t.setAttribute("lineDistance",new Gs(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;n[0]=0;for(let t=1,r=e.length;t<r;t++)n[t]=n[t-1],n[t]+=e[t-1].distanceTo(e[t])}return this},raycast:function(t,e){const n=this.geometry,r=this.matrixWorld,i=t.params.Line.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),$l.copy(n.boundingSphere),$l.applyMatrix4(r),$l.radius+=i,!1===t.ray.intersectsSphere($l))return;kl.copy(r).invert(),Pl.copy(t.ray).applyMatrix4(kl);const o=i/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o,a=new ao,u=new ao,c=new ao,l=new ao,h=this.isLineSegments?2:1;if(n.isBufferGeometry){const r=n.index,i=n.attributes.position;if(null!==r){const n=r.array;for(let r=0,o=n.length-1;r<o;r+=h){const o=n[r],h=n[r+1];if(a.fromBufferAttribute(i,o),u.fromBufferAttribute(i,h),Pl.distanceSqToSegment(a,u,l,c)>s)continue;l.applyMatrix4(this.matrixWorld);const p=t.ray.origin.distanceTo(l);p<t.near||p>t.far||e.push({distance:p,point:c.clone().applyMatrix4(this.matrixWorld),index:r,face:null,faceIndex:null,object:this})}}else for(let n=0,r=i.count-1;n<r;n+=h){if(a.fromBufferAttribute(i,n),u.fromBufferAttribute(i,n+1),Pl.distanceSqToSegment(a,u,l,c)>s)continue;l.applyMatrix4(this.matrixWorld);const r=t.ray.origin.distanceTo(l);r<t.near||r>t.far||e.push({distance:r,point:c.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}else if(n.isGeometry){const r=n.vertices,i=r.length;for(let n=0;n<i-1;n+=h){if(Pl.distanceSqToSegment(r[n],r[n+1],l,c)>s)continue;l.applyMatrix4(this.matrixWorld);const i=t.ray.origin.distanceTo(l);i<t.near||i>t.far||e.push({distance:i,point:c.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}});const Fl=new ao,Ul=new ao;function zl(t,e){Bl.call(this,t,e),this.type="LineSegments"}function Vl(t,e){Bl.call(this,t,e),this.type="LineLoop"}function Wl(t){Ds.call(this),this.type="PointsMaterial",this.color=new Ns(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.morphTargets=!1,this.setValues(t)}zl.prototype=Object.assign(Object.create(Bl.prototype),{constructor:zl,isLineSegments:!0,computeLineDistances:function(){const t=this.geometry;if(t.isBufferGeometry)if(null===t.index){const e=t.attributes.position,n=[];for(let t=0,r=e.count;t<r;t+=2)Fl.fromBufferAttribute(e,t),Ul.fromBufferAttribute(e,t+1),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+Fl.distanceTo(Ul);t.setAttribute("lineDistance",new Gs(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else if(t.isGeometry){const e=t.vertices,n=t.lineDistances;for(let t=0,r=e.length;t<r;t+=2)Fl.copy(e[t]),Ul.copy(e[t+1]),n[t]=0===t?0:n[t-1],n[t+1]=n[t]+Fl.distanceTo(Ul)}return this}}),Vl.prototype=Object.assign(Object.create(Bl.prototype),{constructor:Vl,isLineLoop:!0}),Wl.prototype=Object.create(Ds.prototype),Wl.prototype.constructor=Wl,Wl.prototype.isPointsMaterial=!0,Wl.prototype.copy=function(t){return Ds.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.morphTargets=t.morphTargets,this};const Hl=new Po,Gl=new ko,jl=new Co,Xl=new ao;function ql(t=new ia,e=new Wl){as.call(this),this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}function Yl(t,e,n,r,i,o,s){const a=Gl.distanceSqToPoint(t);if(a<n){const n=new ao;Gl.closestPointToPoint(t,n),n.applyMatrix4(r);const u=i.ray.origin.distanceTo(n);if(u<i.near||u>i.far)return;o.push({distance:u,distanceToRay:Math.sqrt(a),point:n,index:e,face:null,object:s})}}function Kl(t,e,n,r,i,o,s,a,u){eo.call(this,t,e,n,r,i,o,s,a,u),this.format=void 0!==s?s:Ii,this.minFilter=void 0!==o?o:Ti,this.magFilter=void 0!==i?i:Ti,this.generateMipmaps=!1;const c=this;"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback((function e(){c.needsUpdate=!0,t.requestVideoFrameCallback(e)}))}function Zl(t,e,n,r,i,o,s,a,u,c,l,h){eo.call(this,null,o,s,a,u,c,r,i,l,h),this.image={width:e,height:n},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}function Jl(t,e,n,r,i,o,s,a,u){eo.call(this,t,e,n,r,i,o,s,a,u),this.needsUpdate=!0}function Ql(t,e,n,r,i,o,s,a,u,c){if((c=void 0!==c?c:Oi)!==Oi&&c!==Li)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&c===Oi&&(n=Mi),void 0===n&&c===Li&&(n=Ri),eo.call(this,null,r,i,o,s,a,c,n,u),this.image={width:t,height:e},this.magFilter=void 0!==s?s:Si,this.minFilter=void 0!==a?a:Si,this.flipY=!1,this.generateMipmaps=!1}ql.prototype=Object.assign(Object.create(as.prototype),{constructor:ql,isPoints:!0,copy:function(t){return as.prototype.copy.call(this,t),this.material=t.material,this.geometry=t.geometry,this},raycast:function(t,e){const n=this.geometry,r=this.matrixWorld,i=t.params.Points.threshold;if(null===n.boundingSphere&&n.computeBoundingSphere(),jl.copy(n.boundingSphere),jl.applyMatrix4(r),jl.radius+=i,!1===t.ray.intersectsSphere(jl))return;Hl.copy(r).invert(),Gl.copy(t.ray).applyMatrix4(Hl);const o=i/((this.scale.x+this.scale.y+this.scale.z)/3),s=o*o;if(n.isBufferGeometry){const i=n.index,o=n.attributes.position;if(null!==i){const n=i.array;for(let i=0,a=n.length;i<a;i++){const a=n[i];Xl.fromBufferAttribute(o,a),Yl(Xl,a,s,r,t,e,this)}}else for(let n=0,i=o.count;n<i;n++)Xl.fromBufferAttribute(o,n),Yl(Xl,n,s,r,t,e,this)}else{const i=n.vertices;for(let n=0,o=i.length;n<o;n++)Yl(i[n],n,s,r,t,e,this)}},updateMorphTargets:function(){const t=this.geometry;if(t.isBufferGeometry){const e=t.morphAttributes,n=Object.keys(e);if(n.length>0){const t=e[n[0]];if(void 0!==t){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,n=t.length;e<n;e++){const n=t[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[n]=e}}}}else{const e=t.morphTargets;void 0!==e&&e.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}),Kl.prototype=Object.assign(Object.create(eo.prototype),{constructor:Kl,clone:function(){return new this.constructor(this.image).copy(this)},isVideoTexture:!0,update:function(){const t=this.image;!1=="requestVideoFrameCallback"in t&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}),Zl.prototype=Object.create(eo.prototype),Zl.prototype.constructor=Zl,Zl.prototype.isCompressedTexture=!0,Jl.prototype=Object.create(eo.prototype),Jl.prototype.constructor=Jl,Jl.prototype.isCanvasTexture=!0,Ql.prototype=Object.create(eo.prototype),Ql.prototype.constructor=Ql,Ql.prototype.isDepthTexture=!0;let th=0;const eh=new Po,nh=new as,rh=new ao;function ih(){Object.defineProperty(this,"id",{value:th+=2}),this.uuid=Yi.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}ih.prototype=Object.assign(Object.create(ji.prototype),{constructor:ih,isGeometry:!0,applyMatrix4:function(t){const e=(new Zi).getNormalMatrix(t);for(let e=0,n=this.vertices.length;e<n;e++)this.vertices[e].applyMatrix4(t);for(let t=0,n=this.faces.length;t<n;t++){const n=this.faces[t];n.normal.applyMatrix3(e).normalize();for(let t=0,r=n.vertexNormals.length;t<r;t++)n.vertexNormals[t].applyMatrix3(e).normalize()}return null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(t){return eh.makeRotationX(t),this.applyMatrix4(eh),this},rotateY:function(t){return eh.makeRotationY(t),this.applyMatrix4(eh),this},rotateZ:function(t){return eh.makeRotationZ(t),this.applyMatrix4(eh),this},translate:function(t,e,n){return eh.makeTranslation(t,e,n),this.applyMatrix4(eh),this},scale:function(t,e,n){return eh.makeScale(t,e,n),this.applyMatrix4(eh),this},lookAt:function(t){return nh.lookAt(t),nh.updateMatrix(),this.applyMatrix4(nh.matrix),this},fromBufferGeometry:function(t){const e=this,n=null!==t.index?t.index:void 0,r=t.attributes;if(void 0===r.position)return console.error("THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion."),this;const i=r.position,o=r.normal,s=r.color,a=r.uv,u=r.uv2;void 0!==u&&(this.faceVertexUvs[1]=[]);for(let t=0;t<i.count;t++)e.vertices.push((new ao).fromBufferAttribute(i,t)),void 0!==s&&e.colors.push((new Ns).fromBufferAttribute(s,t));function c(t,n,r,i){const c=void 0===s?[]:[e.colors[t].clone(),e.colors[n].clone(),e.colors[r].clone()],l=void 0===o?[]:[(new ao).fromBufferAttribute(o,t),(new ao).fromBufferAttribute(o,n),(new ao).fromBufferAttribute(o,r)],h=new Rs(t,n,r,l,c,i);e.faces.push(h),void 0!==a&&e.faceVertexUvs[0].push([(new Ki).fromBufferAttribute(a,t),(new Ki).fromBufferAttribute(a,n),(new Ki).fromBufferAttribute(a,r)]),void 0!==u&&e.faceVertexUvs[1].push([(new Ki).fromBufferAttribute(u,t),(new Ki).fromBufferAttribute(u,n),(new Ki).fromBufferAttribute(u,r)])}const l=t.groups;if(l.length>0)for(let t=0;t<l.length;t++){const e=l[t],r=e.start;for(let t=r,i=r+e.count;t<i;t+=3)void 0!==n?c(n.getX(t),n.getX(t+1),n.getX(t+2),e.materialIndex):c(t,t+1,t+2,e.materialIndex)}else if(void 0!==n)for(let t=0;t<n.count;t+=3)c(n.getX(t),n.getX(t+1),n.getX(t+2));else for(let t=0;t<i.count;t+=3)c(t,t+1,t+2);return this.computeFaceNormals(),null!==t.boundingBox&&(this.boundingBox=t.boundingBox.clone()),null!==t.boundingSphere&&(this.boundingSphere=t.boundingSphere.clone()),this},center:function(){return this.computeBoundingBox(),this.boundingBox.getCenter(rh).negate(),this.translate(rh.x,rh.y,rh.z),this},normalize:function(){this.computeBoundingSphere();const t=this.boundingSphere.center,e=this.boundingSphere.radius,n=0===e?1:1/e,r=new Po;return r.set(n,0,0,-n*t.x,0,n,0,-n*t.y,0,0,n,-n*t.z,0,0,0,1),this.applyMatrix4(r),this},computeFaceNormals:function(){const t=new ao,e=new ao;for(let n=0,r=this.faces.length;n<r;n++){const r=this.faces[n],i=this.vertices[r.a],o=this.vertices[r.b],s=this.vertices[r.c];t.subVectors(s,o),e.subVectors(i,o),t.cross(e),t.normalize(),r.normal.copy(t)}},computeVertexNormals:function(t=!0){const e=new Array(this.vertices.length);for(let t=0,n=this.vertices.length;t<n;t++)e[t]=new ao;if(t){const t=new ao,n=new ao;for(let r=0,i=this.faces.length;r<i;r++){const i=this.faces[r],o=this.vertices[i.a],s=this.vertices[i.b],a=this.vertices[i.c];t.subVectors(a,s),n.subVectors(o,s),t.cross(n),e[i.a].add(t),e[i.b].add(t),e[i.c].add(t)}}else{this.computeFaceNormals();for(let t=0,n=this.faces.length;t<n;t++){const n=this.faces[t];e[n.a].add(n.normal),e[n.b].add(n.normal),e[n.c].add(n.normal)}}for(let t=0,n=this.vertices.length;t<n;t++)e[t].normalize();for(let t=0,n=this.faces.length;t<n;t++){const n=this.faces[t],r=n.vertexNormals;3===r.length?(r[0].copy(e[n.a]),r[1].copy(e[n.b]),r[2].copy(e[n.c])):(r[0]=e[n.a].clone(),r[1]=e[n.b].clone(),r[2]=e[n.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){this.computeFaceNormals();for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t],n=e.vertexNormals;3===n.length?(n[0].copy(e.normal),n[1].copy(e.normal),n[2].copy(e.normal)):(n[0]=e.normal.clone(),n[1]=e.normal.clone(),n[2]=e.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone(),e.__originalVertexNormals||(e.__originalVertexNormals=[]);for(let t=0,n=e.vertexNormals.length;t<n;t++)e.__originalVertexNormals[t]?e.__originalVertexNormals[t].copy(e.vertexNormals[t]):e.__originalVertexNormals[t]=e.vertexNormals[t].clone()}const t=new ih;t.faces=this.faces;for(let e=0,n=this.morphTargets.length;e<n;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];const t=this.morphNormals[e].faceNormals,n=this.morphNormals[e].vertexNormals;for(let e=0,r=this.faces.length;e<r;e++){const e=new ao,r={a:new ao,b:new ao,c:new ao};t.push(e),n.push(r)}}const n=this.morphNormals[e];t.vertices=this.morphTargets[e].vertices,t.computeFaceNormals(),t.computeVertexNormals();for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t],r=n.faceNormals[t],i=n.vertexNormals[t];r.copy(e.normal),i.a.copy(e.vertexNormals[0]),i.b.copy(e.vertexNormals[1]),i.c.copy(e.vertexNormals[2])}}for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t];e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new lo),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new Co),this.boundingSphere.setFromPoints(this.vertices)},merge:function(t,e,n=0){if(!t||!t.isGeometry)return void console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",t);let r;const i=this.vertices.length,o=this.vertices,s=t.vertices,a=this.faces,u=t.faces,c=this.colors,l=t.colors;void 0!==e&&(r=(new Zi).getNormalMatrix(e));for(let t=0,n=s.length;t<n;t++){const n=s[t].clone();void 0!==e&&n.applyMatrix4(e),o.push(n)}for(let t=0,e=l.length;t<e;t++)c.push(l[t].clone());for(let t=0,e=u.length;t<e;t++){const e=u[t];let o,s;const c=e.vertexNormals,l=e.vertexColors,h=new Rs(e.a+i,e.b+i,e.c+i);h.normal.copy(e.normal),void 0!==r&&h.normal.applyMatrix3(r).normalize();for(let t=0,e=c.length;t<e;t++)o=c[t].clone(),void 0!==r&&o.applyMatrix3(r).normalize(),h.vertexNormals.push(o);h.color.copy(e.color);for(let t=0,e=l.length;t<e;t++)s=l[t],h.vertexColors.push(s.clone());h.materialIndex=e.materialIndex+n,a.push(h)}for(let e=0,n=t.faceVertexUvs.length;e<n;e++){const n=t.faceVertexUvs[e];void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]);for(let t=0,r=n.length;t<r;t++){const r=n[t],i=[];for(let t=0,e=r.length;t<e;t++)i.push(r[t].clone());this.faceVertexUvs[e].push(i)}}},mergeMesh:function(t){t&&t.isMesh?(t.matrixAutoUpdate&&t.updateMatrix(),this.merge(t.geometry,t.matrix)):console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",t)},mergeVertices:function(t=4){const e={},n=[],r=[],i=Math.pow(10,t);for(let t=0,o=this.vertices.length;t<o;t++){const o=this.vertices[t],s=Math.round(o.x*i)+"_"+Math.round(o.y*i)+"_"+Math.round(o.z*i);void 0===e[s]?(e[s]=t,n.push(this.vertices[t]),r[t]=n.length-1):r[t]=r[e[s]]}const o=[];for(let t=0,e=this.faces.length;t<e;t++){const e=this.faces[t];e.a=r[e.a],e.b=r[e.b],e.c=r[e.c];const n=[e.a,e.b,e.c];for(let e=0;e<3;e++)if(n[e]===n[(e+1)%3]){o.push(t);break}}for(let t=o.length-1;t>=0;t--){const e=o[t];this.faces.splice(e,1);for(let t=0,n=this.faceVertexUvs.length;t<n;t++)this.faceVertexUvs[t].splice(e,1)}const s=this.vertices.length-n.length;return this.vertices=n,s},setFromPoints:function(t){this.vertices=[];for(let e=0,n=t.length;e<n;e++){const n=t[e];this.vertices.push(new ao(n.x,n.y,n.z||0))}return this},sortFacesByMaterialIndex:function(){const t=this.faces,e=t.length;for(let n=0;n<e;n++)t[n]._id=n;t.sort((function(t,e){return t.materialIndex-e.materialIndex}));const n=this.faceVertexUvs[0],r=this.faceVertexUvs[1];let i,o;n&&n.length===e&&(i=[]),r&&r.length===e&&(o=[]);for(let s=0;s<e;s++){const e=t[s]._id;i&&i.push(n[e]),o&&o.push(r[e])}i&&(this.faceVertexUvs[0]=i),o&&(this.faceVertexUvs[1]=o)},toJSON:function(){const t={metadata:{version:4.5,type:"Geometry",generator:"Geometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,""!==this.name&&(t.name=this.name),void 0!==this.parameters){const e=this.parameters;for(const n in e)void 0!==e[n]&&(t[n]=e[n]);return t}const e=[];for(let t=0;t<this.vertices.length;t++){const n=this.vertices[t];e.push(n.x,n.y,n.z)}const n=[],r=[],i={},o=[],s={},a=[],u={};for(let t=0;t<this.faces.length;t++){const e=this.faces[t],r=!0,i=!1,o=void 0!==this.faceVertexUvs[0][t],s=e.normal.length()>0,a=e.vertexNormals.length>0,u=1!==e.color.r||1!==e.color.g||1!==e.color.b,d=e.vertexColors.length>0;let f=0;if(f=c(f,0,0),f=c(f,1,r),f=c(f,2,i),f=c(f,3,o),f=c(f,4,s),f=c(f,5,a),f=c(f,6,u),f=c(f,7,d),n.push(f),n.push(e.a,e.b,e.c),n.push(e.materialIndex),o){const e=this.faceVertexUvs[0][t];n.push(p(e[0]),p(e[1]),p(e[2]))}if(s&&n.push(l(e.normal)),a){const t=e.vertexNormals;n.push(l(t[0]),l(t[1]),l(t[2]))}if(u&&n.push(h(e.color)),d){const t=e.vertexColors;n.push(h(t[0]),h(t[1]),h(t[2]))}}function c(t,e,n){return n?t|1<<e:t&~(1<<e)}function l(t){const e=t.x.toString()+t.y.toString()+t.z.toString();return void 0!==i[e]||(i[e]=r.length/3,r.push(t.x,t.y,t.z)),i[e]}function h(t){const e=t.r.toString()+t.g.toString()+t.b.toString();return void 0!==s[e]||(s[e]=o.length,o.push(t.getHex())),s[e]}function p(t){const e=t.x.toString()+t.y.toString();return void 0!==u[e]||(u[e]=a.length/2,a.push(t.x,t.y)),u[e]}return t.data={},t.data.vertices=e,t.data.normals=r,o.length>0&&(t.data.colors=o),a.length>0&&(t.data.uvs=[a]),t.data.faces=n,t},clone:function(){return(new ih).copy(this)},copy:function(t){this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.name=t.name;const e=t.vertices;for(let t=0,n=e.length;t<n;t++)this.vertices.push(e[t].clone());const n=t.colors;for(let t=0,e=n.length;t<e;t++)this.colors.push(n[t].clone());const r=t.faces;for(let t=0,e=r.length;t<e;t++)this.faces.push(r[t].clone());for(let e=0,n=t.faceVertexUvs.length;e<n;e++){const n=t.faceVertexUvs[e];void 0===this.faceVertexUvs[e]&&(this.faceVertexUvs[e]=[]);for(let t=0,r=n.length;t<r;t++){const r=n[t],i=[];for(let t=0,e=r.length;t<e;t++){const e=r[t];i.push(e.clone())}this.faceVertexUvs[e].push(i)}}const i=t.morphTargets;for(let t=0,e=i.length;t<e;t++){const e={};if(e.name=i[t].name,void 0!==i[t].vertices){e.vertices=[];for(let n=0,r=i[t].vertices.length;n<r;n++)e.vertices.push(i[t].vertices[n].clone())}if(void 0!==i[t].normals){e.normals=[];for(let n=0,r=i[t].normals.length;n<r;n++)e.normals.push(i[t].normals[n].clone())}this.morphTargets.push(e)}const o=t.morphNormals;for(let t=0,e=o.length;t<e;t++){const e={};if(void 0!==o[t].vertexNormals){e.vertexNormals=[];for(let n=0,r=o[t].vertexNormals.length;n<r;n++){const r=o[t].vertexNormals[n],i={};i.a=r.a.clone(),i.b=r.b.clone(),i.c=r.c.clone(),e.vertexNormals.push(i)}}if(void 0!==o[t].faceNormals){e.faceNormals=[];for(let n=0,r=o[t].faceNormals.length;n<r;n++)e.faceNormals.push(o[t].faceNormals[n].clone())}this.morphNormals.push(e)}const s=t.skinWeights;for(let t=0,e=s.length;t<e;t++)this.skinWeights.push(s[t].clone());const a=t.skinIndices;for(let t=0,e=a.length;t<e;t++)this.skinIndices.push(a[t].clone());const u=t.lineDistances;for(let t=0,e=u.length;t<e;t++)this.lineDistances.push(u[t]);const c=t.boundingBox;null!==c&&(this.boundingBox=c.clone());const l=t.boundingSphere;return null!==l&&(this.boundingSphere=l.clone()),this.elementsNeedUpdate=t.elementsNeedUpdate,this.verticesNeedUpdate=t.verticesNeedUpdate,this.uvsNeedUpdate=t.uvsNeedUpdate,this.normalsNeedUpdate=t.normalsNeedUpdate,this.colorsNeedUpdate=t.colorsNeedUpdate,this.lineDistancesNeedUpdate=t.lineDistancesNeedUpdate,this.groupsNeedUpdate=t.groupsNeedUpdate,this},dispose:function(){this.dispatchEvent({type:"dispose"})}}),new ao,new ao,new ao,new _s;function oh(t,e,n,r,i){let o,s;if(i===function(t,e,n,r){let i=0;for(let o=e,s=n-r;o<n;o+=r)i+=(t[s]-t[o])*(t[o+1]+t[s+1]),s=o;return i}(t,e,n,r)>0)for(o=e;o<n;o+=r)s=Mh(o,t[o],t[o+1],s);else for(o=n-r;o>=e;o-=r)s=Mh(o,t[o],t[o+1],s);return s&&bh(s,s.next)&&(Ch(s),s=s.next),s}function sh(t,e){if(!t)return t;e||(e=t);let n,r=t;do{if(n=!1,r.steiner||!bh(r,r.next)&&0!==xh(r.prev,r,r.next))r=r.next;else{if(Ch(r),r=e=r.prev,r===r.next)break;n=!0}}while(n||r!==e);return e}function ah(t,e,n,r,i,o,s){if(!t)return;!s&&o&&function(t,e,n,r){let i=t;do{null===i.z&&(i.z=mh(i.x,i.y,e,n,r)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next}while(i!==t);i.prevZ.nextZ=null,i.prevZ=null,function(t){let e,n,r,i,o,s,a,u,c=1;do{for(n=t,t=null,o=null,s=0;n;){for(s++,r=n,a=0,e=0;e<c&&(a++,r=r.nextZ,r);e++);for(u=c;a>0||u>0&&r;)0!==a&&(0===u||!r||n.z<=r.z)?(i=n,n=n.nextZ,a--):(i=r,r=r.nextZ,u--),o?o.nextZ=i:t=i,i.prevZ=o,o=i;n=r}o.nextZ=null,c*=2}while(s>1)}(i)}(t,r,i,o);let a,u,c=t;for(;t.prev!==t.next;)if(a=t.prev,u=t.next,o?ch(t,r,i,o):uh(t))e.push(a.i/n),e.push(t.i/n),e.push(u.i/n),Ch(t),t=u.next,c=u.next;else if((t=u)===c){s?1===s?ah(t=lh(sh(t),e,n),e,n,r,i,o,2):2===s&&hh(t,e,n,r,i,o):ah(sh(t),e,n,r,i,o,1);break}}function uh(t){const e=t.prev,n=t,r=t.next;if(xh(e,n,r)>=0)return!1;let i=t.next.next;for(;i!==t.prev;){if(yh(e.x,e.y,n.x,n.y,r.x,r.y,i.x,i.y)&&xh(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function ch(t,e,n,r){const i=t.prev,o=t,s=t.next;if(xh(i,o,s)>=0)return!1;const a=i.x<o.x?i.x<s.x?i.x:s.x:o.x<s.x?o.x:s.x,u=i.y<o.y?i.y<s.y?i.y:s.y:o.y<s.y?o.y:s.y,c=i.x>o.x?i.x>s.x?i.x:s.x:o.x>s.x?o.x:s.x,l=i.y>o.y?i.y>s.y?i.y:s.y:o.y>s.y?o.y:s.y,h=mh(a,u,e,n,r),p=mh(c,l,e,n,r);let d=t.prevZ,f=t.nextZ;for(;d&&d.z>=h&&f&&f.z<=p;){if(d!==t.prev&&d!==t.next&&yh(i.x,i.y,o.x,o.y,s.x,s.y,d.x,d.y)&&xh(d.prev,d,d.next)>=0)return!1;if(d=d.prevZ,f!==t.prev&&f!==t.next&&yh(i.x,i.y,o.x,o.y,s.x,s.y,f.x,f.y)&&xh(f.prev,f,f.next)>=0)return!1;f=f.nextZ}for(;d&&d.z>=h;){if(d!==t.prev&&d!==t.next&&yh(i.x,i.y,o.x,o.y,s.x,s.y,d.x,d.y)&&xh(d.prev,d,d.next)>=0)return!1;d=d.prevZ}for(;f&&f.z<=p;){if(f!==t.prev&&f!==t.next&&yh(i.x,i.y,o.x,o.y,s.x,s.y,f.x,f.y)&&xh(f.prev,f,f.next)>=0)return!1;f=f.nextZ}return!0}function lh(t,e,n){let r=t;do{const i=r.prev,o=r.next.next;!bh(i,o)&&wh(i,r,r.next,o)&&Th(i,o)&&Th(o,i)&&(e.push(i.i/n),e.push(r.i/n),e.push(o.i/n),Ch(r),Ch(r.next),r=t=o),r=r.next}while(r!==t);return sh(r)}function hh(t,e,n,r,i,o){let s=t;do{let t=s.next.next;for(;t!==s.prev;){if(s.i!==t.i&&vh(s,t)){let a=Eh(s,t);return s=sh(s,s.next),a=sh(a,a.next),ah(s,e,n,r,i,o),void ah(a,e,n,r,i,o)}t=t.next}s=s.next}while(s!==t)}function ph(t,e){return t.x-e.x}function dh(t,e){if(e=function(t,e){let n=e;const r=t.x,i=t.y;let o,s=-1/0;do{if(i<=n.y&&i>=n.next.y&&n.next.y!==n.y){const t=n.x+(i-n.y)*(n.next.x-n.x)/(n.next.y-n.y);if(t<=r&&t>s){if(s=t,t===r){if(i===n.y)return n;if(i===n.next.y)return n.next}o=n.x<n.next.x?n:n.next}}n=n.next}while(n!==e);if(!o)return null;if(r===s)return o;const a=o,u=o.x,c=o.y;let l,h=1/0;n=o;do{r>=n.x&&n.x>=u&&r!==n.x&&yh(i<c?r:s,i,u,c,i<c?s:r,i,n.x,n.y)&&(l=Math.abs(i-n.y)/(r-n.x),Th(n,t)&&(l<h||l===h&&(n.x>o.x||n.x===o.x&&fh(o,n)))&&(o=n,h=l)),n=n.next}while(n!==a);return o}(t,e)){const n=Eh(e,t);sh(e,e.next),sh(n,n.next)}}function fh(t,e){return xh(t.prev,t,e.prev)<0&&xh(e.next,t,t.next)<0}function mh(t,e,n,r,i){return(t=1431655765&((t=858993459&((t=252645135&((t=16711935&((t=32767*(t-n)*i)|t<<8))|t<<4))|t<<2))|t<<1))|(e=1431655765&((e=858993459&((e=252645135&((e=16711935&((e=32767*(e-r)*i)|e<<8))|e<<4))|e<<2))|e<<1))<<1}function gh(t){let e=t,n=t;do{(e.x<n.x||e.x===n.x&&e.y<n.y)&&(n=e),e=e.next}while(e!==t);return n}function yh(t,e,n,r,i,o,s,a){return(i-s)*(e-a)-(t-s)*(o-a)>=0&&(t-s)*(r-a)-(n-s)*(e-a)>=0&&(n-s)*(o-a)-(i-s)*(r-a)>=0}function vh(t,e){return t.next.i!==e.i&&t.prev.i!==e.i&&!function(t,e){let n=t;do{if(n.i!==t.i&&n.next.i!==t.i&&n.i!==e.i&&n.next.i!==e.i&&wh(n,n.next,t,e))return!0;n=n.next}while(n!==t);return!1}(t,e)&&(Th(t,e)&&Th(e,t)&&function(t,e){let n=t,r=!1;const i=(t.x+e.x)/2,o=(t.y+e.y)/2;do{n.y>o!=n.next.y>o&&n.next.y!==n.y&&i<(n.next.x-n.x)*(o-n.y)/(n.next.y-n.y)+n.x&&(r=!r),n=n.next}while(n!==t);return r}(t,e)&&(xh(t.prev,t,e.prev)||xh(t,e.prev,e))||bh(t,e)&&xh(t.prev,t,t.next)>0&&xh(e.prev,e,e.next)>0)}function xh(t,e,n){return(e.y-t.y)*(n.x-e.x)-(e.x-t.x)*(n.y-e.y)}function bh(t,e){return t.x===e.x&&t.y===e.y}function wh(t,e,n,r){const i=Sh(xh(t,e,n)),o=Sh(xh(t,e,r)),s=Sh(xh(n,r,t)),a=Sh(xh(n,r,e));return i!==o&&s!==a||!(0!==i||!_h(t,n,e))||!(0!==o||!_h(t,r,e))||!(0!==s||!_h(n,t,r))||!(0!==a||!_h(n,e,r))}function _h(t,e,n){return e.x<=Math.max(t.x,n.x)&&e.x>=Math.min(t.x,n.x)&&e.y<=Math.max(t.y,n.y)&&e.y>=Math.min(t.y,n.y)}function Sh(t){return t>0?1:t<0?-1:0}function Th(t,e){return xh(t.prev,t,t.next)<0?xh(t,e,t.next)>=0&&xh(t,t.prev,e)>=0:xh(t,e,t.prev)<0||xh(t,t.next,e)<0}function Eh(t,e){const n=new Ah(t.i,t.x,t.y),r=new Ah(e.i,e.x,e.y),i=t.next,o=e.prev;return t.next=e,e.prev=t,n.next=i,i.prev=n,r.next=n,n.prev=r,o.next=r,r.prev=o,r}function Mh(t,e,n,r){const i=new Ah(t,e,n);return r?(i.next=r.next,i.prev=r,r.next.prev=i,r.next=i):(i.prev=i,i.next=i),i}function Ch(t){t.next.prev=t.prev,t.prev.next=t.next,t.prevZ&&(t.prevZ.nextZ=t.nextZ),t.nextZ&&(t.nextZ.prevZ=t.prevZ)}function Ah(t,e,n){this.i=t,this.x=e,this.y=n,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}const Nh={area:function(t){const e=t.length;let n=0;for(let r=e-1,i=0;i<e;r=i++)n+=t[r].x*t[i].y-t[i].x*t[r].y;return.5*n},isClockWise:function(t){return Nh.area(t)<0},triangulateShape:function(t,e){const n=[],r=[],i=[];Rh(t),Ih(n,t);let o=t.length;e.forEach(Rh);for(let t=0;t<e.length;t++)r.push(o),o+=e[t].length,Ih(n,e[t]);const s=function(t,e,n){n=n||2;const r=e&&e.length,i=r?e[0]*n:t.length;let o=oh(t,0,i,n,!0);const s=[];if(!o||o.next===o.prev)return s;let a,u,c,l,h,p,d;if(r&&(o=function(t,e,n,r){const i=[];let o,s,a,u,c;for(o=0,s=e.length;o<s;o++)a=e[o]*r,u=o<s-1?e[o+1]*r:t.length,c=oh(t,a,u,r,!1),c===c.next&&(c.steiner=!0),i.push(gh(c));for(i.sort(ph),o=0;o<i.length;o++)dh(i[o],n),n=sh(n,n.next);return n}(t,e,o,n)),t.length>80*n){a=c=t[0],u=l=t[1];for(let e=n;e<i;e+=n)h=t[e],p=t[e+1],h<a&&(a=h),p<u&&(u=p),h>c&&(c=h),p>l&&(l=p);d=Math.max(c-a,l-u),d=0!==d?1/d:0}return ah(o,s,n,a,u,d),s}(n,r);for(let t=0;t<s.length;t+=3)i.push(s.slice(t,t+3));return i}};function Rh(t){const e=t.length;e>2&&t[e-1].equals(t[0])&&t.pop()}function Ih(t,e){for(let n=0;n<e.length;n++)t.push(e[n].x),t.push(e[n].y)}class Dh extends ia{constructor(t,e){super(),this.type="ExtrudeBufferGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const n=this,r=[],i=[];for(let e=0,n=t.length;e<n;e++)o(t[e]);function o(t){const o=[],s=void 0!==e.curveSegments?e.curveSegments:12,a=void 0!==e.steps?e.steps:1;let u=void 0!==e.depth?e.depth:100,c=void 0===e.bevelEnabled||e.bevelEnabled,l=void 0!==e.bevelThickness?e.bevelThickness:6,h=void 0!==e.bevelSize?e.bevelSize:l-2,p=void 0!==e.bevelOffset?e.bevelOffset:0,d=void 0!==e.bevelSegments?e.bevelSegments:3;const f=e.extrudePath,m=void 0!==e.UVGenerator?e.UVGenerator:Oh;void 0!==e.amount&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),u=e.amount);let g,y,v,x,b,w=!1;f&&(g=f.getSpacedPoints(a),w=!0,c=!1,y=f.computeFrenetFrames(a,!1),v=new ao,x=new ao,b=new ao),c||(d=0,l=0,h=0,p=0);const _=t.extractPoints(s);let S=_.shape;const T=_.holes;if(!Nh.isClockWise(S)){S=S.reverse();for(let t=0,e=T.length;t<e;t++){const e=T[t];Nh.isClockWise(e)&&(T[t]=e.reverse())}}const E=Nh.triangulateShape(S,T),M=S;for(let t=0,e=T.length;t<e;t++){const e=T[t];S=S.concat(e)}function C(t,e,n){return e||console.error("THREE.ExtrudeGeometry: vec does not exist"),e.clone().multiplyScalar(n).add(t)}const A=S.length,N=E.length;function R(t,e,n){let r,i,o;const s=t.x-e.x,a=t.y-e.y,u=n.x-t.x,c=n.y-t.y,l=s*s+a*a,h=s*c-a*u;if(Math.abs(h)>Number.EPSILON){const h=Math.sqrt(l),p=Math.sqrt(u*u+c*c),d=e.x-a/h,f=e.y+s/h,m=((n.x-c/p-d)*c-(n.y+u/p-f)*u)/(s*c-a*u);r=d+s*m-t.x,i=f+a*m-t.y;const g=r*r+i*i;if(g<=2)return new Ki(r,i);o=Math.sqrt(g/2)}else{let t=!1;s>Number.EPSILON?u>Number.EPSILON&&(t=!0):s<-Number.EPSILON?u<-Number.EPSILON&&(t=!0):Math.sign(a)===Math.sign(c)&&(t=!0),t?(r=-a,i=s,o=Math.sqrt(l)):(r=s,i=a,o=Math.sqrt(l/2))}return new Ki(r/o,i/o)}const I=[];for(let t=0,e=M.length,n=e-1,r=t+1;t<e;t++,n++,r++)n===e&&(n=0),r===e&&(r=0),I[t]=R(M[t],M[n],M[r]);const D=[];let O,L=I.concat();for(let t=0,e=T.length;t<e;t++){const e=T[t];O=[];for(let t=0,n=e.length,r=n-1,i=t+1;t<n;t++,r++,i++)r===n&&(r=0),i===n&&(i=0),O[t]=R(e[t],e[r],e[i]);D.push(O),L=L.concat(O)}for(let t=0;t<d;t++){const e=t/d,n=l*Math.cos(e*Math.PI/2),r=h*Math.sin(e*Math.PI/2)+p;for(let t=0,e=M.length;t<e;t++){const e=C(M[t],I[t],r);$(e.x,e.y,-n)}for(let t=0,e=T.length;t<e;t++){const e=T[t];O=D[t];for(let t=0,i=e.length;t<i;t++){const i=C(e[t],O[t],r);$(i.x,i.y,-n)}}}const k=h+p;for(let t=0;t<A;t++){const e=c?C(S[t],L[t],k):S[t];w?(x.copy(y.normals[0]).multiplyScalar(e.x),v.copy(y.binormals[0]).multiplyScalar(e.y),b.copy(g[0]).add(x).add(v),$(b.x,b.y,b.z)):$(e.x,e.y,0)}for(let t=1;t<=a;t++)for(let e=0;e<A;e++){const n=c?C(S[e],L[e],k):S[e];w?(x.copy(y.normals[t]).multiplyScalar(n.x),v.copy(y.binormals[t]).multiplyScalar(n.y),b.copy(g[t]).add(x).add(v),$(b.x,b.y,b.z)):$(n.x,n.y,u/a*t)}for(let t=d-1;t>=0;t--){const e=t/d,n=l*Math.cos(e*Math.PI/2),r=h*Math.sin(e*Math.PI/2)+p;for(let t=0,e=M.length;t<e;t++){const e=C(M[t],I[t],r);$(e.x,e.y,u+n)}for(let t=0,e=T.length;t<e;t++){const e=T[t];O=D[t];for(let t=0,i=e.length;t<i;t++){const i=C(e[t],O[t],r);w?$(i.x,i.y+g[a-1].y,g[a-1].x+n):$(i.x,i.y,u+n)}}}function P(t,e){let n=t.length;for(;--n>=0;){const r=n;let i=n-1;i<0&&(i=t.length-1);for(let t=0,n=a+2*d;t<n;t++){const n=A*t,o=A*(t+1);F(e+r+n,e+i+n,e+i+o,e+r+o)}}}function $(t,e,n){o.push(t),o.push(e),o.push(n)}function B(t,e,i){U(t),U(e),U(i);const o=r.length/3,s=m.generateTopUV(n,r,o-3,o-2,o-1);z(s[0]),z(s[1]),z(s[2])}function F(t,e,i,o){U(t),U(e),U(o),U(e),U(i),U(o);const s=r.length/3,a=m.generateSideWallUV(n,r,s-6,s-3,s-2,s-1);z(a[0]),z(a[1]),z(a[3]),z(a[1]),z(a[2]),z(a[3])}function U(t){r.push(o[3*t+0]),r.push(o[3*t+1]),r.push(o[3*t+2])}function z(t){i.push(t.x),i.push(t.y)}!function(){const t=r.length/3;if(c){let t=0,e=A*t;for(let t=0;t<N;t++){const n=E[t];B(n[2]+e,n[1]+e,n[0]+e)}t=a+2*d,e=A*t;for(let t=0;t<N;t++){const n=E[t];B(n[0]+e,n[1]+e,n[2]+e)}}else{for(let t=0;t<N;t++){const e=E[t];B(e[2],e[1],e[0])}for(let t=0;t<N;t++){const e=E[t];B(e[0]+A*a,e[1]+A*a,e[2]+A*a)}}n.addGroup(t,r.length/3-t,0)}(),function(){const t=r.length/3;let e=0;P(M,e),e+=M.length;for(let t=0,n=T.length;t<n;t++){const n=T[t];P(n,e),e+=n.length}n.addGroup(t,r.length/3-t,1)}()}this.setAttribute("position",new Gs(r,3)),this.setAttribute("uv",new Gs(i,2)),this.computeVertexNormals()}toJSON(){const t=ia.prototype.toJSON.call(this);return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,r=t.length;e<r;e++){const r=t[e];n.shapes.push(r.uuid)}else n.shapes.push(t.uuid);return void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,t)}}const Oh={generateTopUV:function(t,e,n,r,i){const o=e[3*n],s=e[3*n+1],a=e[3*r],u=e[3*r+1],c=e[3*i],l=e[3*i+1];return[new Ki(o,s),new Ki(a,u),new Ki(c,l)]},generateSideWallUV:function(t,e,n,r,i,o){const s=e[3*n],a=e[3*n+1],u=e[3*n+2],c=e[3*r],l=e[3*r+1],h=e[3*r+2],p=e[3*i],d=e[3*i+1],f=e[3*i+2],m=e[3*o],g=e[3*o+1],y=e[3*o+2];return Math.abs(a-l)<.01?[new Ki(s,1-u),new Ki(c,1-h),new Ki(p,1-f),new Ki(m,1-y)]:[new Ki(a,1-u),new Ki(l,1-h),new Ki(d,1-f),new Ki(g,1-y)]}};class Lh extends ih{constructor(t,e){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},this.fromBufferGeometry(new Dh(t,e)),this.mergeVertices()}toJSON(){const t=super.toJSON();return function(t,e,n){if(n.shapes=[],Array.isArray(t))for(let e=0,r=t.length;e<r;e++){const r=t[e];n.shapes.push(r.uuid)}else n.shapes.push(t.uuid);return void 0!==e.extrudePath&&(n.options.extrudePath=e.extrudePath.toJSON()),n}(this.parameters.shapes,this.parameters.options,t)}}function kh(t,e,n){ia.call(this),this.type="ParametricBufferGeometry",this.parameters={func:t,slices:e,stacks:n};const r=[],i=[],o=[],s=[],a=1e-5,u=new ao,c=new ao,l=new ao,h=new ao,p=new ao;t.length<3&&console.error("THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.");const d=e+1;for(let r=0;r<=n;r++){const d=r/n;for(let n=0;n<=e;n++){const r=n/e;t(r,d,c),i.push(c.x,c.y,c.z),r-a>=0?(t(r-a,d,l),h.subVectors(c,l)):(t(r+a,d,l),h.subVectors(l,c)),d-a>=0?(t(r,d-a,l),p.subVectors(c,l)):(t(r,d+a,l),p.subVectors(l,c)),u.crossVectors(h,p).normalize(),o.push(u.x,u.y,u.z),s.push(r,d)}}for(let t=0;t<n;t++)for(let n=0;n<e;n++){const e=t*d+n,i=t*d+n+1,o=(t+1)*d+n+1,s=(t+1)*d+n;r.push(e,i,s),r.push(i,o,s)}this.setIndex(r),this.setAttribute("position",new Gs(i,3)),this.setAttribute("normal",new Gs(o,3)),this.setAttribute("uv",new Gs(s,2))}function Ph(t,e,n){ih.call(this),this.type="ParametricGeometry",this.parameters={func:t,slices:e,stacks:n},this.fromBufferGeometry(new kh(t,e,n)),this.mergeVertices()}kh.prototype=Object.create(ia.prototype),kh.prototype.constructor=kh,Ph.prototype=Object.create(ih.prototype),Ph.prototype.constructor=Ph;class $h extends ih{constructor(t,e,n,r){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:n,heightSegments:r},this.fromBufferGeometry(new Va(t,e,n,r)),this.mergeVertices()}}class Bh extends ia{constructor(t,e=12){super(),this.type="ShapeBufferGeometry",this.parameters={shapes:t,curveSegments:e};const n=[],r=[],i=[],o=[];let s=0,a=0;if(!1===Array.isArray(t))u(t);else for(let e=0;e<t.length;e++)u(t[e]),this.addGroup(s,a,e),s+=a,a=0;function u(t){const s=r.length/3,u=t.extractPoints(e);let c=u.shape;const l=u.holes;!1===Nh.isClockWise(c)&&(c=c.reverse());for(let t=0,e=l.length;t<e;t++){const e=l[t];!0===Nh.isClockWise(e)&&(l[t]=e.reverse())}const h=Nh.triangulateShape(c,l);for(let t=0,e=l.length;t<e;t++){const e=l[t];c=c.concat(e)}for(let t=0,e=c.length;t<e;t++){const e=c[t];r.push(e.x,e.y,0),i.push(0,0,1),o.push(e.x,e.y)}for(let t=0,e=h.length;t<e;t++){const e=h[t],r=e[0]+s,i=e[1]+s,o=e[2]+s;n.push(r,i,o),a+=3}}this.setIndex(n),this.setAttribute("position",new Gs(r,3)),this.setAttribute("normal",new Gs(i,3)),this.setAttribute("uv",new Gs(o,2))}toJSON(){const t=ia.prototype.toJSON.call(this);return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,r=t.length;n<r;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}}class Fh extends ih{constructor(t,e){super(),this.type="ShapeGeometry","object"==typeof e&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),e=e.curveSegments),this.parameters={shapes:t,curveSegments:e},this.fromBufferGeometry(new Bh(t,e)),this.mergeVertices()}toJSON(){const t=ih.prototype.toJSON.call(this);return function(t,e){if(e.shapes=[],Array.isArray(t))for(let n=0,r=t.length;n<r;n++){const r=t[n];e.shapes.push(r.uuid)}else e.shapes.push(t.uuid);return e}(this.parameters.shapes,t)}}function Uh(t){Ds.call(this),this.type="ShadowMaterial",this.color=new Ns(0),this.transparent=!0,this.setValues(t)}function zh(t){Na.call(this,t),this.type="RawShaderMaterial"}function Vh(t){Ds.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Ns(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ns(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Ki(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.vertexTangents=!1,this.setValues(t)}function Wh(t){Vh.call(this),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoat=0,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Ki(1,1),this.clearcoatNormalMap=null,this.reflectivity=.5,Object.defineProperty(this,"ior",{get:function(){return(1+.4*this.reflectivity)/(1-.4*this.reflectivity)},set:function(t){this.reflectivity=Yi.clamp(2.5*(t-1)/(t+1),0,1)}}),this.sheen=null,this.transmission=0,this.transmissionMap=null,this.setValues(t)}function Hh(t){Ds.call(this),this.type="MeshPhongMaterial",this.color=new Ns(16777215),this.specular=new Ns(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ns(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Ki(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Gh(t){Ds.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Ns(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ns(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Ki(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function jh(t){Ds.call(this),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Ki(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Xh(t){Ds.call(this),this.type="MeshLambertMaterial",this.color=new Ns(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ns(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function qh(t){Ds.call(this),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Ns(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new Ki(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(t)}function Yh(t){Dl.call(this),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}Uh.prototype=Object.create(Ds.prototype),Uh.prototype.constructor=Uh,Uh.prototype.isShadowMaterial=!0,Uh.prototype.copy=function(t){return Ds.prototype.copy.call(this,t),this.color.copy(t.color),this},zh.prototype=Object.create(Na.prototype),zh.prototype.constructor=zh,zh.prototype.isRawShaderMaterial=!0,Vh.prototype=Object.create(Ds.prototype),Vh.prototype.constructor=Vh,Vh.prototype.isMeshStandardMaterial=!0,Vh.prototype.copy=function(t){return Ds.prototype.copy.call(this,t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapIntensity=t.envMapIntensity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this.vertexTangents=t.vertexTangents,this},Wh.prototype=Object.create(Vh.prototype),Wh.prototype.constructor=Wh,Wh.prototype.isMeshPhysicalMaterial=!0,Wh.prototype.copy=function(t){return Vh.prototype.copy.call(this,t),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.reflectivity=t.reflectivity,t.sheen?this.sheen=(this.sheen||new Ns).copy(t.sheen):this.sheen=null,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this},Hh.prototype=Object.create(Ds.prototype),Hh.prototype.constructor=Hh,Hh.prototype.isMeshPhongMaterial=!0,Hh.prototype.copy=function(t){return Ds.prototype.copy.call(this,t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Gh.prototype=Object.create(Ds.prototype),Gh.prototype.constructor=Gh,Gh.prototype.isMeshToonMaterial=!0,Gh.prototype.copy=function(t){return Ds.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},jh.prototype=Object.create(Ds.prototype),jh.prototype.constructor=jh,jh.prototype.isMeshNormalMaterial=!0,jh.prototype.copy=function(t){return Ds.prototype.copy.call(this,t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Xh.prototype=Object.create(Ds.prototype),Xh.prototype.constructor=Xh,Xh.prototype.isMeshLambertMaterial=!0,Xh.prototype.copy=function(t){return Ds.prototype.copy.call(this,t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},qh.prototype=Object.create(Ds.prototype),qh.prototype.constructor=qh,qh.prototype.isMeshMatcapMaterial=!0,qh.prototype.copy=function(t){return Ds.prototype.copy.call(this,t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.skinning=t.skinning,this.morphTargets=t.morphTargets,this.morphNormals=t.morphNormals,this},Yh.prototype=Object.create(Dl.prototype),Yh.prototype.constructor=Yh,Yh.prototype.isLineDashedMaterial=!0,Yh.prototype.copy=function(t){return Dl.prototype.copy.call(this,t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this};var Kh=Object.freeze({__proto__:null,ShadowMaterial:Uh,SpriteMaterial:Jc,RawShaderMaterial:zh,ShaderMaterial:Na,PointsMaterial:Wl,MeshPhysicalMaterial:Wh,MeshStandardMaterial:Vh,MeshPhongMaterial:Hh,MeshToonMaterial:Gh,MeshNormalMaterial:jh,MeshLambertMaterial:Xh,MeshDepthMaterial:kc,MeshDistanceMaterial:Pc,MeshBasicMaterial:Os,MeshMatcapMaterial:qh,LineDashedMaterial:Yh,LineBasicMaterial:Dl,Material:Ds});const Zh={arraySlice:function(t,e,n){return Zh.isTypedArray(t)?new t.constructor(t.subarray(e,void 0!==n?n:t.length)):t.slice(e,n)},convertArray:function(t,e,n){return!t||!n&&t.constructor===e?t:"number"==typeof e.BYTES_PER_ELEMENT?new e(t):Array.prototype.slice.call(t)},isTypedArray:function(t){return ArrayBuffer.isView(t)&&!(t instanceof DataView)},getKeyframeOrder:function(t){const e=t.length,n=new Array(e);for(let t=0;t!==e;++t)n[t]=t;return n.sort((function(e,n){return t[e]-t[n]})),n},sortedArray:function(t,e,n){const r=t.length,i=new t.constructor(r);for(let o=0,s=0;s!==r;++o){const r=n[o]*e;for(let n=0;n!==e;++n)i[s++]=t[r+n]}return i},flattenJSON:function(t,e,n,r){let i=1,o=t[0];for(;void 0!==o&&void 0===o[r];)o=t[i++];if(void 0===o)return;let s=o[r];if(void 0!==s)if(Array.isArray(s))do{s=o[r],void 0!==s&&(e.push(o.time),n.push.apply(n,s)),o=t[i++]}while(void 0!==o);else if(void 0!==s.toArray)do{s=o[r],void 0!==s&&(e.push(o.time),s.toArray(n,n.length)),o=t[i++]}while(void 0!==o);else do{s=o[r],void 0!==s&&(e.push(o.time),n.push(s)),o=t[i++]}while(void 0!==o)},subclip:function(t,e,n,r,i=30){const o=t.clone();o.name=e;const s=[];for(let t=0;t<o.tracks.length;++t){const e=o.tracks[t],a=e.getValueSize(),u=[],c=[];for(let t=0;t<e.times.length;++t){const o=e.times[t]*i;if(!(o<n||o>=r)){u.push(e.times[t]);for(let n=0;n<a;++n)c.push(e.values[t*a+n])}}0!==u.length&&(e.times=Zh.convertArray(u,e.times.constructor),e.values=Zh.convertArray(c,e.values.constructor),s.push(e))}o.tracks=s;let a=1/0;for(let t=0;t<o.tracks.length;++t)a>o.tracks[t].times[0]&&(a=o.tracks[t].times[0]);for(let t=0;t<o.tracks.length;++t)o.tracks[t].shift(-1*a);return o.resetDuration(),o},makeClipAdditive:function(t,e=0,n=t,r=30){r<=0&&(r=30);const i=n.tracks.length,o=e/r;for(let e=0;e<i;++e){const r=n.tracks[e],i=r.ValueTypeName;if("bool"===i||"string"===i)continue;const s=t.tracks.find((function(t){return t.name===r.name&&t.ValueTypeName===i}));if(void 0===s)continue;let a=0;const u=r.getValueSize();r.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(a=u/3);let c=0;const l=s.getValueSize();s.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=l/3);const h=r.times.length-1;let p;if(o<=r.times[0]){const t=a,e=u-a;p=Zh.arraySlice(r.values,t,e)}else if(o>=r.times[h]){const t=h*u+a,e=t+u-a;p=Zh.arraySlice(r.values,t,e)}else{const t=r.createInterpolant(),e=a,n=u-a;t.evaluate(o),p=Zh.arraySlice(t.resultBuffer,e,n)}"quaternion"===i&&(new so).fromArray(p).normalize().conjugate().toArray(p);const d=s.times.length;for(let t=0;t<d;++t){const e=t*l+c;if("quaternion"===i)so.multiplyQuaternionsFlat(s.values,e,p,0,s.values,e);else{const t=l-2*c;for(let n=0;n<t;++n)s.values[e+n]-=p[n]}}}return t.blendMode=2501,t}};function Jh(t,e,n,r){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=void 0!==r?r:new e.constructor(n),this.sampleValues=e,this.valueSize=n}function Qh(t,e,n,r){Jh.call(this,t,e,n,r),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}function tp(t,e,n,r){Jh.call(this,t,e,n,r)}function ep(t,e,n,r){Jh.call(this,t,e,n,r)}function np(t,e,n,r){if(void 0===t)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===e||0===e.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Zh.convertArray(e,this.TimeBufferType),this.values=Zh.convertArray(n,this.ValueBufferType),this.setInterpolation(r||this.DefaultInterpolation)}function rp(t,e,n){np.call(this,t,e,n)}function ip(t,e,n,r){np.call(this,t,e,n,r)}function op(t,e,n,r){np.call(this,t,e,n,r)}function sp(t,e,n,r){Jh.call(this,t,e,n,r)}function ap(t,e,n,r){np.call(this,t,e,n,r)}function up(t,e,n,r){np.call(this,t,e,n,r)}function cp(t,e,n,r){np.call(this,t,e,n,r)}function lp(t,e=-1,n,r=2500){this.name=t,this.tracks=n,this.duration=e,this.blendMode=r,this.uuid=Yi.generateUUID(),this.duration<0&&this.resetDuration()}function hp(t){if(void 0===t.type)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=function(t){switch(t.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return op;case"vector":case"vector2":case"vector3":case"vector4":return cp;case"color":return ip;case"quaternion":return ap;case"bool":case"boolean":return rp;case"string":return up}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+t)}(t.type);if(void 0===t.times){const e=[],n=[];Zh.flattenJSON(t.keys,e,n,"value"),t.times=e,t.values=n}return void 0!==e.parse?e.parse(t):new e(t.name,t.times,t.values,t.interpolation)}Object.assign(Jh.prototype,{evaluate:function(t){const e=this.parameterPositions;let n=this._cachedIndex,r=e[n],i=e[n-1];t:{e:{let o;n:{r:if(!(t<r)){for(let o=n+2;;){if(void 0===r){if(t<i)break r;return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,t,i)}if(n===o)break;if(i=r,r=e[++n],t<r)break e}o=e.length;break n}if(t>=i)break t;{const s=e[1];t<s&&(n=2,i=s);for(let o=n-2;;){if(void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(n===o)break;if(r=i,i=e[--n-1],t>=i)break e}o=n,n=0}}for(;n<o;){const r=n+o>>>1;t<e[r]?o=r:n=r+1}if(r=e[n],i=e[n-1],void 0===i)return this._cachedIndex=0,this.beforeStart_(0,t,r);if(void 0===r)return n=e.length,this._cachedIndex=n,this.afterEnd_(n-1,i,t)}this._cachedIndex=n,this.intervalChanged_(n,i,r)}return this.interpolate_(n,i,t,r)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(t){const e=this.resultBuffer,n=this.sampleValues,r=this.valueSize,i=t*r;for(let t=0;t!==r;++t)e[t]=n[i+t];return e},interpolate_:function(){throw new Error("call to abstract method")},intervalChanged_:function(){}}),Object.assign(Jh.prototype,{beforeStart_:Jh.prototype.copySampleValue_,afterEnd_:Jh.prototype.copySampleValue_}),Qh.prototype=Object.assign(Object.create(Jh.prototype),{constructor:Qh,DefaultSettings_:{endingStart:Bi,endingEnd:Bi},intervalChanged_:function(t,e,n){const r=this.parameterPositions;let i=t-2,o=t+1,s=r[i],a=r[o];if(void 0===s)switch(this.getSettings_().endingStart){case Fi:i=t,s=2*e-n;break;case Ui:i=r.length-2,s=e+r[i]-r[i+1];break;default:i=t,s=n}if(void 0===a)switch(this.getSettings_().endingEnd){case Fi:o=t,a=2*n-e;break;case Ui:o=1,a=n+r[1]-r[0];break;default:o=t-1,a=e}const u=.5*(n-e),c=this.valueSize;this._weightPrev=u/(e-s),this._weightNext=u/(a-n),this._offsetPrev=i*c,this._offsetNext=o*c},interpolate_:function(t,e,n,r){const i=this.resultBuffer,o=this.sampleValues,s=this.valueSize,a=t*s,u=a-s,c=this._offsetPrev,l=this._offsetNext,h=this._weightPrev,p=this._weightNext,d=(n-e)/(r-e),f=d*d,m=f*d,g=-h*m+2*h*f-h*d,y=(1+h)*m+(-1.5-2*h)*f+(-.5+h)*d+1,v=(-1-p)*m+(1.5+p)*f+.5*d,x=p*m-p*f;for(let t=0;t!==s;++t)i[t]=g*o[c+t]+y*o[u+t]+v*o[a+t]+x*o[l+t];return i}}),tp.prototype=Object.assign(Object.create(Jh.prototype),{constructor:tp,interpolate_:function(t,e,n,r){const i=this.resultBuffer,o=this.sampleValues,s=this.valueSize,a=t*s,u=a-s,c=(n-e)/(r-e),l=1-c;for(let t=0;t!==s;++t)i[t]=o[u+t]*l+o[a+t]*c;return i}}),ep.prototype=Object.assign(Object.create(Jh.prototype),{constructor:ep,interpolate_:function(t){return this.copySampleValue_(t-1)}}),Object.assign(np,{toJSON:function(t){const e=t.constructor;let n;if(void 0!==e.toJSON)n=e.toJSON(t);else{n={name:t.name,times:Zh.convertArray(t.times,Array),values:Zh.convertArray(t.values,Array)};const e=t.getInterpolation();e!==t.DefaultInterpolation&&(n.interpolation=e)}return n.type=t.ValueTypeName,n}}),Object.assign(np.prototype,{constructor:np,TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:Pi,InterpolantFactoryMethodDiscrete:function(t){return new ep(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodLinear:function(t){return new tp(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:function(t){return new Qh(this.times,this.values,this.getValueSize(),t)},setInterpolation:function(t){let e;switch(t){case ki:e=this.InterpolantFactoryMethodDiscrete;break;case Pi:e=this.InterpolantFactoryMethodLinear;break;case $i:e=this.InterpolantFactoryMethodSmooth}if(void 0===e){const e="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(t===this.DefaultInterpolation)throw new Error(e);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",e),this}return this.createInterpolant=e,this},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return ki;case this.InterpolantFactoryMethodLinear:return Pi;case this.InterpolantFactoryMethodSmooth:return $i}},getValueSize:function(){return this.values.length/this.times.length},shift:function(t){if(0!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]+=t}return this},scale:function(t){if(1!==t){const e=this.times;for(let n=0,r=e.length;n!==r;++n)e[n]*=t}return this},trim:function(t,e){const n=this.times,r=n.length;let i=0,o=r-1;for(;i!==r&&n[i]<t;)++i;for(;-1!==o&&n[o]>e;)--o;if(++o,0!==i||o!==r){i>=o&&(o=Math.max(o,1),i=o-1);const t=this.getValueSize();this.times=Zh.arraySlice(n,i,o),this.values=Zh.arraySlice(this.values,i*t,o*t)}return this},validate:function(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const n=this.times,r=this.values,i=n.length;0===i&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let o=null;for(let e=0;e!==i;e++){const r=n[e];if("number"==typeof r&&isNaN(r)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,e,r),t=!1;break}if(null!==o&&o>r){console.error("THREE.KeyframeTrack: Out of order keys.",this,e,r,o),t=!1;break}o=r}if(void 0!==r&&Zh.isTypedArray(r))for(let e=0,n=r.length;e!==n;++e){const n=r[e];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,e,n),t=!1;break}}return t},optimize:function(){const t=Zh.arraySlice(this.times),e=Zh.arraySlice(this.values),n=this.getValueSize(),r=this.getInterpolation()===$i,i=t.length-1;let o=1;for(let s=1;s<i;++s){let i=!1;const a=t[s];if(a!==t[s+1]&&(1!==s||a!==a[0]))if(r)i=!0;else{const t=s*n,r=t-n,o=t+n;for(let s=0;s!==n;++s){const n=e[t+s];if(n!==e[r+s]||n!==e[o+s]){i=!0;break}}}if(i){if(s!==o){t[o]=t[s];const r=s*n,i=o*n;for(let t=0;t!==n;++t)e[i+t]=e[r+t]}++o}}if(i>0){t[o]=t[i];for(let t=i*n,r=o*n,s=0;s!==n;++s)e[r+s]=e[t+s];++o}return o!==t.length?(this.times=Zh.arraySlice(t,0,o),this.values=Zh.arraySlice(e,0,o*n)):(this.times=t,this.values=e),this},clone:function(){const t=Zh.arraySlice(this.times,0),e=Zh.arraySlice(this.values,0),n=new(0,this.constructor)(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}),rp.prototype=Object.assign(Object.create(np.prototype),{constructor:rp,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:ki,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),ip.prototype=Object.assign(Object.create(np.prototype),{constructor:ip,ValueTypeName:"color"}),op.prototype=Object.assign(Object.create(np.prototype),{constructor:op,ValueTypeName:"number"}),sp.prototype=Object.assign(Object.create(Jh.prototype),{constructor:sp,interpolate_:function(t,e,n,r){const i=this.resultBuffer,o=this.sampleValues,s=this.valueSize,a=(n-e)/(r-e);let u=t*s;for(let t=u+s;u!==t;u+=4)so.slerpFlat(i,0,o,u-s,o,u,a);return i}}),ap.prototype=Object.assign(Object.create(np.prototype),{constructor:ap,ValueTypeName:"quaternion",DefaultInterpolation:Pi,InterpolantFactoryMethodLinear:function(t){return new sp(this.times,this.values,this.getValueSize(),t)},InterpolantFactoryMethodSmooth:void 0}),up.prototype=Object.assign(Object.create(np.prototype),{constructor:up,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:ki,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0}),cp.prototype=Object.assign(Object.create(np.prototype),{constructor:cp,ValueTypeName:"vector"}),Object.assign(lp,{parse:function(t){const e=[],n=t.tracks,r=1/(t.fps||1);for(let t=0,i=n.length;t!==i;++t)e.push(hp(n[t]).scale(r));const i=new lp(t.name,t.duration,e,t.blendMode);return i.uuid=t.uuid,i},toJSON:function(t){const e=[],n=t.tracks,r={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let t=0,r=n.length;t!==r;++t)e.push(np.toJSON(n[t]));return r},CreateFromMorphTargetSequence:function(t,e,n,r){const i=e.length,o=[];for(let t=0;t<i;t++){let s=[],a=[];s.push((t+i-1)%i,t,(t+1)%i),a.push(0,1,0);const u=Zh.getKeyframeOrder(s);s=Zh.sortedArray(s,1,u),a=Zh.sortedArray(a,1,u),r||0!==s[0]||(s.push(i),a.push(a[0])),o.push(new op(".morphTargetInfluences["+e[t].name+"]",s,a).scale(1/n))}return new lp(t,-1,o)},findByName:function(t,e){let n=t;if(!Array.isArray(t)){const e=t;n=e.geometry&&e.geometry.animations||e.animations}for(let t=0;t<n.length;t++)if(n[t].name===e)return n[t];return null},CreateClipsFromMorphTargetSequences:function(t,e,n){const r={},i=/^([\w-]*?)([\d]+)$/;for(let e=0,n=t.length;e<n;e++){const n=t[e],o=n.name.match(i);if(o&&o.length>1){const t=o[1];let e=r[t];e||(r[t]=e=[]),e.push(n)}}const o=[];for(const t in r)o.push(lp.CreateFromMorphTargetSequence(t,r[t],e,n));return o},parseAnimation:function(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(t,e,n,r,i){if(0!==n.length){const o=[],s=[];Zh.flattenJSON(n,o,s,r),0!==o.length&&i.push(new t(e,o,s))}},r=[],i=t.name||"default",o=t.fps||30,s=t.blendMode;let a=t.length||-1;const u=t.hierarchy||[];for(let t=0;t<u.length;t++){const i=u[t].keys;if(i&&0!==i.length)if(i[0].morphTargets){const t={};let e;for(e=0;e<i.length;e++)if(i[e].morphTargets)for(let n=0;n<i[e].morphTargets.length;n++)t[i[e].morphTargets[n]]=-1;for(const n in t){const t=[],o=[];for(let r=0;r!==i[e].morphTargets.length;++r){const r=i[e];t.push(r.time),o.push(r.morphTarget===n?1:0)}r.push(new op(".morphTargetInfluence["+n+"]",t,o))}a=t.length*(o||1)}else{const o=".bones["+e[t].name+"]";n(cp,o+".position",i,"pos",r),n(ap,o+".quaternion",i,"rot",r),n(cp,o+".scale",i,"scl",r)}}return 0===r.length?null:new lp(i,a,r,s)}}),Object.assign(lp.prototype,{resetDuration:function(){let t=0;for(let e=0,n=this.tracks.length;e!==n;++e){const n=this.tracks[e];t=Math.max(t,n.times[n.times.length-1])}return this.duration=t,this},trim:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this},validate:function(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t},optimize:function(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this},clone:function(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new lp(this.name,this.duration,t,this.blendMode)},toJSON:function(){return lp.toJSON(this)}});const pp={enabled:!1,files:{},add:function(t,e){!1!==this.enabled&&(this.files[t]=e)},get:function(t){if(!1!==this.enabled)return this.files[t]},remove:function(t){delete this.files[t]},clear:function(){this.files={}}};const dp=new function(t,e,n){const r=this;let i,o=!1,s=0,a=0;const u=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=n,this.itemStart=function(t){a++,!1===o&&void 0!==r.onStart&&r.onStart(t,s,a),o=!0},this.itemEnd=function(t){s++,void 0!==r.onProgress&&r.onProgress(t,s,a),s===a&&(o=!1,void 0!==r.onLoad&&r.onLoad())},this.itemError=function(t){void 0!==r.onError&&r.onError(t)},this.resolveURL=function(t){return i?i(t):t},this.setURLModifier=function(t){return i=t,this},this.addHandler=function(t,e){return u.push(t,e),this},this.removeHandler=function(t){const e=u.indexOf(t);return-1!==e&&u.splice(e,2),this},this.getHandler=function(t){for(let e=0,n=u.length;e<n;e+=2){const n=u[e],r=u[e+1];if(n.global&&(n.lastIndex=0),n.test(t))return r}return null}};function fp(t){this.manager=void 0!==t?t:dp,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}Object.assign(fp.prototype,{load:function(){},loadAsync:function(t,e){const n=this;return new Promise((function(r,i){n.load(t,r,e,i)}))},parse:function(){},setCrossOrigin:function(t){return this.crossOrigin=t,this},setWithCredentials:function(t){return this.withCredentials=t,this},setPath:function(t){return this.path=t,this},setResourcePath:function(t){return this.resourcePath=t,this},setRequestHeader:function(t){return this.requestHeader=t,this}});const mp={};function gp(t){fp.call(this,t)}function yp(t){fp.call(this,t)}function vp(t){fp.call(this,t)}function xp(t){fp.call(this,t)}function bp(t){fp.call(this,t)}function wp(t){fp.call(this,t)}function _p(t){fp.call(this,t)}function Sp(){this.type="Curve",this.arcLengthDivisions=200}function Tp(t,e,n,r,i,o,s,a){Sp.call(this),this.type="EllipseCurve",this.aX=t||0,this.aY=e||0,this.xRadius=n||1,this.yRadius=r||1,this.aStartAngle=i||0,this.aEndAngle=o||2*Math.PI,this.aClockwise=s||!1,this.aRotation=a||0}function Ep(t,e,n,r,i,o){Tp.call(this,t,e,n,n,r,i,o),this.type="ArcCurve"}function Mp(){let t=0,e=0,n=0,r=0;function i(i,o,s,a){t=i,e=s,n=-3*i+3*o-2*s-a,r=2*i-2*o+s+a}return{initCatmullRom:function(t,e,n,r,o){i(e,n,o*(n-t),o*(r-e))},initNonuniformCatmullRom:function(t,e,n,r,o,s,a){let u=(e-t)/o-(n-t)/(o+s)+(n-e)/s,c=(n-e)/s-(r-e)/(s+a)+(r-n)/a;u*=s,c*=s,i(e,n,u,c)},calc:function(i){const o=i*i;return t+e*i+n*o+r*(o*i)}}}gp.prototype=Object.assign(Object.create(fp.prototype),{constructor:gp,load:function(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,o=pp.get(t);if(void 0!==o)return i.manager.itemStart(t),setTimeout((function(){e&&e(o),i.manager.itemEnd(t)}),0),o;if(void 0!==mp[t])return void mp[t].push({onLoad:e,onProgress:n,onError:r});const s=t.match(/^data:(.*?)(;base64)?,(.*)$/);let a;if(s){const n=s[1],o=!!s[2];let a=s[3];a=decodeURIComponent(a),o&&(a=atob(a));try{let r;const o=(this.responseType||"").toLowerCase();switch(o){case"arraybuffer":case"blob":const t=new Uint8Array(a.length);for(let e=0;e<a.length;e++)t[e]=a.charCodeAt(e);r="blob"===o?new Blob([t.buffer],{type:n}):t.buffer;break;case"document":const e=new DOMParser;r=e.parseFromString(a,n);break;case"json":r=JSON.parse(a);break;default:r=a}setTimeout((function(){e&&e(r),i.manager.itemEnd(t)}),0)}catch(e){setTimeout((function(){r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}),0)}}else{mp[t]=[],mp[t].push({onLoad:e,onProgress:n,onError:r}),a=new XMLHttpRequest,a.open("GET",t,!0),a.addEventListener("load",(function(e){const n=this.response,r=mp[t];if(delete mp[t],200===this.status||0===this.status){0===this.status&&console.warn("THREE.FileLoader: HTTP Status 0 received."),pp.add(t,n);for(let t=0,e=r.length;t<e;t++){const e=r[t];e.onLoad&&e.onLoad(n)}i.manager.itemEnd(t)}else{for(let t=0,n=r.length;t<n;t++){const n=r[t];n.onError&&n.onError(e)}i.manager.itemError(t),i.manager.itemEnd(t)}}),!1),a.addEventListener("progress",(function(e){const n=mp[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onProgress&&r.onProgress(e)}}),!1),a.addEventListener("error",(function(e){const n=mp[t];delete mp[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onError&&r.onError(e)}i.manager.itemError(t),i.manager.itemEnd(t)}),!1),a.addEventListener("abort",(function(e){const n=mp[t];delete mp[t];for(let t=0,r=n.length;t<r;t++){const r=n[t];r.onError&&r.onError(e)}i.manager.itemError(t),i.manager.itemEnd(t)}),!1),void 0!==this.responseType&&(a.responseType=this.responseType),void 0!==this.withCredentials&&(a.withCredentials=this.withCredentials),a.overrideMimeType&&a.overrideMimeType(void 0!==this.mimeType?this.mimeType:"text/plain");for(const t in this.requestHeader)a.setRequestHeader(t,this.requestHeader[t]);a.send(null)}return i.manager.itemStart(t),a},setResponseType:function(t){return this.responseType=t,this},setMimeType:function(t){return this.mimeType=t,this}}),yp.prototype=Object.assign(Object.create(fp.prototype),{constructor:yp,load:function(t,e,n,r){const i=this,o=new gp(i.manager);o.setPath(i.path),o.setRequestHeader(i.requestHeader),o.setWithCredentials(i.withCredentials),o.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)},parse:function(t){const e=[];for(let n=0;n<t.length;n++){const r=lp.parse(t[n]);e.push(r)}return e}}),vp.prototype=Object.assign(Object.create(fp.prototype),{constructor:vp,load:function(t,e,n,r){const i=this,o=[],s=new Zl,a=new gp(this.manager);a.setPath(this.path),a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setWithCredentials(i.withCredentials);let u=0;function c(c){a.load(t[c],(function(t){const n=i.parse(t,!0);o[c]={width:n.width,height:n.height,format:n.format,mipmaps:n.mipmaps},u+=1,6===u&&(1===n.mipmapCount&&(s.minFilter=Ti),s.image=o,s.format=n.format,s.needsUpdate=!0,e&&e(s))}),n,r)}if(Array.isArray(t))for(let e=0,n=t.length;e<n;++e)c(e);else a.load(t,(function(t){const n=i.parse(t,!0);if(n.isCubemap){const t=n.mipmaps.length/n.mipmapCount;for(let e=0;e<t;e++){o[e]={mipmaps:[]};for(let t=0;t<n.mipmapCount;t++)o[e].mipmaps.push(n.mipmaps[e*n.mipmapCount+t]),o[e].format=n.format,o[e].width=n.width,o[e].height=n.height}s.image=o}else s.image.width=n.width,s.image.height=n.height,s.mipmaps=n.mipmaps;1===n.mipmapCount&&(s.minFilter=Ti),s.format=n.format,s.needsUpdate=!0,e&&e(s)}),n,r);return s}}),xp.prototype=Object.assign(Object.create(fp.prototype),{constructor:xp,load:function(t,e,n,r){void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,o=pp.get(t);if(void 0!==o)return i.manager.itemStart(t),setTimeout((function(){e&&e(o),i.manager.itemEnd(t)}),0),o;const s=document.createElementNS("http://www.w3.org/1999/xhtml","img");function a(){s.removeEventListener("load",a,!1),s.removeEventListener("error",u,!1),pp.add(t,this),e&&e(this),i.manager.itemEnd(t)}function u(e){s.removeEventListener("load",a,!1),s.removeEventListener("error",u,!1),r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)}return s.addEventListener("load",a,!1),s.addEventListener("error",u,!1),"data:"!==t.substr(0,5)&&void 0!==this.crossOrigin&&(s.crossOrigin=this.crossOrigin),i.manager.itemStart(t),s.src=t,s}}),bp.prototype=Object.assign(Object.create(fp.prototype),{constructor:bp,load:function(t,e,n,r){const i=new La,o=new xp(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let s=0;function a(n){o.load(t[n],(function(t){i.images[n]=t,s++,6===s&&(i.needsUpdate=!0,e&&e(i))}),void 0,r)}for(let e=0;e<t.length;++e)a(e);return i}}),wp.prototype=Object.assign(Object.create(fp.prototype),{constructor:wp,load:function(t,e,n,r){const i=this,o=new Pa,s=new gp(this.manager);return s.setResponseType("arraybuffer"),s.setRequestHeader(this.requestHeader),s.setPath(this.path),s.setWithCredentials(i.withCredentials),s.load(t,(function(t){const n=i.parse(t);n&&(void 0!==n.image?o.image=n.image:void 0!==n.data&&(o.image.width=n.width,o.image.height=n.height,o.image.data=n.data),o.wrapS=void 0!==n.wrapS?n.wrapS:wi,o.wrapT=void 0!==n.wrapT?n.wrapT:wi,o.magFilter=void 0!==n.magFilter?n.magFilter:Ti,o.minFilter=void 0!==n.minFilter?n.minFilter:Ti,o.anisotropy=void 0!==n.anisotropy?n.anisotropy:1,void 0!==n.format&&(o.format=n.format),void 0!==n.type&&(o.type=n.type),void 0!==n.mipmaps&&(o.mipmaps=n.mipmaps,o.minFilter=Ei),1===n.mipmapCount&&(o.minFilter=Ti),o.needsUpdate=!0,e&&e(o,n))}),n,r),o}}),_p.prototype=Object.assign(Object.create(fp.prototype),{constructor:_p,load:function(t,e,n,r){const i=new eo,o=new xp(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,(function(n){i.image=n;const r=t.search(/\.jpe?g($|\?)/i)>0||0===t.search(/^data\:image\/jpeg/);i.format=r?Ii:Di,i.needsUpdate=!0,void 0!==e&&e(i)}),n,r),i}}),Object.assign(Sp.prototype,{getPoint:function(){return console.warn("THREE.Curve: .getPoint() not implemented."),null},getPointAt:function(t,e){const n=this.getUtoTmapping(t);return this.getPoint(n,e)},getPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return e},getSpacedPoints:function(t=5){const e=[];for(let n=0;n<=t;n++)e.push(this.getPointAt(n/t));return e},getLength:function(){const t=this.getLengths();return t[t.length-1]},getLengths:function(t){if(void 0===t&&(t=this.arcLengthDivisions),this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let n,r=this.getPoint(0),i=0;e.push(0);for(let o=1;o<=t;o++)n=this.getPoint(o/t),i+=n.distanceTo(r),e.push(i),r=n;return this.cacheArcLengths=e,e},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(t,e){const n=this.getLengths();let r=0;const i=n.length;let o;o=e||t*n[i-1];let s,a=0,u=i-1;for(;a<=u;)if(r=Math.floor(a+(u-a)/2),s=n[r]-o,s<0)a=r+1;else{if(!(s>0)){u=r;break}u=r-1}if(r=u,n[r]===o)return r/(i-1);const c=n[r];return(r+(o-c)/(n[r+1]-c))/(i-1)},getTangent:function(t,e){const n=1e-4;let r=t-n,i=t+n;r<0&&(r=0),i>1&&(i=1);const o=this.getPoint(r),s=this.getPoint(i),a=e||(o.isVector2?new Ki:new ao);return a.copy(s).sub(o).normalize(),a},getTangentAt:function(t,e){const n=this.getUtoTmapping(t);return this.getTangent(n,e)},computeFrenetFrames:function(t,e){const n=new ao,r=[],i=[],o=[],s=new ao,a=new Po;for(let e=0;e<=t;e++){const n=e/t;r[e]=this.getTangentAt(n,new ao),r[e].normalize()}i[0]=new ao,o[0]=new ao;let u=Number.MAX_VALUE;const c=Math.abs(r[0].x),l=Math.abs(r[0].y),h=Math.abs(r[0].z);c<=u&&(u=c,n.set(1,0,0)),l<=u&&(u=l,n.set(0,1,0)),h<=u&&n.set(0,0,1),s.crossVectors(r[0],n).normalize(),i[0].crossVectors(r[0],s),o[0].crossVectors(r[0],i[0]);for(let e=1;e<=t;e++){if(i[e]=i[e-1].clone(),o[e]=o[e-1].clone(),s.crossVectors(r[e-1],r[e]),s.length()>Number.EPSILON){s.normalize();const t=Math.acos(Yi.clamp(r[e-1].dot(r[e]),-1,1));i[e].applyMatrix4(a.makeRotationAxis(s,t))}o[e].crossVectors(r[e],i[e])}if(!0===e){let e=Math.acos(Yi.clamp(i[0].dot(i[t]),-1,1));e/=t,r[0].dot(s.crossVectors(i[0],i[t]))>0&&(e=-e);for(let n=1;n<=t;n++)i[n].applyMatrix4(a.makeRotationAxis(r[n],e*n)),o[n].crossVectors(r[n],i[n])}return{tangents:r,normals:i,binormals:o}},clone:function(){return(new this.constructor).copy(this)},copy:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this},toJSON:function(){const t={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t},fromJSON:function(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}),Tp.prototype=Object.create(Sp.prototype),Tp.prototype.constructor=Tp,Tp.prototype.isEllipseCurve=!0,Tp.prototype.getPoint=function(t,e){const n=e||new Ki,r=2*Math.PI;let i=this.aEndAngle-this.aStartAngle;const o=Math.abs(i)<Number.EPSILON;for(;i<0;)i+=r;for(;i>r;)i-=r;i<Number.EPSILON&&(i=o?0:r),!0!==this.aClockwise||o||(i===r?i=-r:i-=r);const s=this.aStartAngle+t*i;let a=this.aX+this.xRadius*Math.cos(s),u=this.aY+this.yRadius*Math.sin(s);if(0!==this.aRotation){const t=Math.cos(this.aRotation),e=Math.sin(this.aRotation),n=a-this.aX,r=u-this.aY;a=n*t-r*e+this.aX,u=n*e+r*t+this.aY}return n.set(a,u)},Tp.prototype.copy=function(t){return Sp.prototype.copy.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},Tp.prototype.toJSON=function(){const t=Sp.prototype.toJSON.call(this);return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t},Tp.prototype.fromJSON=function(t){return Sp.prototype.fromJSON.call(this,t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this},Ep.prototype=Object.create(Tp.prototype),Ep.prototype.constructor=Ep,Ep.prototype.isArcCurve=!0;const Cp=new ao,Ap=new Mp,Np=new Mp,Rp=new Mp;function Ip(t=[],e=!1,n="centripetal",r=.5){Sp.call(this),this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=n,this.tension=r}function Dp(t,e,n,r,i){const o=.5*(r-e),s=.5*(i-n),a=t*t;return(2*n-2*r+o+s)*(t*a)+(-3*n+3*r-2*o-s)*a+o*t+n}function Op(t,e,n,r){return function(t,e){const n=1-t;return n*n*e}(t,e)+function(t,e){return 2*(1-t)*t*e}(t,n)+function(t,e){return t*t*e}(t,r)}function Lp(t,e,n,r,i){return function(t,e){const n=1-t;return n*n*n*e}(t,e)+function(t,e){const n=1-t;return 3*n*n*t*e}(t,n)+function(t,e){return 3*(1-t)*t*t*e}(t,r)+function(t,e){return t*t*t*e}(t,i)}function kp(t=new Ki,e=new Ki,n=new Ki,r=new Ki){Sp.call(this),this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=n,this.v3=r}function Pp(t=new ao,e=new ao,n=new ao,r=new ao){Sp.call(this),this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=n,this.v3=r}function $p(t=new Ki,e=new Ki){Sp.call(this),this.type="LineCurve",this.v1=t,this.v2=e}function Bp(t=new ao,e=new ao){Sp.call(this),this.type="LineCurve3",this.v1=t,this.v2=e}function Fp(t=new Ki,e=new Ki,n=new Ki){Sp.call(this),this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=n}function Up(t=new ao,e=new ao,n=new ao){Sp.call(this),this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=n}function zp(t=[]){Sp.call(this),this.type="SplineCurve",this.points=t}Ip.prototype=Object.create(Sp.prototype),Ip.prototype.constructor=Ip,Ip.prototype.isCatmullRomCurve3=!0,Ip.prototype.getPoint=function(t,e=new ao){const n=e,r=this.points,i=r.length,o=(i-(this.closed?0:1))*t;let s,a,u=Math.floor(o),c=o-u;this.closed?u+=u>0?0:(Math.floor(Math.abs(u)/i)+1)*i:0===c&&u===i-1&&(u=i-2,c=1),this.closed||u>0?s=r[(u-1)%i]:(Cp.subVectors(r[0],r[1]).add(r[0]),s=Cp);const l=r[u%i],h=r[(u+1)%i];if(this.closed||u+2<i?a=r[(u+2)%i]:(Cp.subVectors(r[i-1],r[i-2]).add(r[i-1]),a=Cp),"centripetal"===this.curveType||"chordal"===this.curveType){const t="chordal"===this.curveType?.5:.25;let e=Math.pow(s.distanceToSquared(l),t),n=Math.pow(l.distanceToSquared(h),t),r=Math.pow(h.distanceToSquared(a),t);n<1e-4&&(n=1),e<1e-4&&(e=n),r<1e-4&&(r=n),Ap.initNonuniformCatmullRom(s.x,l.x,h.x,a.x,e,n,r),Np.initNonuniformCatmullRom(s.y,l.y,h.y,a.y,e,n,r),Rp.initNonuniformCatmullRom(s.z,l.z,h.z,a.z,e,n,r)}else"catmullrom"===this.curveType&&(Ap.initCatmullRom(s.x,l.x,h.x,a.x,this.tension),Np.initCatmullRom(s.y,l.y,h.y,a.y,this.tension),Rp.initCatmullRom(s.z,l.z,h.z,a.z,this.tension));return n.set(Ap.calc(c),Np.calc(c),Rp.calc(c)),n},Ip.prototype.copy=function(t){Sp.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},Ip.prototype.toJSON=function(){const t=Sp.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t},Ip.prototype.fromJSON=function(t){Sp.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new ao).fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this},kp.prototype=Object.create(Sp.prototype),kp.prototype.constructor=kp,kp.prototype.isCubicBezierCurve=!0,kp.prototype.getPoint=function(t,e=new Ki){const n=e,r=this.v0,i=this.v1,o=this.v2,s=this.v3;return n.set(Lp(t,r.x,i.x,o.x,s.x),Lp(t,r.y,i.y,o.y,s.y)),n},kp.prototype.copy=function(t){return Sp.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},kp.prototype.toJSON=function(){const t=Sp.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},kp.prototype.fromJSON=function(t){return Sp.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},Pp.prototype=Object.create(Sp.prototype),Pp.prototype.constructor=Pp,Pp.prototype.isCubicBezierCurve3=!0,Pp.prototype.getPoint=function(t,e=new ao){const n=e,r=this.v0,i=this.v1,o=this.v2,s=this.v3;return n.set(Lp(t,r.x,i.x,o.x,s.x),Lp(t,r.y,i.y,o.y,s.y),Lp(t,r.z,i.z,o.z,s.z)),n},Pp.prototype.copy=function(t){return Sp.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this},Pp.prototype.toJSON=function(){const t=Sp.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t},Pp.prototype.fromJSON=function(t){return Sp.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this},$p.prototype=Object.create(Sp.prototype),$p.prototype.constructor=$p,$p.prototype.isLineCurve=!0,$p.prototype.getPoint=function(t,e=new Ki){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},$p.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},$p.prototype.getTangent=function(t,e){const n=e||new Ki;return n.copy(this.v2).sub(this.v1).normalize(),n},$p.prototype.copy=function(t){return Sp.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},$p.prototype.toJSON=function(){const t=Sp.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},$p.prototype.fromJSON=function(t){return Sp.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Bp.prototype=Object.create(Sp.prototype),Bp.prototype.constructor=Bp,Bp.prototype.isLineCurve3=!0,Bp.prototype.getPoint=function(t,e=new ao){const n=e;return 1===t?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(t).add(this.v1)),n},Bp.prototype.getPointAt=function(t,e){return this.getPoint(t,e)},Bp.prototype.copy=function(t){return Sp.prototype.copy.call(this,t),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Bp.prototype.toJSON=function(){const t=Sp.prototype.toJSON.call(this);return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Bp.prototype.fromJSON=function(t){return Sp.prototype.fromJSON.call(this,t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Fp.prototype=Object.create(Sp.prototype),Fp.prototype.constructor=Fp,Fp.prototype.isQuadraticBezierCurve=!0,Fp.prototype.getPoint=function(t,e=new Ki){const n=e,r=this.v0,i=this.v1,o=this.v2;return n.set(Op(t,r.x,i.x,o.x),Op(t,r.y,i.y,o.y)),n},Fp.prototype.copy=function(t){return Sp.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Fp.prototype.toJSON=function(){const t=Sp.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Fp.prototype.fromJSON=function(t){return Sp.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},Up.prototype=Object.create(Sp.prototype),Up.prototype.constructor=Up,Up.prototype.isQuadraticBezierCurve3=!0,Up.prototype.getPoint=function(t,e=new ao){const n=e,r=this.v0,i=this.v1,o=this.v2;return n.set(Op(t,r.x,i.x,o.x),Op(t,r.y,i.y,o.y),Op(t,r.z,i.z,o.z)),n},Up.prototype.copy=function(t){return Sp.prototype.copy.call(this,t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this},Up.prototype.toJSON=function(){const t=Sp.prototype.toJSON.call(this);return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t},Up.prototype.fromJSON=function(t){return Sp.prototype.fromJSON.call(this,t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this},zp.prototype=Object.create(Sp.prototype),zp.prototype.constructor=zp,zp.prototype.isSplineCurve=!0,zp.prototype.getPoint=function(t,e=new Ki){const n=e,r=this.points,i=(r.length-1)*t,o=Math.floor(i),s=i-o,a=r[0===o?o:o-1],u=r[o],c=r[o>r.length-2?r.length-1:o+1],l=r[o>r.length-3?r.length-1:o+2];return n.set(Dp(s,a.x,u.x,c.x,l.x),Dp(s,a.y,u.y,c.y,l.y)),n},zp.prototype.copy=function(t){Sp.prototype.copy.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push(n.clone())}return this},zp.prototype.toJSON=function(){const t=Sp.prototype.toJSON.call(this);t.points=[];for(let e=0,n=this.points.length;e<n;e++){const n=this.points[e];t.points.push(n.toArray())}return t},zp.prototype.fromJSON=function(t){Sp.prototype.fromJSON.call(this,t),this.points=[];for(let e=0,n=t.points.length;e<n;e++){const n=t.points[e];this.points.push((new Ki).fromArray(n))}return this};var Vp=Object.freeze({__proto__:null,ArcCurve:Ep,CatmullRomCurve3:Ip,CubicBezierCurve:kp,CubicBezierCurve3:Pp,EllipseCurve:Tp,LineCurve:$p,LineCurve3:Bp,QuadraticBezierCurve:Fp,QuadraticBezierCurve3:Up,SplineCurve:zp});function Wp(){Sp.call(this),this.type="CurvePath",this.curves=[],this.autoClose=!1}function Hp(t){Wp.call(this),this.type="Path",this.currentPoint=new Ki,t&&this.setFromPoints(t)}function Gp(t){Hp.call(this,t),this.uuid=Yi.generateUUID(),this.type="Shape",this.holes=[]}function jp(t,e=1){as.call(this),this.type="Light",this.color=new Ns(t),this.intensity=e}function Xp(t,e,n){jp.call(this,t,n),this.type="HemisphereLight",this.position.copy(as.DefaultUp),this.updateMatrix(),this.groundColor=new Ns(e)}function qp(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.mapSize=new Ki(512,512),this.map=null,this.mapPass=null,this.matrix=new Po,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Fa,this._frameExtents=new Ki(1,1),this._viewportCount=1,this._viewports=[new ro(0,0,1,1)]}function Yp(){qp.call(this,new Ia(50,1,.5,500)),this.focus=1}function Kp(t,e,n,r,i,o){jp.call(this,t,e),this.type="SpotLight",this.position.copy(as.DefaultUp),this.updateMatrix(),this.target=new as,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(t){this.intensity=t/Math.PI}}),this.distance=void 0!==n?n:0,this.angle=void 0!==r?r:Math.PI/3,this.penumbra=void 0!==i?i:0,this.decay=void 0!==o?o:1,this.shadow=new Yp}function Zp(){qp.call(this,new Ia(90,1,.5,500)),this._frameExtents=new Ki(4,2),this._viewportCount=6,this._viewports=[new ro(2,1,1,1),new ro(0,1,1,1),new ro(3,1,1,1),new ro(1,1,1,1),new ro(3,0,1,1),new ro(1,0,1,1)],this._cubeDirections=[new ao(1,0,0),new ao(-1,0,0),new ao(0,0,1),new ao(0,0,-1),new ao(0,1,0),new ao(0,-1,0)],this._cubeUps=[new ao(0,1,0),new ao(0,1,0),new ao(0,1,0),new ao(0,1,0),new ao(0,0,1),new ao(0,0,-1)]}function Jp(t,e,n,r){jp.call(this,t,e),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return 4*this.intensity*Math.PI},set:function(t){this.intensity=t/(4*Math.PI)}}),this.distance=void 0!==n?n:0,this.decay=void 0!==r?r:1,this.shadow=new Zp}function Qp(t=-1,e=1,n=1,r=-1,i=.1,o=2e3){Ra.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=n,this.bottom=r,this.near=i,this.far=o,this.updateProjectionMatrix()}function td(){qp.call(this,new Qp(-5,5,5,-5,.5,500))}function ed(t,e){jp.call(this,t,e),this.type="DirectionalLight",this.position.copy(as.DefaultUp),this.updateMatrix(),this.target=new as,this.shadow=new td}function nd(t,e){jp.call(this,t,e),this.type="AmbientLight"}function rd(t,e,n,r){jp.call(this,t,e),this.type="RectAreaLight",this.width=void 0!==n?n:10,this.height=void 0!==r?r:10}Wp.prototype=Object.assign(Object.create(Sp.prototype),{constructor:Wp,add:function(t){this.curves.push(t)},closePath:function(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);t.equals(e)||this.curves.push(new $p(e,t))},getPoint:function(t){const e=t*this.getLength(),n=this.getCurveLengths();let r=0;for(;r<n.length;){if(n[r]>=e){const t=n[r]-e,i=this.curves[r],o=i.getLength(),s=0===o?0:1-t/o;return i.getPointAt(s)}r++}return null},getLength:function(){const t=this.getCurveLengths();return t[t.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let n=0,r=this.curves.length;n<r;n++)e+=this.curves[n].getLength(),t.push(e);return this.cacheLengths=t,t},getSpacedPoints:function(t=40){const e=[];for(let n=0;n<=t;n++)e.push(this.getPoint(n/t));return this.autoClose&&e.push(e[0]),e},getPoints:function(t=12){const e=[];let n;for(let r=0,i=this.curves;r<i.length;r++){const o=i[r],s=o&&o.isEllipseCurve?2*t:o&&(o.isLineCurve||o.isLineCurve3)?1:o&&o.isSplineCurve?t*o.points.length:t,a=o.getPoints(s);for(let t=0;t<a.length;t++){const r=a[t];n&&n.equals(r)||(e.push(r),n=r)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e},copy:function(t){Sp.prototype.copy.call(this,t),this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this},toJSON:function(){const t=Sp.prototype.toJSON.call(this);t.autoClose=this.autoClose,t.curves=[];for(let e=0,n=this.curves.length;e<n;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t},fromJSON:function(t){Sp.prototype.fromJSON.call(this,t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,n=t.curves.length;e<n;e++){const n=t.curves[e];this.curves.push((new Vp[n.type]).fromJSON(n))}return this}}),Hp.prototype=Object.assign(Object.create(Wp.prototype),{constructor:Hp,setFromPoints:function(t){this.moveTo(t[0].x,t[0].y);for(let e=1,n=t.length;e<n;e++)this.lineTo(t[e].x,t[e].y);return this},moveTo:function(t,e){return this.currentPoint.set(t,e),this},lineTo:function(t,e){const n=new $p(this.currentPoint.clone(),new Ki(t,e));return this.curves.push(n),this.currentPoint.set(t,e),this},quadraticCurveTo:function(t,e,n,r){const i=new Fp(this.currentPoint.clone(),new Ki(t,e),new Ki(n,r));return this.curves.push(i),this.currentPoint.set(n,r),this},bezierCurveTo:function(t,e,n,r,i,o){const s=new kp(this.currentPoint.clone(),new Ki(t,e),new Ki(n,r),new Ki(i,o));return this.curves.push(s),this.currentPoint.set(i,o),this},splineThru:function(t){const e=new zp([this.currentPoint.clone()].concat(t));return this.curves.push(e),this.currentPoint.copy(t[t.length-1]),this},arc:function(t,e,n,r,i,o){const s=this.currentPoint.x,a=this.currentPoint.y;return this.absarc(t+s,e+a,n,r,i,o),this},absarc:function(t,e,n,r,i,o){return this.absellipse(t,e,n,n,r,i,o),this},ellipse:function(t,e,n,r,i,o,s,a){const u=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+u,e+c,n,r,i,o,s,a),this},absellipse:function(t,e,n,r,i,o,s,a){const u=new Tp(t,e,n,r,i,o,s,a);if(this.curves.length>0){const t=u.getPoint(0);t.equals(this.currentPoint)||this.lineTo(t.x,t.y)}this.curves.push(u);const c=u.getPoint(1);return this.currentPoint.copy(c),this},copy:function(t){return Wp.prototype.copy.call(this,t),this.currentPoint.copy(t.currentPoint),this},toJSON:function(){const t=Wp.prototype.toJSON.call(this);return t.currentPoint=this.currentPoint.toArray(),t},fromJSON:function(t){return Wp.prototype.fromJSON.call(this,t),this.currentPoint.fromArray(t.currentPoint),this}}),Gp.prototype=Object.assign(Object.create(Hp.prototype),{constructor:Gp,getPointsHoles:function(t){const e=[];for(let n=0,r=this.holes.length;n<r;n++)e[n]=this.holes[n].getPoints(t);return e},extractPoints:function(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}},copy:function(t){Hp.prototype.copy.call(this,t),this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push(n.clone())}return this},toJSON:function(){const t=Hp.prototype.toJSON.call(this);t.uuid=this.uuid,t.holes=[];for(let e=0,n=this.holes.length;e<n;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t},fromJSON:function(t){Hp.prototype.fromJSON.call(this,t),this.uuid=t.uuid,this.holes=[];for(let e=0,n=t.holes.length;e<n;e++){const n=t.holes[e];this.holes.push((new Hp).fromJSON(n))}return this}}),jp.prototype=Object.assign(Object.create(as.prototype),{constructor:jp,isLight:!0,copy:function(t){return as.prototype.copy.call(this,t),this.color.copy(t.color),this.intensity=t.intensity,this},toJSON:function(t){const e=as.prototype.toJSON.call(this,t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,void 0!==this.groundColor&&(e.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(e.object.distance=this.distance),void 0!==this.angle&&(e.object.angle=this.angle),void 0!==this.decay&&(e.object.decay=this.decay),void 0!==this.penumbra&&(e.object.penumbra=this.penumbra),void 0!==this.shadow&&(e.object.shadow=this.shadow.toJSON()),e}}),Xp.prototype=Object.assign(Object.create(jp.prototype),{constructor:Xp,isHemisphereLight:!0,copy:function(t){return jp.prototype.copy.call(this,t),this.groundColor.copy(t.groundColor),this}}),Object.assign(qp.prototype,{_projScreenMatrix:new Po,_lightPositionWorld:new ao,_lookTarget:new ao,getViewportCount:function(){return this._viewportCount},getFrustum:function(){return this._frustum},updateMatrices:function(t){const e=this.camera,n=this.matrix,r=this._projScreenMatrix,i=this._lookTarget,o=this._lightPositionWorld;o.setFromMatrixPosition(t.matrixWorld),e.position.copy(o),i.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(i),e.updateMatrixWorld(),r.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(r),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(e.projectionMatrix),n.multiply(e.matrixWorldInverse)},getViewport:function(t){return this._viewports[t]},getFrameExtents:function(){return this._frameExtents},copy:function(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t={};return 0!==this.bias&&(t.bias=this.bias),0!==this.normalBias&&(t.normalBias=this.normalBias),1!==this.radius&&(t.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}),Yp.prototype=Object.assign(Object.create(qp.prototype),{constructor:Yp,isSpotLightShadow:!0,updateMatrices:function(t){const e=this.camera,n=2*Yi.RAD2DEG*t.angle*this.focus,r=this.mapSize.width/this.mapSize.height,i=t.distance||e.far;n===e.fov&&r===e.aspect&&i===e.far||(e.fov=n,e.aspect=r,e.far=i,e.updateProjectionMatrix()),qp.prototype.updateMatrices.call(this,t)}}),Kp.prototype=Object.assign(Object.create(jp.prototype),{constructor:Kp,isSpotLight:!0,copy:function(t){return jp.prototype.copy.call(this,t),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),Zp.prototype=Object.assign(Object.create(qp.prototype),{constructor:Zp,isPointLightShadow:!0,updateMatrices:function(t,e=0){const n=this.camera,r=this.matrix,i=this._lightPositionWorld,o=this._lookTarget,s=this._projScreenMatrix;i.setFromMatrixPosition(t.matrixWorld),n.position.copy(i),o.copy(n.position),o.add(this._cubeDirections[e]),n.up.copy(this._cubeUps[e]),n.lookAt(o),n.updateMatrixWorld(),r.makeTranslation(-i.x,-i.y,-i.z),s.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(s)}}),Jp.prototype=Object.assign(Object.create(jp.prototype),{constructor:Jp,isPointLight:!0,copy:function(t){return jp.prototype.copy.call(this,t),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}),Qp.prototype=Object.assign(Object.create(Ra.prototype),{constructor:Qp,isOrthographicCamera:!0,copy:function(t,e){return Ra.prototype.copy.call(this,t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=null===t.view?null:Object.assign({},t.view),this},setViewOffset:function(t,e,n,r,i,o){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=n,this.view.offsetY=r,this.view.width=i,this.view.height=o,this.updateProjectionMatrix()},clearViewOffset:function(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()},updateProjectionMatrix:function(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let i=n-t,o=n+t,s=r+e,a=r-e;if(null!==this.view&&this.view.enabled){const t=(this.right-this.left)/this.view.fullWidth/this.zoom,e=(this.top-this.bottom)/this.view.fullHeight/this.zoom;i+=t*this.view.offsetX,o=i+t*this.view.width,s-=e*this.view.offsetY,a=s-e*this.view.height}this.projectionMatrix.makeOrthographic(i,o,s,a,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()},toJSON:function(t){const e=as.prototype.toJSON.call(this,t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,null!==this.view&&(e.object.view=Object.assign({},this.view)),e}}),td.prototype=Object.assign(Object.create(qp.prototype),{constructor:td,isDirectionalLightShadow:!0,updateMatrices:function(t){qp.prototype.updateMatrices.call(this,t)}}),ed.prototype=Object.assign(Object.create(jp.prototype),{constructor:ed,isDirectionalLight:!0,copy:function(t){return jp.prototype.copy.call(this,t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}),nd.prototype=Object.assign(Object.create(jp.prototype),{constructor:nd,isAmbientLight:!0}),rd.prototype=Object.assign(Object.create(jp.prototype),{constructor:rd,isRectAreaLight:!0,copy:function(t){return jp.prototype.copy.call(this,t),this.width=t.width,this.height=t.height,this},toJSON:function(t){const e=jp.prototype.toJSON.call(this,t);return e.object.width=this.width,e.object.height=this.height,e}});class id{constructor(){Object.defineProperty(this,"isSphericalHarmonics3",{value:!0}),this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new ao)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const n=t.x,r=t.y,i=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.282095),e.addScaledVector(o[1],.488603*r),e.addScaledVector(o[2],.488603*i),e.addScaledVector(o[3],.488603*n),e.addScaledVector(o[4],n*r*1.092548),e.addScaledVector(o[5],r*i*1.092548),e.addScaledVector(o[6],.315392*(3*i*i-1)),e.addScaledVector(o[7],n*i*1.092548),e.addScaledVector(o[8],.546274*(n*n-r*r)),e}getIrradianceAt(t,e){const n=t.x,r=t.y,i=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.886227),e.addScaledVector(o[1],1.023328*r),e.addScaledVector(o[2],1.023328*i),e.addScaledVector(o[3],1.023328*n),e.addScaledVector(o[4],.858086*n*r),e.addScaledVector(o[5],.858086*r*i),e.addScaledVector(o[6],.743125*i*i-.247708),e.addScaledVector(o[7],.858086*n*i),e.addScaledVector(o[8],.429043*(n*n-r*r)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(t.coefficients[n],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let n=0;n<9;n++)this.coefficients[n].lerp(t.coefficients[n],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return(new this.constructor).copy(this)}fromArray(t,e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].fromArray(t,e+3*r);return this}toArray(t=[],e=0){const n=this.coefficients;for(let r=0;r<9;r++)n[r].toArray(t,e+3*r);return t}static getBasisAt(t,e){const n=t.x,r=t.y,i=t.z;e[0]=.282095,e[1]=.488603*r,e[2]=.488603*i,e[3]=.488603*n,e[4]=1.092548*n*r,e[5]=1.092548*r*i,e[6]=.315392*(3*i*i-1),e[7]=1.092548*n*i,e[8]=.546274*(n*n-r*r)}}function od(t,e){jp.call(this,void 0,e),this.type="LightProbe",this.sh=void 0!==t?t:new id}function sd(t){fp.call(this,t),this.textures={}}od.prototype=Object.assign(Object.create(jp.prototype),{constructor:od,isLightProbe:!0,copy:function(t){return jp.prototype.copy.call(this,t),this.sh.copy(t.sh),this},fromJSON:function(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this},toJSON:function(t){const e=jp.prototype.toJSON.call(this,t);return e.object.sh=this.sh.toArray(),e}}),sd.prototype=Object.assign(Object.create(fp.prototype),{constructor:sd,load:function(t,e,n,r){const i=this,o=new gp(i.manager);o.setPath(i.path),o.setRequestHeader(i.requestHeader),o.setWithCredentials(i.withCredentials),o.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)},parse:function(t){const e=this.textures;function n(t){return void 0===e[t]&&console.warn("THREE.MaterialLoader: Undefined texture",t),e[t]}const r=new Kh[t.type];if(void 0!==t.uuid&&(r.uuid=t.uuid),void 0!==t.name&&(r.name=t.name),void 0!==t.color&&void 0!==r.color&&r.color.setHex(t.color),void 0!==t.roughness&&(r.roughness=t.roughness),void 0!==t.metalness&&(r.metalness=t.metalness),void 0!==t.sheen&&(r.sheen=(new Ns).setHex(t.sheen)),void 0!==t.emissive&&void 0!==r.emissive&&r.emissive.setHex(t.emissive),void 0!==t.specular&&void 0!==r.specular&&r.specular.setHex(t.specular),void 0!==t.shininess&&(r.shininess=t.shininess),void 0!==t.clearcoat&&(r.clearcoat=t.clearcoat),void 0!==t.clearcoatRoughness&&(r.clearcoatRoughness=t.clearcoatRoughness),void 0!==t.fog&&(r.fog=t.fog),void 0!==t.flatShading&&(r.flatShading=t.flatShading),void 0!==t.blending&&(r.blending=t.blending),void 0!==t.combine&&(r.combine=t.combine),void 0!==t.side&&(r.side=t.side),void 0!==t.opacity&&(r.opacity=t.opacity),void 0!==t.transparent&&(r.transparent=t.transparent),void 0!==t.alphaTest&&(r.alphaTest=t.alphaTest),void 0!==t.depthTest&&(r.depthTest=t.depthTest),void 0!==t.depthWrite&&(r.depthWrite=t.depthWrite),void 0!==t.colorWrite&&(r.colorWrite=t.colorWrite),void 0!==t.stencilWrite&&(r.stencilWrite=t.stencilWrite),void 0!==t.stencilWriteMask&&(r.stencilWriteMask=t.stencilWriteMask),void 0!==t.stencilFunc&&(r.stencilFunc=t.stencilFunc),void 0!==t.stencilRef&&(r.stencilRef=t.stencilRef),void 0!==t.stencilFuncMask&&(r.stencilFuncMask=t.stencilFuncMask),void 0!==t.stencilFail&&(r.stencilFail=t.stencilFail),void 0!==t.stencilZFail&&(r.stencilZFail=t.stencilZFail),void 0!==t.stencilZPass&&(r.stencilZPass=t.stencilZPass),void 0!==t.wireframe&&(r.wireframe=t.wireframe),void 0!==t.wireframeLinewidth&&(r.wireframeLinewidth=t.wireframeLinewidth),void 0!==t.wireframeLinecap&&(r.wireframeLinecap=t.wireframeLinecap),void 0!==t.wireframeLinejoin&&(r.wireframeLinejoin=t.wireframeLinejoin),void 0!==t.rotation&&(r.rotation=t.rotation),1!==t.linewidth&&(r.linewidth=t.linewidth),void 0!==t.dashSize&&(r.dashSize=t.dashSize),void 0!==t.gapSize&&(r.gapSize=t.gapSize),void 0!==t.scale&&(r.scale=t.scale),void 0!==t.polygonOffset&&(r.polygonOffset=t.polygonOffset),void 0!==t.polygonOffsetFactor&&(r.polygonOffsetFactor=t.polygonOffsetFactor),void 0!==t.polygonOffsetUnits&&(r.polygonOffsetUnits=t.polygonOffsetUnits),void 0!==t.skinning&&(r.skinning=t.skinning),void 0!==t.morphTargets&&(r.morphTargets=t.morphTargets),void 0!==t.morphNormals&&(r.morphNormals=t.morphNormals),void 0!==t.dithering&&(r.dithering=t.dithering),void 0!==t.vertexTangents&&(r.vertexTangents=t.vertexTangents),void 0!==t.visible&&(r.visible=t.visible),void 0!==t.toneMapped&&(r.toneMapped=t.toneMapped),void 0!==t.userData&&(r.userData=t.userData),void 0!==t.vertexColors&&("number"==typeof t.vertexColors?r.vertexColors=t.vertexColors>0:r.vertexColors=t.vertexColors),void 0!==t.uniforms)for(const e in t.uniforms){const i=t.uniforms[e];switch(r.uniforms[e]={},i.type){case"t":r.uniforms[e].value=n(i.value);break;case"c":r.uniforms[e].value=(new Ns).setHex(i.value);break;case"v2":r.uniforms[e].value=(new Ki).fromArray(i.value);break;case"v3":r.uniforms[e].value=(new ao).fromArray(i.value);break;case"v4":r.uniforms[e].value=(new ro).fromArray(i.value);break;case"m3":r.uniforms[e].value=(new Zi).fromArray(i.value);break;case"m4":r.uniforms[e].value=(new Po).fromArray(i.value);break;default:r.uniforms[e].value=i.value}}if(void 0!==t.defines&&(r.defines=t.defines),void 0!==t.vertexShader&&(r.vertexShader=t.vertexShader),void 0!==t.fragmentShader&&(r.fragmentShader=t.fragmentShader),void 0!==t.extensions)for(const e in t.extensions)r.extensions[e]=t.extensions[e];if(void 0!==t.shading&&(r.flatShading=1===t.shading),void 0!==t.size&&(r.size=t.size),void 0!==t.sizeAttenuation&&(r.sizeAttenuation=t.sizeAttenuation),void 0!==t.map&&(r.map=n(t.map)),void 0!==t.matcap&&(r.matcap=n(t.matcap)),void 0!==t.alphaMap&&(r.alphaMap=n(t.alphaMap)),void 0!==t.bumpMap&&(r.bumpMap=n(t.bumpMap)),void 0!==t.bumpScale&&(r.bumpScale=t.bumpScale),void 0!==t.normalMap&&(r.normalMap=n(t.normalMap)),void 0!==t.normalMapType&&(r.normalMapType=t.normalMapType),void 0!==t.normalScale){let e=t.normalScale;!1===Array.isArray(e)&&(e=[e,e]),r.normalScale=(new Ki).fromArray(e)}return void 0!==t.displacementMap&&(r.displacementMap=n(t.displacementMap)),void 0!==t.displacementScale&&(r.displacementScale=t.displacementScale),void 0!==t.displacementBias&&(r.displacementBias=t.displacementBias),void 0!==t.roughnessMap&&(r.roughnessMap=n(t.roughnessMap)),void 0!==t.metalnessMap&&(r.metalnessMap=n(t.metalnessMap)),void 0!==t.emissiveMap&&(r.emissiveMap=n(t.emissiveMap)),void 0!==t.emissiveIntensity&&(r.emissiveIntensity=t.emissiveIntensity),void 0!==t.specularMap&&(r.specularMap=n(t.specularMap)),void 0!==t.envMap&&(r.envMap=n(t.envMap)),void 0!==t.envMapIntensity&&(r.envMapIntensity=t.envMapIntensity),void 0!==t.reflectivity&&(r.reflectivity=t.reflectivity),void 0!==t.refractionRatio&&(r.refractionRatio=t.refractionRatio),void 0!==t.lightMap&&(r.lightMap=n(t.lightMap)),void 0!==t.lightMapIntensity&&(r.lightMapIntensity=t.lightMapIntensity),void 0!==t.aoMap&&(r.aoMap=n(t.aoMap)),void 0!==t.aoMapIntensity&&(r.aoMapIntensity=t.aoMapIntensity),void 0!==t.gradientMap&&(r.gradientMap=n(t.gradientMap)),void 0!==t.clearcoatMap&&(r.clearcoatMap=n(t.clearcoatMap)),void 0!==t.clearcoatRoughnessMap&&(r.clearcoatRoughnessMap=n(t.clearcoatRoughnessMap)),void 0!==t.clearcoatNormalMap&&(r.clearcoatNormalMap=n(t.clearcoatNormalMap)),void 0!==t.clearcoatNormalScale&&(r.clearcoatNormalScale=(new Ki).fromArray(t.clearcoatNormalScale)),void 0!==t.transmission&&(r.transmission=t.transmission),void 0!==t.transmissionMap&&(r.transmissionMap=n(t.transmissionMap)),r},setTextures:function(t){return this.textures=t,this}});function ad(){ia.call(this),this.type="InstancedBufferGeometry",this.instanceCount=1/0}function ud(t,e,n,r){"number"==typeof n&&(r=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),Ps.call(this,t,e,n),this.meshPerAttribute=r||1}function cd(t){fp.call(this,t)}function ld(t){"undefined"==typeof createImageBitmap&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),"undefined"==typeof fetch&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),fp.call(this,t),this.options={premultiplyAlpha:"none"}}function hd(){this.type="ShapePath",this.color=new Ns,this.subPaths=[],this.currentPath=null}function pd(t){this.type="Font",this.data=t}function dd(t,e,n,r,i){const o=i.glyphs[t]||i.glyphs["?"];if(!o)return void console.error('THREE.Font: character "'+t+'" does not exists in font family '+i.familyName+".");const s=new hd;let a,u,c,l,h,p,d,f;if(o.o){const t=o._cachedOutline||(o._cachedOutline=o.o.split(" "));for(let i=0,o=t.length;i<o;)switch(t[i++]){case"m":a=t[i++]*e+n,u=t[i++]*e+r,s.moveTo(a,u);break;case"l":a=t[i++]*e+n,u=t[i++]*e+r,s.lineTo(a,u);break;case"q":c=t[i++]*e+n,l=t[i++]*e+r,h=t[i++]*e+n,p=t[i++]*e+r,s.quadraticCurveTo(h,p,c,l);break;case"b":c=t[i++]*e+n,l=t[i++]*e+r,h=t[i++]*e+n,p=t[i++]*e+r,d=t[i++]*e+n,f=t[i++]*e+r,s.bezierCurveTo(h,p,d,f,c,l)}}return{offsetX:o.ha*e,path:s}}function fd(t){fp.call(this,t)}let md;ad.prototype=Object.assign(Object.create(ia.prototype),{constructor:ad,isInstancedBufferGeometry:!0,copy:function(t){return ia.prototype.copy.call(this,t),this.instanceCount=t.instanceCount,this},clone:function(){return(new this.constructor).copy(this)},toJSON:function(){const t=ia.prototype.toJSON.call(this);return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}),ud.prototype=Object.assign(Object.create(Ps.prototype),{constructor:ud,isInstancedBufferAttribute:!0,copy:function(t){return Ps.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},toJSON:function(){const t=Ps.prototype.toJSON.call(this);return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}),cd.prototype=Object.assign(Object.create(fp.prototype),{constructor:cd,load:function(t,e,n,r){const i=this,o=new gp(i.manager);o.setPath(i.path),o.setRequestHeader(i.requestHeader),o.setWithCredentials(i.withCredentials),o.load(t,(function(n){try{e(i.parse(JSON.parse(n)))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)},parse:function(t){const e={},n={};function r(t,r){if(void 0!==e[r])return e[r];const i=t.interleavedBuffers[r],o=function(t,e){if(void 0!==n[e])return n[e];const r=t.arrayBuffers[e],i=new Uint32Array(r).buffer;return n[e]=i,i}(t,i.buffer),s=new Yc(Ks(i.type,o),i.stride);return s.uuid=i.uuid,e[r]=s,s}const i=t.isInstancedBufferGeometry?new ad:new ia,o=t.data.index;if(void 0!==o){const t=Ks(o.type,o.array);i.setIndex(new Ps(t,1))}const s=t.data.attributes;for(const e in s){const n=s[e];let o;if(n.isInterleavedBufferAttribute)o=new Zc(r(t.data,n.data),n.itemSize,n.offset,n.normalized);else{const t=Ks(n.type,n.array);o=new(n.isInstancedBufferAttribute?ud:Ps)(t,n.itemSize,n.normalized)}void 0!==n.name&&(o.name=n.name),i.setAttribute(e,o)}const a=t.data.morphAttributes;if(a)for(const e in a){const n=a[e],o=[];for(let e=0,i=n.length;e<i;e++){const i=n[e];let s;s=i.isInterleavedBufferAttribute?new Zc(r(t.data,i.data),i.itemSize,i.offset,i.normalized):new Ps(Ks(i.type,i.array),i.itemSize,i.normalized),void 0!==i.name&&(s.name=i.name),o.push(s)}i.morphAttributes[e]=o}t.data.morphTargetsRelative&&(i.morphTargetsRelative=!0);const u=t.data.groups||t.data.drawcalls||t.data.offsets;if(void 0!==u)for(let t=0,e=u.length;t!==e;++t){const e=u[t];i.addGroup(e.start,e.count,e.materialIndex)}const c=t.data.boundingSphere;if(void 0!==c){const t=new ao;void 0!==c.center&&t.fromArray(c.center),i.boundingSphere=new Co(t,c.radius)}return t.name&&(i.name=t.name),t.userData&&(i.userData=t.userData),i}}),ld.prototype=Object.assign(Object.create(fp.prototype),{constructor:ld,isImageBitmapLoader:!0,setOptions:function(t){return this.options=t,this},load:function(t,e,n,r){void 0===t&&(t=""),void 0!==this.path&&(t=this.path+t),t=this.manager.resolveURL(t);const i=this,o=pp.get(t);if(void 0!==o)return i.manager.itemStart(t),setTimeout((function(){e&&e(o),i.manager.itemEnd(t)}),0),o;const s={};s.credentials="anonymous"===this.crossOrigin?"same-origin":"include",fetch(t,s).then((function(t){return t.blob()})).then((function(t){return createImageBitmap(t,i.options)})).then((function(n){pp.add(t,n),e&&e(n),i.manager.itemEnd(t)})).catch((function(e){r&&r(e),i.manager.itemError(t),i.manager.itemEnd(t)})),i.manager.itemStart(t)}}),Object.assign(hd.prototype,{moveTo:function(t,e){return this.currentPath=new Hp,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this},lineTo:function(t,e){return this.currentPath.lineTo(t,e),this},quadraticCurveTo:function(t,e,n,r){return this.currentPath.quadraticCurveTo(t,e,n,r),this},bezierCurveTo:function(t,e,n,r,i,o){return this.currentPath.bezierCurveTo(t,e,n,r,i,o),this},splineThru:function(t){return this.currentPath.splineThru(t),this},toShapes:function(t,e){function n(t){const e=[];for(let n=0,r=t.length;n<r;n++){const r=t[n],i=new Gp;i.curves=r.curves,e.push(i)}return e}function r(t,e){const n=e.length;let r=!1;for(let i=n-1,o=0;o<n;i=o++){let n=e[i],s=e[o],a=s.x-n.x,u=s.y-n.y;if(Math.abs(u)>Number.EPSILON){if(u<0&&(n=e[o],a=-a,s=e[i],u=-u),t.y<n.y||t.y>s.y)continue;if(t.y===n.y){if(t.x===n.x)return!0}else{const e=u*(t.x-n.x)-a*(t.y-n.y);if(0===e)return!0;if(e<0)continue;r=!r}}else{if(t.y!==n.y)continue;if(s.x<=t.x&&t.x<=n.x||n.x<=t.x&&t.x<=s.x)return!0}}return r}const i=Nh.isClockWise,o=this.subPaths;if(0===o.length)return[];if(!0===e)return n(o);let s,a,u;const c=[];if(1===o.length)return a=o[0],u=new Gp,u.curves=a.curves,c.push(u),c;let l=!i(o[0].getPoints());l=t?!l:l;const h=[],p=[];let d,f,m=[],g=0;p[g]=void 0,m[g]=[];for(let e=0,n=o.length;e<n;e++)a=o[e],d=a.getPoints(),s=i(d),s=t?!s:s,s?(!l&&p[g]&&g++,p[g]={s:new Gp,p:d},p[g].s.curves=a.curves,l&&g++,m[g]=[]):m[g].push({h:a,p:d[0]});if(!p[0])return n(o);if(p.length>1){let t=!1;const e=[];for(let t=0,e=p.length;t<e;t++)h[t]=[];for(let n=0,i=p.length;n<i;n++){const i=m[n];for(let o=0;o<i.length;o++){const s=i[o];let a=!0;for(let i=0;i<p.length;i++)r(s.p,p[i].p)&&(n!==i&&e.push({froms:n,tos:i,hole:o}),a?(a=!1,h[i].push(s)):t=!0);a&&h[n].push(s)}}e.length>0&&(t||(m=h))}for(let t=0,e=p.length;t<e;t++){u=p[t].s,c.push(u),f=m[t];for(let t=0,e=f.length;t<e;t++)u.holes.push(f[t].h)}return c}}),Object.assign(pd.prototype,{isFont:!0,generateShapes:function(t,e=100){const n=[],r=function(t,e,n){const r=Array.from?Array.from(t):String(t).split(""),i=e/n.resolution,o=(n.boundingBox.yMax-n.boundingBox.yMin+n.underlineThickness)*i,s=[];let a=0,u=0;for(let t=0;t<r.length;t++){const e=r[t];if("\n"===e)a=0,u-=o;else{const t=dd(e,i,a,u,n);a+=t.offsetX,s.push(t.path)}}return s}(t,e,this.data);for(let t=0,e=r.length;t<e;t++)Array.prototype.push.apply(n,r[t].toShapes());return n}}),fd.prototype=Object.assign(Object.create(fp.prototype),{constructor:fd,load:function(t,e,n,r){const i=this,o=new gp(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(i.withCredentials),o.load(t,(function(t){let n;try{n=JSON.parse(t)}catch(e){console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),n=JSON.parse(t.substring(65,t.length-2))}const r=i.parse(n);e&&e(r)}),n,r)},parse:function(t){return new pd(t)}});function gd(t){fp.call(this,t)}function yd(t,e,n){od.call(this,void 0,n);const r=(new Ns).set(t),i=(new Ns).set(e),o=new ao(r.r,r.g,r.b),s=new ao(i.r,i.g,i.b),a=Math.sqrt(Math.PI),u=a*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(s).multiplyScalar(a),this.sh.coefficients[1].copy(o).sub(s).multiplyScalar(u)}function vd(t,e){od.call(this,void 0,e);const n=(new Ns).set(t);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}gd.prototype=Object.assign(Object.create(fp.prototype),{constructor:gd,load:function(t,e,n,r){const i=this,o=new gp(i.manager);o.setResponseType("arraybuffer"),o.setPath(i.path),o.setRequestHeader(i.requestHeader),o.setWithCredentials(i.withCredentials),o.load(t,(function(n){try{const t=n.slice(0);(void 0===md&&(md=new(window.AudioContext||window.webkitAudioContext)),md).decodeAudioData(t,(function(t){e(t)}))}catch(e){r?r(e):console.error(e),i.manager.itemError(t)}}),n,r)}}),yd.prototype=Object.assign(Object.create(od.prototype),{constructor:yd,isHemisphereLightProbe:!0,copy:function(t){return od.prototype.copy.call(this,t),this},toJSON:function(t){return od.prototype.toJSON.call(this,t)}}),vd.prototype=Object.assign(Object.create(od.prototype),{constructor:vd,isAmbientLightProbe:!0,copy:function(t){return od.prototype.copy.call(this,t),this},toJSON:function(t){return od.prototype.toJSON.call(this,t)}});const xd=new Po,bd=new Po;Object.assign(function(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Ia,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Ia,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}.prototype,{update:function(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep;const n=t.projectionMatrix.clone(),r=e.eyeSep/2,i=r*e.near/e.focus,o=e.near*Math.tan(Yi.DEG2RAD*e.fov*.5)/e.zoom;let s,a;bd.elements[12]=-r,xd.elements[12]=r,s=-o*e.aspect+i,a=o*e.aspect+i,n.elements[0]=2*e.near/(a-s),n.elements[8]=(a+s)/(a-s),this.cameraL.projectionMatrix.copy(n),s=-o*e.aspect-i,a=o*e.aspect-i,n.elements[0]=2*e.near/(a-s),n.elements[8]=(a+s)/(a-s),this.cameraR.projectionMatrix.copy(n)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(bd),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(xd)}});class wd{constructor(t){this.autoStart=void 0===t||t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=_d(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=_d();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function _d(){return("undefined"==typeof performance?Date:performance).now()}function Sd(t,e,n){let r,i,o;switch(this.binding=t,this.valueSize=n,e){case"quaternion":r=this._slerp,i=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(6*n),this._workIndex=5;break;case"string":case"bool":r=this._select,i=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(5*n);break;default:r=this._lerp,i=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(5*n)}this._mixBufferRegion=r,this._mixBufferRegionAdditive=i,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}Object.assign(Sd.prototype,{accumulate:function(t,e){const n=this.buffer,r=this.valueSize,i=t*r+r;let o=this.cumulativeWeight;if(0===o){for(let t=0;t!==r;++t)n[i+t]=n[t];o=e}else{o+=e;const t=e/o;this._mixBufferRegion(n,i,0,t,r)}this.cumulativeWeight=o},accumulateAdditive:function(t){const e=this.buffer,n=this.valueSize,r=n*this._addIndex;0===this.cumulativeWeightAdditive&&this._setIdentity(),this._mixBufferRegionAdditive(e,r,0,t,n),this.cumulativeWeightAdditive+=t},apply:function(t){const e=this.valueSize,n=this.buffer,r=t*e+e,i=this.cumulativeWeight,o=this.cumulativeWeightAdditive,s=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,i<1){const t=e*this._origIndex;this._mixBufferRegion(n,r,t,1-i,e)}o>0&&this._mixBufferRegionAdditive(n,r,this._addIndex*e,1,e);for(let t=e,i=e+e;t!==i;++t)if(n[t]!==n[t+e]){s.setValue(n,r);break}},saveOriginalState:function(){const t=this.binding,e=this.buffer,n=this.valueSize,r=n*this._origIndex;t.getValue(e,r);for(let t=n,i=r;t!==i;++t)e[t]=e[r+t%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0},restoreOriginalState:function(){const t=3*this.valueSize;this.binding.setValue(this.buffer,t)},_setAdditiveIdentityNumeric:function(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let n=t;n<e;n++)this.buffer[n]=0},_setAdditiveIdentityQuaternion:function(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1},_setAdditiveIdentityOther:function(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[e+n]=this.buffer[t+n]},_select:function(t,e,n,r,i){if(r>=.5)for(let r=0;r!==i;++r)t[e+r]=t[n+r]},_slerp:function(t,e,n,r){so.slerpFlat(t,e,t,e,t,n,r)},_slerpAdditive:function(t,e,n,r,i){const o=this._workIndex*i;so.multiplyQuaternionsFlat(t,o,t,e,t,n),so.slerpFlat(t,e,t,e,t,o,r)},_lerp:function(t,e,n,r,i){const o=1-r;for(let s=0;s!==i;++s){const i=e+s;t[i]=t[i]*o+t[n+s]*r}},_lerpAdditive:function(t,e,n,r,i){for(let o=0;o!==i;++o){const i=e+o;t[i]=t[i]+t[n+o]*r}}});const Td=new RegExp("[\\[\\]\\.:\\/]","g"),Ed="[^\\[\\]\\.:\\/]",Md="[^"+"\\[\\]\\.:\\/".replace("\\.","")+"]",Cd=/((?:WC+[\/:])*)/.source.replace("WC",Ed),Ad=/(WCOD+)?/.source.replace("WCOD",Md),Nd=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Ed),Rd=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Ed),Id=new RegExp("^"+Cd+Ad+Nd+Rd+"$"),Dd=["material","materials","bones"];function Od(t,e,n){const r=n||Ld.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,r)}function Ld(t,e,n){this.path=e,this.parsedPath=n||Ld.parseTrackName(e),this.node=Ld.findNode(t,this.parsedPath.nodeName)||t,this.rootNode=t}Object.assign(Od.prototype,{getValue:function(t,e){this.bind();const n=this._targetGroup.nCachedObjects_,r=this._bindings[n];void 0!==r&&r.getValue(t,e)},setValue:function(t,e){const n=this._bindings;for(let r=this._targetGroup.nCachedObjects_,i=n.length;r!==i;++r)n[r].setValue(t,e)},bind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].bind()},unbind:function(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,n=t.length;e!==n;++e)t[e].unbind()}}),Object.assign(Ld,{Composite:Od,create:function(t,e,n){return t&&t.isAnimationObjectGroup?new Ld.Composite(t,e,n):new Ld(t,e,n)},sanitizeNodeName:function(t){return t.replace(/\s/g,"_").replace(Td,"")},parseTrackName:function(t){const e=Id.exec(t);if(!e)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const n={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},r=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==r&&-1!==r){const t=n.nodeName.substring(r+1);-1!==Dd.indexOf(t)&&(n.nodeName=n.nodeName.substring(0,r),n.objectName=t)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return n},findNode:function(t,e){if(!e||""===e||"."===e||-1===e||e===t.name||e===t.uuid)return t;if(t.skeleton){const n=t.skeleton.getBoneByName(e);if(void 0!==n)return n}if(t.children){const n=function(t){for(let r=0;r<t.length;r++){const i=t[r];if(i.name===e||i.uuid===e)return i;const o=n(i.children);if(o)return o}return null},r=n(t.children);if(r)return r}return null}}),Object.assign(Ld.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,e){t[e]=this.node[this.propertyName]},function(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)t[e++]=n[r]},function(t,e){t[e]=this.resolvedProperty[this.propertyIndex]},function(t,e){this.resolvedProperty.toArray(t,e)}],SetterByBindingTypeAndVersioning:[[function(t,e){this.targetObject[this.propertyName]=t[e]},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++]},function(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.needsUpdate=!0},function(t,e){const n=this.resolvedProperty;for(let r=0,i=n.length;r!==i;++r)n[r]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty[this.propertyIndex]=t[e]},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,e){this.resolvedProperty.fromArray(t,e)},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0},function(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}]],getValue:function(t,e){this.bind(),this.getValue(t,e)},setValue:function(t,e){this.bind(),this.setValue(t,e)},bind:function(){let t=this.node;const e=this.parsedPath,n=e.objectName,r=e.propertyName;let i=e.propertyIndex;if(t||(t=Ld.findNode(this.rootNode,e.nodeName)||this.rootNode,this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let r=e.objectIndex;switch(n){case"materials":if(!t.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!t.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);t=t.material.materials;break;case"bones":if(!t.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);t=t.skeleton.bones;for(let e=0;e<t.length;e++)if(t[e].name===r){r=e;break}break;default:if(void 0===t[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);t=t[n]}if(void 0!==r){if(void 0===t[r])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);t=t[r]}}const o=t[r];if(void 0===o){const n=e.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+r+" but it wasn't found.",t)}let s=this.Versioning.None;this.targetObject=t,void 0!==t.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==t.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let a=this.BindingType.Direct;if(void 0!==i){if("morphTargetInfluences"===r){if(!t.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!t.geometry.isBufferGeometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);if(!t.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==t.morphTargetDictionary[i]&&(i=t.morphTargetDictionary[i])}a=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=i}else void 0!==o.fromArray&&void 0!==o.toArray?(a=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(a=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=r;this.getValue=this.GetterByBindingType[a],this.setValue=this.SetterByBindingTypeAndVersioning[a][s]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}),Object.assign(Ld.prototype,{_getValue_unbound:Ld.prototype.getValue,_setValue_unbound:Ld.prototype.setValue}),Object.assign(function(){this.uuid=Yi.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let e=0,n=arguments.length;e!==n;++e)t[arguments[e].uuid]=e;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}.prototype,{isAnimationObjectGroup:!0,add:function(){const t=this._objects,e=this._indicesByUUID,n=this._paths,r=this._parsedPaths,i=this._bindings,o=i.length;let s,a=t.length,u=this.nCachedObjects_;for(let c=0,l=arguments.length;c!==l;++c){const l=arguments[c],h=l.uuid;let p=e[h];if(void 0===p){p=a++,e[h]=p,t.push(l);for(let t=0,e=o;t!==e;++t)i[t].push(new Ld(l,n[t],r[t]))}else if(p<u){s=t[p];const a=--u,c=t[a];e[c.uuid]=p,t[p]=c,e[h]=a,t[a]=l;for(let t=0,e=o;t!==e;++t){const e=i[t],o=e[a];let s=e[p];e[p]=o,void 0===s&&(s=new Ld(l,n[t],r[t])),e[a]=s}}else t[p]!==s&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=u},remove:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_;for(let o=0,s=arguments.length;o!==s;++o){const s=arguments[o],a=s.uuid,u=e[a];if(void 0!==u&&u>=i){const o=i++,c=t[o];e[c.uuid]=u,t[u]=c,e[a]=o,t[o]=s;for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[o],i=e[u];e[u]=r,e[o]=i}}}this.nCachedObjects_=i},uncache:function(){const t=this._objects,e=this._indicesByUUID,n=this._bindings,r=n.length;let i=this.nCachedObjects_,o=t.length;for(let s=0,a=arguments.length;s!==a;++s){const a=arguments[s].uuid,u=e[a];if(void 0!==u)if(delete e[a],u<i){const s=--i,a=t[s],c=--o,l=t[c];e[a.uuid]=u,t[u]=a,e[l.uuid]=s,t[s]=l,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t],r=e[s],i=e[c];e[u]=r,e[s]=i,e.pop()}}else{const i=--o,s=t[i];i>0&&(e[s.uuid]=u),t[u]=s,t.pop();for(let t=0,e=r;t!==e;++t){const e=n[t];e[u]=e[i],e.pop()}}}this.nCachedObjects_=i},subscribe_:function(t,e){const n=this._bindingsIndicesByPath;let r=n[t];const i=this._bindings;if(void 0!==r)return i[r];const o=this._paths,s=this._parsedPaths,a=this._objects,u=a.length,c=this.nCachedObjects_,l=new Array(u);r=i.length,n[t]=r,o.push(t),s.push(e),i.push(l);for(let n=c,r=a.length;n!==r;++n){const r=a[n];l[n]=new Ld(r,t,e)}return l},unsubscribe_:function(t){const e=this._bindingsIndicesByPath,n=e[t];if(void 0!==n){const r=this._paths,i=this._parsedPaths,o=this._bindings,s=o.length-1,a=o[s];e[t[s]]=n,o[n]=a,o.pop(),i[n]=i[s],i.pop(),r[n]=r[s],r.pop()}}});class kd{constructor(t,e,n=null,r=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=n,this.blendMode=r;const i=e.tracks,o=i.length,s=new Array(o),a={endingStart:Bi,endingEnd:Bi};for(let t=0;t!==o;++t){const e=i[t].createInterpolant(null);s[t]=e,e.settings=a}this._interpolantSettings=a,this._interpolants=s,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=2201,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&0!==this.timeScale&&null===this._startTime&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,n){if(t.fadeOut(e),this.fadeIn(e),n){const n=this._clip.duration,r=t._clip.duration,i=r/n,o=n/r;t.warp(1,i,e),this.warp(o,1,e)}return this}crossFadeTo(t,e,n){return t.crossFadeFrom(this,e,n)}stopFading(){const t=this._weightInterpolant;return null!==t&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,n){const r=this._mixer,i=r.time,o=this.timeScale;let s=this._timeScaleInterpolant;null===s&&(s=r._lendControlInterpolant(),this._timeScaleInterpolant=s);const a=s.parameterPositions,u=s.sampleValues;return a[0]=i,a[1]=i+n,u[0]=t/o,u[1]=e/o,this}stopWarping(){const t=this._timeScaleInterpolant;return null!==t&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,n,r){if(!this.enabled)return void this._updateWeight(t);const i=this._startTime;if(null!==i){const r=(t-i)*n;if(r<0||0===n)return;this._startTime=null,e=n*r}e*=this._updateTimeScale(t);const o=this._updateTime(e),s=this._updateWeight(t);if(s>0){const t=this._interpolants,e=this._propertyBindings;switch(this.blendMode){case 2501:for(let n=0,r=t.length;n!==r;++n)t[n].evaluate(o),e[n].accumulateAdditive(s);break;case 2500:default:for(let n=0,i=t.length;n!==i;++n)t[n].evaluate(o),e[n].accumulate(r,s)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const n=this._weightInterpolant;if(null!==n){const r=n.evaluate(t)[0];e*=r,t>n.parameterPositions[1]&&(this.stopFading(),0===r&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const n=this._timeScaleInterpolant;null!==n&&(e*=n.evaluate(t)[0],t>n.parameterPositions[1]&&(this.stopWarping(),0===e?this.paused=!0:this.timeScale=e))}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,n=this.loop;let r=this.time+t,i=this._loopCount;const o=2202===n;if(0===t)return-1===i?r:o&&1==(1&i)?e-r:r;if(2200===n){-1===i&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(r>=e)r=e;else{if(!(r<0)){this.time=r;break t}r=0}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(-1===i&&(t>=0?(i=0,this._setEndings(!0,0===this.repetitions,o)):this._setEndings(0===this.repetitions,!0,o)),r>=e||r<0){const n=Math.floor(r/e);r-=e*n,i+=Math.abs(n);const s=this.repetitions-i;if(s<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,r=t>0?e:0,this.time=r,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(1===s){const e=t<0;this._setEndings(e,!e,o)}else this._setEndings(!1,!1,o);this._loopCount=i,this.time=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:n})}}else this.time=r;if(o&&1==(1&i))return e-r}return r}_setEndings(t,e,n){const r=this._interpolantSettings;n?(r.endingStart=Fi,r.endingEnd=Fi):(r.endingStart=t?this.zeroSlopeAtStart?Fi:Bi:Ui,r.endingEnd=e?this.zeroSlopeAtEnd?Fi:Bi:Ui)}_scheduleFading(t,e,n){const r=this._mixer,i=r.time;let o=this._weightInterpolant;null===o&&(o=r._lendControlInterpolant(),this._weightInterpolant=o);const s=o.parameterPositions,a=o.sampleValues;return s[0]=i,a[0]=e,s[1]=i+t,a[1]=n,this}}function Pd(t){this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}Pd.prototype=Object.assign(Object.create(ji.prototype),{constructor:Pd,_bindAction:function(t,e){const n=t._localRoot||this._root,r=t._clip.tracks,i=r.length,o=t._propertyBindings,s=t._interpolants,a=n.uuid,u=this._bindingsByRootAndName;let c=u[a];void 0===c&&(c={},u[a]=c);for(let t=0;t!==i;++t){const i=r[t],u=i.name;let l=c[u];if(void 0!==l)o[t]=l;else{if(l=o[t],void 0!==l){null===l._cacheIndex&&(++l.referenceCount,this._addInactiveBinding(l,a,u));continue}const r=e&&e._propertyBindings[t].binding.parsedPath;l=new Sd(Ld.create(n,u,r),i.ValueTypeName,i.getValueSize()),++l.referenceCount,this._addInactiveBinding(l,a,u),o[t]=l}s[t].resultBuffer=l.buffer}},_activateAction:function(t){if(!this._isActiveAction(t)){if(null===t._cacheIndex){const e=(t._localRoot||this._root).uuid,n=t._clip.uuid,r=this._actionsByClip[n];this._bindAction(t,r&&r.knownActions[0]),this._addInactiveAction(t,n,e)}const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==n.useCount++&&(this._lendBinding(n),n.saveOriginalState())}this._lendAction(t)}},_deactivateAction:function(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.useCount&&(n.restoreOriginalState(),this._takeBackBinding(n))}this._takeBackAction(t)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}},_isActiveAction:function(t){const e=t._cacheIndex;return null!==e&&e<this._nActiveActions},_addInactiveAction:function(t,e,n){const r=this._actions,i=this._actionsByClip;let o=i[e];if(void 0===o)o={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,i[e]=o;else{const e=o.knownActions;t._byClipCacheIndex=e.length,e.push(t)}t._cacheIndex=r.length,r.push(t),o.actionByRoot[n]=t},_removeInactiveAction:function(t){const e=this._actions,n=e[e.length-1],r=t._cacheIndex;n._cacheIndex=r,e[r]=n,e.pop(),t._cacheIndex=null;const i=t._clip.uuid,o=this._actionsByClip,s=o[i],a=s.knownActions,u=a[a.length-1],c=t._byClipCacheIndex;u._byClipCacheIndex=c,a[c]=u,a.pop(),t._byClipCacheIndex=null,delete s.actionByRoot[(t._localRoot||this._root).uuid],0===a.length&&delete o[i],this._removeInactiveBindingsForAction(t)},_removeInactiveBindingsForAction:function(t){const e=t._propertyBindings;for(let t=0,n=e.length;t!==n;++t){const n=e[t];0==--n.referenceCount&&this._removeInactiveBinding(n)}},_lendAction:function(t){const e=this._actions,n=t._cacheIndex,r=this._nActiveActions++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i},_takeBackAction:function(t){const e=this._actions,n=t._cacheIndex,r=--this._nActiveActions,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i},_addInactiveBinding:function(t,e,n){const r=this._bindingsByRootAndName,i=this._bindings;let o=r[e];void 0===o&&(o={},r[e]=o),o[n]=t,t._cacheIndex=i.length,i.push(t)},_removeInactiveBinding:function(t){const e=this._bindings,n=t.binding,r=n.rootNode.uuid,i=n.path,o=this._bindingsByRootAndName,s=o[r],a=e[e.length-1],u=t._cacheIndex;a._cacheIndex=u,e[u]=a,e.pop(),delete s[i],0===Object.keys(s).length&&delete o[r]},_lendBinding:function(t){const e=this._bindings,n=t._cacheIndex,r=this._nActiveBindings++,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i},_takeBackBinding:function(t){const e=this._bindings,n=t._cacheIndex,r=--this._nActiveBindings,i=e[r];t._cacheIndex=r,e[r]=t,i._cacheIndex=n,e[n]=i},_lendControlInterpolant:function(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let n=t[e];return void 0===n&&(n=new tp(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=e,t[e]=n),n},_takeBackControlInterpolant:function(t){const e=this._controlInterpolants,n=t.__cacheIndex,r=--this._nActiveControlInterpolants,i=e[r];t.__cacheIndex=r,e[r]=t,i.__cacheIndex=n,e[n]=i},_controlInterpolantsResultBuffer:new Float32Array(1),clipAction:function(t,e,n){const r=e||this._root,i=r.uuid;let o="string"==typeof t?lp.findByName(r,t):t;const s=null!==o?o.uuid:t,a=this._actionsByClip[s];let u=null;if(void 0===n&&(n=null!==o?o.blendMode:2500),void 0!==a){const t=a.actionByRoot[i];if(void 0!==t&&t.blendMode===n)return t;u=a.knownActions[0],null===o&&(o=u._clip)}if(null===o)return null;const c=new kd(this,o,e,n);return this._bindAction(c,u),this._addInactiveAction(c,s,i),c},existingAction:function(t,e){const n=e||this._root,r=n.uuid,i="string"==typeof t?lp.findByName(n,t):t,o=i?i.uuid:t,s=this._actionsByClip[o];return void 0!==s&&s.actionByRoot[r]||null},stopAllAction:function(){const t=this._actions;for(let e=this._nActiveActions-1;e>=0;--e)t[e].stop();return this},update:function(t){t*=this.timeScale;const e=this._actions,n=this._nActiveActions,r=this.time+=t,i=Math.sign(t),o=this._accuIndex^=1;for(let s=0;s!==n;++s)e[s]._update(r,t,i,o);const s=this._bindings,a=this._nActiveBindings;for(let t=0;t!==a;++t)s[t].apply(o);return this},setTime:function(t){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(t)},getRoot:function(){return this._root},uncacheClip:function(t){const e=this._actions,n=t.uuid,r=this._actionsByClip,i=r[n];if(void 0!==i){const t=i.knownActions;for(let n=0,r=t.length;n!==r;++n){const r=t[n];this._deactivateAction(r);const i=r._cacheIndex,o=e[e.length-1];r._cacheIndex=null,r._byClipCacheIndex=null,o._cacheIndex=i,e[i]=o,e.pop(),this._removeInactiveBindingsForAction(r)}delete r[n]}},uncacheRoot:function(t){const e=t.uuid,n=this._actionsByClip;for(const t in n){const r=n[t].actionByRoot[e];void 0!==r&&(this._deactivateAction(r),this._removeInactiveAction(r))}const r=this._bindingsByRootAndName[e];if(void 0!==r)for(const t in r){const e=r[t];e.restoreOriginalState(),this._removeInactiveBinding(e)}},uncacheAction:function(t,e){const n=this.existingAction(t,e);null!==n&&(this._deactivateAction(n),this._removeInactiveAction(n))}});class $d{constructor(t){"string"==typeof t&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),t=arguments[1]),this.value=t}clone(){return new $d(void 0===this.value.clone?this.value:this.value.clone())}}function Bd(t,e,n){Yc.call(this,t,e),this.meshPerAttribute=n||1}function Fd(t,e,n,r,i){this.buffer=t,this.type=e,this.itemSize=n,this.elementSize=r,this.count=i,this.version=0}function Ud(t,e,n,r){this.ray=new ko(t,e),this.near=n||0,this.far=r||1/0,this.camera=null,this.layers=new Xo,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function zd(t,e){return t.distance-e.distance}function Vd(t,e,n,r){if(t.layers.test(e.layers)&&t.raycast(e,n),!0===r){const r=t.children;for(let t=0,i=r.length;t<i;t++)Vd(r[t],e,n,!0)}}Bd.prototype=Object.assign(Object.create(Yc.prototype),{constructor:Bd,isInstancedInterleavedBuffer:!0,copy:function(t){return Yc.prototype.copy.call(this,t),this.meshPerAttribute=t.meshPerAttribute,this},clone:function(t){const e=Yc.prototype.clone.call(this,t);return e.meshPerAttribute=this.meshPerAttribute,e},toJSON:function(t){const e=Yc.prototype.toJSON.call(this,t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}),Object.defineProperty(Fd.prototype,"needsUpdate",{set:function(t){!0===t&&this.version++}}),Object.assign(Fd.prototype,{isGLBufferAttribute:!0,setBuffer:function(t){return this.buffer=t,this},setType:function(t,e){return this.type=t,this.elementSize=e,this},setItemSize:function(t){return this.itemSize=t,this},setCount:function(t){return this.count=t,this}}),Object.assign(Ud.prototype,{set:function(t,e){this.ray.set(t,e)},setFromCamera:function(t,e){e&&e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e&&e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)},intersectObject:function(t,e,n){const r=n||[];return Vd(t,this,r,e),r.sort(zd),r},intersectObjects:function(t,e,n){const r=n||[];if(!1===Array.isArray(t))return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),r;for(let n=0,i=t.length;n<i;n++)Vd(t[n],this,r,e);return r.sort(zd),r}});const Wd=new Ki,Hd=new ao,Gd=new ao;function jd(t){as.call(this),this.material=t,this.render=function(){},this.hasPositions=!1,this.hasNormals=!1,this.hasColors=!1,this.hasUvs=!1,this.positionArray=null,this.normalArray=null,this.colorArray=null,this.uvArray=null,this.count=0}jd.prototype=Object.create(as.prototype),jd.prototype.constructor=jd,jd.prototype.isImmediateRenderObject=!0;const Xd=new ao,qd=new Po,Yd=new Po;function Kd(t){const e=[];t&&t.isBone&&e.push(t);for(let n=0;n<t.children.length;n++)e.push.apply(e,Kd(t.children[n]));return e}const Zd=new Float32Array(1),Jd=(new Int32Array(Zd.buffer),Math.pow(2,8),[.125,.215,.35,.446,.526,.582]),Qd=5+Jd.length,{_lodPlanes:tf,_sizeLods:ef,_sigmas:nf}=rf();function rf(){const t=[],e=[],n=[];let r=8;for(let i=0;i<Qd;i++){const o=Math.pow(2,r);e.push(o);let s=1/o;i>4?s=Jd[i-8+4-1]:0==i&&(s=0),n.push(s);const a=1/(o-1),u=-a/2,c=1+a/2,l=[u,u,c,u,c,c,u,u,c,c,u,c],h=6,p=6,d=3,f=2,m=1,g=new Float32Array(d*p*h),y=new Float32Array(f*p*h),v=new Float32Array(m*p*h);for(let t=0;t<h;t++){const e=t%3*2/3-1,n=t>2?0:-1,r=[e,n,0,e+2/3,n,0,e+2/3,n+1,0,e,n,0,e+2/3,n+1,0,e,n+1,0];g.set(r,d*p*t),y.set(l,f*p*t);const i=[t,t,t,t,t,t];v.set(i,m*p*t)}const x=new ia;x.setAttribute("position",new Ps(g,d)),x.setAttribute("uv",new Ps(y,f)),x.setAttribute("faceIndex",new Ps(v,m)),t.push(x),r>4&&r--}return{_lodPlanes:t,_sizeLods:e,_sigmas:n}}function of(t){console.warn("THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead."),Ip.call(this,t),this.type="catmullrom"}Math.sqrt(5),Sp.create=function(t,e){return console.log("THREE.Curve.create() has been deprecated"),t.prototype=Object.create(Sp.prototype),t.prototype.constructor=t,t.prototype.getPoint=e,t},Object.assign(Wp.prototype,{createPointsGeometry:function(t){console.warn("THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=this.getPoints(t);return this.createGeometry(e)},createSpacedPointsGeometry:function(t){console.warn("THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=this.getSpacedPoints(t);return this.createGeometry(e)},createGeometry:function(t){console.warn("THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.");const e=new ih;for(let n=0,r=t.length;n<r;n++){const r=t[n];e.vertices.push(new ao(r.x,r.y,r.z||0))}return e}}),Object.assign(Hp.prototype,{fromPoints:function(t){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(t)}}),Object.create(Ip.prototype),Object.create(Ip.prototype),of.prototype=Object.create(Ip.prototype),Object.assign(of.prototype,{initFromArray:function(){console.error("THREE.Spline: .initFromArray() has been removed.")},getControlPointsArray:function(){console.error("THREE.Spline: .getControlPointsArray() has been removed.")},reparametrizeByArcLength:function(){console.error("THREE.Spline: .reparametrizeByArcLength() has been removed.")}}),class extends zl{constructor(t=10,e=10,n=4473924,r=8947848){n=new Ns(n),r=new Ns(r);const i=e/2,o=t/e,s=t/2,a=[],u=[];for(let t=0,c=0,l=-s;t<=e;t++,l+=o){a.push(-s,0,l,s,0,l),a.push(l,0,-s,l,0,s);const e=t===i?n:r;e.toArray(u,c),c+=3,e.toArray(u,c),c+=3,e.toArray(u,c),c+=3,e.toArray(u,c),c+=3}const c=new ia;c.setAttribute("position",new Gs(a,3)),c.setAttribute("color",new Gs(u,3)),super(c,new Dl({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}}.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")},class extends zl{constructor(t){const e=Kd(t),n=new ia,r=[],i=[],o=new Ns(0,0,1),s=new Ns(0,1,0);for(let t=0;t<e.length;t++){const n=e[t];n.parent&&n.parent.isBone&&(r.push(0,0,0),r.push(0,0,0),i.push(o.r,o.g,o.b),i.push(s.r,s.g,s.b))}n.setAttribute("position",new Gs(r,3)),n.setAttribute("color",new Gs(i,3)),super(n,new Dl({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0})),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,n=this.geometry,r=n.getAttribute("position");Yd.copy(this.root.matrixWorld).invert();for(let t=0,n=0;t<e.length;t++){const i=e[t];i.parent&&i.parent.isBone&&(qd.multiplyMatrices(Yd,i.matrixWorld),Xd.setFromMatrixPosition(qd),r.setXYZ(n,Xd.x,Xd.y,Xd.z),qd.multiplyMatrices(Yd,i.parent.matrixWorld),Xd.setFromMatrixPosition(qd),r.setXYZ(n+1,Xd.x,Xd.y,Xd.z),n+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}}.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")},Object.assign(fp.prototype,{extractUrlBase:function(t){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),function(t){const e=t.lastIndexOf("/");return-1===e?"./":t.substr(0,e+1)}(t)}}),fp.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}},Object.assign(class{constructor(t,e){Object.defineProperty(this,"isBox2",{value:!0}),this.min=void 0!==t?t:new Ki(1/0,1/0),this.max=void 0!==e?e:new Ki(-1/0,-1/0)}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,n=t.length;e<n;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const n=Wd.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(n),this.max.copy(t).add(n),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return void 0===t&&(console.warn("THREE.Box2: .getCenter() target is now required"),t=new Ki),this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return void 0===t&&(console.warn("THREE.Box2: .getSize() target is now required"),t=new Ki),this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return void 0===e&&(console.warn("THREE.Box2: .getParameter() target is now required"),e=new Ki),e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y)}clampPoint(t,e){return void 0===e&&(console.warn("THREE.Box2: .clampPoint() target is now required"),e=new Ki),e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return Wd.copy(t).clamp(this.min,this.max).sub(t).length()}intersect(t){return this.min.max(t.min),this.max.min(t.max),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}.prototype,{center:function(t){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},size:function(t){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(lo.prototype,{center:function(t){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(t)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(t){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionSphere:function(t){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)},size:function(t){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(t)}}),Object.assign(Co.prototype,{empty:function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()}}),Fa.prototype.setFromMatrix=function(t){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(t)},class{constructor(t,e){this.start=void 0!==t?t:new ao,this.end=void 0!==e?e:new ao}set(t,e){return this.start.copy(t),this.end.copy(e),this}clone(){return(new this.constructor).copy(this)}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return void 0===t&&(console.warn("THREE.Line3: .getCenter() target is now required"),t=new ao),t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return void 0===t&&(console.warn("THREE.Line3: .delta() target is now required"),t=new ao),t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return void 0===e&&(console.warn("THREE.Line3: .at() target is now required"),e=new ao),this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){Hd.subVectors(t,this.start),Gd.subVectors(this.end,this.start);const n=Gd.dot(Gd);let r=Gd.dot(Hd)/n;return e&&(r=Yi.clamp(r,0,1)),r}closestPointToPoint(t,e,n){const r=this.closestPointToPointParameter(t,e);return void 0===n&&(console.warn("THREE.Line3: .closestPointToPoint() target is now required"),n=new ao),this.delta(n).multiplyScalar(r).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}}.prototype.center=function(t){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(t)},Object.assign(Yi,{random16:function(){return console.warn("THREE.Math: .random16() has been deprecated. Use Math.random() instead."),Math.random()},nearestPowerOfTwo:function(t){return console.warn("THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo()."),Yi.floorPowerOfTwo(t)},nextPowerOfTwo:function(t){return console.warn("THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo()."),Yi.ceilPowerOfTwo(t)}}),Object.assign(Zi.prototype,{flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},multiplyVector3:function(t){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},multiplyVector3Array:function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),t.applyMatrix3(this)},applyToVector3Array:function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")},getInverse:function(t){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()}}),Object.assign(Po.prototype,{extractPosition:function(t){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(t)},flattenToArrayOffset:function(t,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(t,e)},getPosition:function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),(new ao).setFromMatrixColumn(this,3)},setRotationFromQuaternion:function(t){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(t)},multiplyToArray:function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")},multiplyVector3:function(t){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector4:function(t){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},multiplyVector3Array:function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")},rotateAxis:function(t){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),t.transformDirection(this)},crossVector:function(t){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBufferAttribute:function(t){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),t.applyMatrix4(this)},applyToVector3Array:function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")},makeFrustum:function(t,e,n,r,i,o){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(t,e,r,n,i,o)},getInverse:function(t){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(t).invert()}}),hs.prototype.isIntersectionLine=function(t){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(t)},Object.assign(so.prototype,{multiplyVector3:function(t){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),t.applyQuaternion(this)},inverse:function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()}}),Object.assign(ko.prototype,{isIntersectionBox:function(t){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(t)},isIntersectionPlane:function(t){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(t)},isIntersectionSphere:function(t){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(t)}}),Object.assign(_s.prototype,{area:function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()},barycoordFromPoint:function(t,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(t,e)},midpoint:function(t){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(t)},normal:function(t){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(t)},plane:function(t){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(t)}}),Object.assign(_s,{barycoordFromPoint:function(t,e,n,r,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),_s.getBarycoord(t,e,n,r,i)},normal:function(t,e,n,r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),_s.getNormal(t,e,n,r)}}),Object.assign(Gp.prototype,{extractAllPoints:function(t){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(t)},extrude:function(t){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Lh(this,t)},makeGeometry:function(t){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Fh(this,t)}}),Object.assign(Ki.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(ao.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(t){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(t)},getScaleFromMatrix:function(t){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(t)},getColumnFromMatrix:function(t,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,t)},applyProjection:function(t){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(t)},fromAttribute:function(t,e,n){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},distanceToManhattan:function(t){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(t)},lengthManhattan:function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(ro.prototype,{fromAttribute:function(t,e,n){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(t,e,n)},lengthManhattan:function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()}}),Object.assign(ih.prototype,{computeTangents:function(){console.error("THREE.Geometry: .computeTangents() has been removed.")},computeLineDistances:function(){console.error("THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.")},applyMatrix:function(t){return console.warn("THREE.Geometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.assign(as.prototype,{getChildByName:function(t){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(t)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(t,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,t)},getWorldRotation:function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")},applyMatrix:function(t){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.defineProperties(as.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(t){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=t}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}}),Object.assign(_a.prototype,{setDrawMode:function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}),Object.defineProperties(_a.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),0},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}}),Object.defineProperties(gl.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}}),Object.defineProperty(Ml.prototype,"useVertexTexture",{get:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")},set:function(){console.warn("THREE.Skeleton: useVertexTexture has been removed.")}}),_l.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")},Object.defineProperty(Sp.prototype,"__arcLengthDivisions",{get:function(){return console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions},set:function(t){console.warn("THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions."),this.arcLengthDivisions=t}}),Ia.prototype.setLens=function(t,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),void 0!==e&&(this.filmGauge=e),this.setFocalLength(t)},Object.defineProperties(jp.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(t){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=t}},shadowCameraLeft:{set:function(t){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=t}},shadowCameraRight:{set:function(t){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=t}},shadowCameraTop:{set:function(t){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=t}},shadowCameraBottom:{set:function(t){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=t}},shadowCameraNear:{set:function(t){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=t}},shadowCameraFar:{set:function(t){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=t}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(t){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=t}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(t){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=t}},shadowMapHeight:{set:function(t){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=t}}}),Object.defineProperties(Ps.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Hi},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Hi)}}}),Object.assign(Ps.prototype,{setDynamic:function(t){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?Hi:Wi),this},copyIndicesArray:function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},setArray:function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(ia.prototype,{addIndex:function(t){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(t)},addAttribute:function(t,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),e&&e.isBufferAttribute||e&&e.isInterleavedBufferAttribute?"index"===t?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(t,e):(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(t,new Ps(arguments[1],arguments[2])))},addDrawCall:function(t,e,n){void 0!==n&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(t,e)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")},removeAttribute:function(t){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(t)},applyMatrix:function(t){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(t)}}),Object.defineProperties(ia.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}}),Object.defineProperties(ad.prototype,{maxInstancedCount:{get:function(){return console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount},set:function(t){console.warn("THREE.InstancedBufferGeometry: .maxInstancedCount has been renamed to .instanceCount."),this.instanceCount=t}}}),Object.defineProperties(Ud.prototype,{linePrecision:{get:function(){return console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold},set:function(t){console.warn("THREE.Raycaster: .linePrecision has been deprecated. Use .params.Line.threshold instead."),this.params.Line.threshold=t}}}),Object.defineProperties(Yc.prototype,{dynamic:{get:function(){return console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.usage===Hi},set:function(t){console.warn("THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead."),this.setUsage(t)}}}),Object.assign(Yc.prototype,{setDynamic:function(t){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(!0===t?Hi:Wi),this},setArray:function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")}}),Object.assign(Dh.prototype,{getArrays:function(){console.error("THREE.ExtrudeBufferGeometry: .getArrays() has been removed.")},addShapeList:function(){console.error("THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.")},addShape:function(){console.error("THREE.ExtrudeBufferGeometry: .addShape() has been removed.")}}),Object.assign(qc.prototype,{dispose:function(){console.error("THREE.Scene: .dispose() has been removed.")}}),Object.defineProperties($d.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}}),Object.defineProperties(Ds.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Ns}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(t){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=1===t}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(t){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=t}}}),Object.defineProperties(Hh.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}}),Object.defineProperties(Wh.prototype,{transparency:{get:function(){return console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission},set:function(t){console.warn("THREE.MeshPhysicalMaterial: .transparency has been renamed to .transmission."),this.transmission=t}}}),Object.defineProperties(Na.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(t){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=t}}}),Object.assign(jc.prototype,{clearTarget:function(t,e,n,r){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(t),this.clear(e,n,r)},animate:function(t){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(t)},getCurrentRenderTarget:function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()},getMaxAnisotropy:function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()},getPrecision:function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision},resetGLState:function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()},supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(t){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(t)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")},setFaceCulling:function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")},allocTextureUnit:function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")},setTexture:function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")},setTexture2D:function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")},setTextureCube:function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")},getActiveMipMapLevel:function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()}}),Object.defineProperties(jc.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=t}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(t){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=t}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(t){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=!0===t?3001:zi}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}}}),Object.defineProperties($c.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}}),Object.defineProperties(io.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=t}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(t){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=t}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=t}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(t){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=t}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(t){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=t}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(t){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=t}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(t){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=t}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(t){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=t}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(t){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=t}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(t){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=t}}}),Object.defineProperties(class extends as{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(!0===this.isPlaying)return void console.warn("THREE.Audio: Audio is already playing.");if(!1===this.hasPlaybackControl)return void console.warn("THREE.Audio: this Audio has no playback control.");this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(!1!==this.hasPlaybackControl)return!0===this.isPlaying&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,!0===this.loop&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this;console.warn("THREE.Audio: this Audio has no playback control.")}stop(){if(!1!==this.hasPlaybackControl)return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this;console.warn("THREE.Audio: this Audio has no playback control.")}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(t){return t||(t=[]),!0===this._connected?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){if(this.detune=t,void 0!==this.source.detune)return!0===this.isPlaying&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(!1!==this.hasPlaybackControl)return this.playbackRate=t,!0===this.isPlaying&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this;console.warn("THREE.Audio: this Audio has no playback control.")}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return!1===this.hasPlaybackControl?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(!1!==this.hasPlaybackControl)return this.loop=t,!0===this.isPlaying&&(this.source.loop=this.loop),this;console.warn("THREE.Audio: this Audio has no playback control.")}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}.prototype,{load:{value:function(t){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return(new gd).load(t,(function(t){e.setBuffer(t)})),this}},startTime:{set:function(){console.warn("THREE.Audio: .startTime is now .play( delay ).")}}}),class{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let n=0;n<e.length;n++)t+=e[n];return t/e.length}}.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()},Oa.prototype.updateCubeMap=function(t,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(t,e)},Oa.prototype.clear=function(t,e,n,r){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(t,e,n,r)},Qi.crossOrigin=void 0,Qi.loadTexture=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new _p;i.setCrossOrigin(this.crossOrigin);const o=i.load(t,n,void 0,r);return e&&(o.mapping=e),o},Qi.loadTextureCube=function(t,e,n,r){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new bp;i.setCrossOrigin(this.crossOrigin);const o=i.load(t,n,void 0,r);return e&&(o.mapping=e),o},Qi.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},Qi.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:"124"}}));var sf,af=(sf=function(t,e){return(sf=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(t,e)},function(t,e){function n(){this.constructor=t}sf(t,e),t.prototype=null===e?Object.create(e):(n.prototype=e.prototype,new n)}),uf=function(t){function e(e){void 0===e&&(e=500);var n=t.call(this)||this;n.size=e,n.fireConfig={speed:1,fireColor:{top:[0,128,255],bottom:[255,128,255]},opacity:0},n.uniforms={time:{value:1},topColor:{value:[0,0,0]},bottomColor:{value:[0,0,0]},opacity:{value:0}};var r=new $h(e,e),i=new Na({uniforms:n.uniforms,vertexShader:"varying vec2 vUv;\n\nvoid main()\n{\n  vUv = uv;\n  vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n  gl_Position = projectionMatrix * mvPosition;\n}\n",fragmentShader:"precision highp float;\nuniform float time;\nuniform vec3 topColor;\nuniform vec3 bottomColor;\nuniform float opacity;\nvarying vec2 vUv;\n\nfloat noise(vec3 p){\n  vec3 i=floor(p);\n  vec4 a=dot(i,vec3(1.,57.,21.))+vec4(0.,57.,21.,78.);\n  vec3 f=cos((p-i)*acos(-1.))*(-.5)+.5;\n  a=mix(sin(cos(a)*a),sin(cos(1.+a)*(1.+a)),f.x);\n  a.xy=mix(a.xz,a.yw,f.y);\n  return mix(a.x,a.y,f.z);\n}\n\nfloat sphere(vec3 p,vec4 spr){\n  return length(spr.xyz-p)-spr.w;\n}\n\nfloat flame(vec3 p){\n  float d=sphere(p*vec3(.5,.6,1.),vec4(.0,-.7,.0,1.));\n  return d+(noise(p+vec3(.0,time*6.,.0))+noise(p*3.)*.5)*.25*(p.y);\n}\n\nfloat scene(vec3 p){\n  return min(100.-length(p),abs(flame(p)));\n}\n\nvec4 raymarch(vec3 org,vec3 dir){\n  float d=0.,glow=0.,eps=.02;\n  vec3 p=org;\n  bool glowed=false;\n\n  for(int i=0;i<64;i++)\n  {\n    d=scene(p)+eps;\n    p+=d*dir;\n    if(d>eps)\n    {\n      if(flame(p)<.0)\n      glowed=true;\n      if(glowed)\n      glow=float(i)/64.;\n    }\n  }\n  return vec4(p,glow);\n}\n\nvoid main(){\n  vec2 v=-1.5+3.*vUv;\n\n  vec3 org=vec3(0.,-2.,4.);\n  vec3 dir=normalize(vec3(v.x*1.6,-v.y,-1.5));\n\n  vec4 p=raymarch(org,dir);\n  float glow=p.w;\n\n  vec4 col=mix(vec4(topColor,opacity),vec4(bottomColor,opacity),p.y*.02+.4);\n\n  gl_FragColor=mix(vec4(0.),col,pow(glow*2.,2.));\n}\n"});i.transparent=!0;var o=new _a(r,i);return n.add(o),n}return af(e,t),e.prototype.update=function(t){var e=this.fireConfig,n=e.speed,r=e.fireColor,i=r.top,o=r.bottom,s=e.opacity;this.uniforms.time.value+=t*n,this.uniforms.opacity.value=s,this.uniforms.topColor.value=i.map((function(t){return t/255})),this.uniforms.bottomColor.value=o.map((function(t){return t/255}))},e}(as),cf=function(){function t(t){var e=this;this.scene=new qc,this.renderer=new jc({alpha:!0}),this.clock=new wd;var n=this,r=n.renderer,i=n.scene,o=n.clock;this.camera=new Qp(t.clientWidth/-2,t.clientWidth/2,t.clientHeight/2,t.clientHeight/-2,-500,1e3),r.setSize(t.clientWidth,t.clientHeight),t.appendChild(r.domElement);var s=function(){requestAnimationFrame(s),e.update(o.getDelta()),r.render(i,e.camera)};requestAnimationFrame(s)}return t.prototype.update=function(t){},t}(),lf=function(){var t=function(e,n){return(t=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n])})(e,n)};return function(e,n){function r(){this.constructor=e}t(e,n),e.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),hf=function(t){function e(e){var n=t.call(this,e)||this;return n.fires=[],n.fire=new uf(e.clientWidth/2),n.scene.add(n.fire),n}return lf(e,t),e.prototype.update=function(t){return e=this,n=void 0,i=function(){var e;return function(t,e){var n,r,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=e.call(t,s)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}}(this,(function(n){switch(n.label){case 0:return[4,this.onUpdate()];case 1:return e=n.sent(),this.updateFires(t,e),[2]}}))},new((r=void 0)||(r=Promise))((function(t,o){function s(t){try{u(i.next(t))}catch(t){o(t)}}function a(t){try{u(i.throw(t))}catch(t){o(t)}}function u(e){var n;e.done?t(e.value):(n=e.value,n instanceof r?n:new r((function(t){t(n)}))).then(s,a)}u((i=i.apply(e,n||[])).next())}));var e,n,r,i},e.prototype.updateFires=function(t,e){var n=this.fire,r=n.fireConfig.opacity,i=e[0];if(i){var o=i[0],s=i[1],a=i[2];n.fireConfig.opacity=r>=1?1:r+.03,n.position.x=o,n.position.y=s,n.scale.x=a/n.size,n.scale.y=a/n.size,n.fireConfig.speed=s/n.size+1,n.fireConfig.fireColor.bottom[0]=Math.floor((o+1)/2),n.fireConfig.fireColor.top[1]=Math.floor((s+1)/2)}else n.fireConfig.opacity=r<=0?0:r-.2;n.update(t)},e.prototype.justifyIfNeeded=function(t){var e=this,n=this.scene,r=this.fires,i=r.length,o=t.length;i!==o&&(i>o?(r.slice(o).forEach((function(t){n.remove(t)})),this.fires=r.slice(0,o)):t.slice(i).forEach((function(){var t=new uf;n.add(t),e.fires.push(t)})))},e}(cf),pf=function(t,e,n,r){return new(n||(n=Promise))((function(i,o){function s(t){try{u(r.next(t))}catch(t){o(t)}}function a(t){try{u(r.throw(t))}catch(t){o(t)}}function u(t){var e;t.done?i(t.value):(e=t.value,e instanceof n?e:new n((function(t){t(e)}))).then(s,a)}u((r=r.apply(t,e||[])).next())}))},df=function(t,e){var n,r,i,o,s={label:0,sent:function(){if(1&i[0])throw i[1];return i[1]},trys:[],ops:[]};return o={next:a(0),throw:a(1),return:a(2)},"function"==typeof Symbol&&(o[Symbol.iterator]=function(){return this}),o;function a(o){return function(a){return function(o){if(n)throw new TypeError("Generator is already executing.");for(;s;)try{if(n=1,r&&(i=2&o[0]?r.return:o[0]?r.throw||((i=r.return)&&i.call(r),0):r.next)&&!(i=i.call(r,o[1])).done)return i;switch(r=0,i&&(o=[2&o[0],i.value]),o[0]){case 0:case 1:i=o;break;case 4:return s.label++,{value:o[1],done:!1};case 5:s.label++,r=o[1],o=[0];continue;case 7:o=s.ops.pop(),s.trys.pop();continue;default:if(!((i=(i=s.trys).length>0&&i[i.length-1])||6!==o[0]&&2!==o[0])){s=0;continue}if(3===o[0]&&(!i||o[1]>i[0]&&o[1]<i[3])){s.label=o[1];break}if(6===o[0]&&s.label<i[1]){s.label=i[1],i=o;break}if(i&&s.label<i[2]){s.label=i[2],s.ops.push(o);break}i[2]&&s.ops.pop(),s.trys.pop();continue}o=e.call(t,s)}catch(t){o=[6,t],r=0}finally{n=i=0}if(5&o[0])throw o[1];return{value:o[0]?o[1]:void 0,done:!0}}([o,a])}}};!function(){pf(this,void 0,void 0,(function(){var t,n,r,i,o,s,a,u,c,l=this;return df(this,(function(h){switch(h.label){case 0:t=document.getElementById("app"),h.label=1;case 1:return h.trys.push([1,3,,4]),[4,(p=t,mi(void 0,void 0,void 0,(function(){var t;return gi(this,(function(n){switch(n.label){case 0:return[4,vi()];case 1:return t=n.sent(),[4,e(p)];case 2:return[2,[n.sent(),t]]}}))})))];case 2:return n=h.sent(),r=n[0],i=n[1],f=(d=r).videoWidth/d.videoHeight,(m=d.offsetWidth)/(g=d.offsetHeight)>f?m=g*f:g=m/f,u=function(t,e){var n=document.createElement("div");return n.style.position="absolute",n.style.left="50%",n.style.top="50%",n.style.transform="translateY(-50%) translateX(-50%)",n.style.width=t+"px",n.style.height=e+"px",n}(s=(o=[m,g])[0],a=o[1]),t.appendChild(u),new hf(u).onUpdate=function(){return pf(l,void 0,void 0,(function(){return df(this,(function(t){switch(t.label){case 0:return[4,i.estimateHands(r)];case 1:return[2,t.sent().map((function(t){var e,n,r=t.boundingBox,i=r.topLeft,o=i[0],u=i[1],c=r.bottomRight,l=c[0],h=c[1];return[(n=[s,a])[0]/2-((e=[o,u,l,h])[0]+e[2])/2,n[1]/2-(e[1]+e[3])/2,e[2]-e[0],e[3]-e[1]]}))]}}))}))},[3,4];case 3:return c=h.sent(),alert(c),[3,4];case 4:return[2]}var p,d,f,m,g}))}))}()}()}();